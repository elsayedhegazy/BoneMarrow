//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BoneMarrow {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FullDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FullDataSet : global::System.Data.DataSet {
        
        private AntibioticResultDataTable tableAntibioticResult;
        
        private AntibioticsSourceDataTable tableAntibioticsSource;
        
        private BoneMarrowResultsDataTable tableBoneMarrowResults;
        
        private CulturesResultDataTable tableCulturesResult;
        
        private CulturesSourceDataTable tableCulturesSource;
        
        private ImagesDataTable tableImages;
        
        private ImmunophenotypingDataTable tableImmunophenotyping;
        
        private OrganismSourceDataTable tableOrganismSource;
        
        private PatientDetailsDataTable tablePatientDetails;
        
        private Select_ImmunophenotypingDataTable tableSelect_Immunophenotyping;
        
        private SelectBMAsp_DATADataTable tableSelectBMAsp_DATA;
        
        private SelectBMB_DATADataTable tableSelectBMB_DATA;
        
        private SelectBoneMarrowImagesDataTable tableSelectBoneMarrowImages;
        
        private SelectCytogeneticsDataDataTable tableSelectCytogeneticsData;
        
        private ProcSelectBMAsp_DataDataTable tableProcSelectBMAsp_Data;
        
        private ProcSelectBMB_DataDataTable tableProcSelectBMB_Data;
        
        private ProcSelectBMimagesDataTable tableProcSelectBMimages;
        
        private ProcSelectCytogeneticsDataTable tableProcSelectCytogenetics;
        
        private ProcSelectImmunophenotypingDataTable tableProcSelectImmunophenotyping;
        
        private global::System.Data.DataRelation relationFK_AntibioticResult_CulturesResult;
        
        private global::System.Data.DataRelation relationFK_BoneMarrowResults_PatientDetails;
        
        private global::System.Data.DataRelation relationFK_CulturesResult_CulturesSource;
        
        private global::System.Data.DataRelation relationFK_CulturesResult_OrganismSource;
        
        private global::System.Data.DataRelation relationFK_CulturesResult_PatientDetails;
        
        private global::System.Data.DataRelation relationFK_Images_PatientDetails;
        
        private global::System.Data.DataRelation relationFK_Immunophenotyping_PatientDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FullDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected FullDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AntibioticResult"] != null)) {
                    base.Tables.Add(new AntibioticResultDataTable(ds.Tables["AntibioticResult"]));
                }
                if ((ds.Tables["AntibioticsSource"] != null)) {
                    base.Tables.Add(new AntibioticsSourceDataTable(ds.Tables["AntibioticsSource"]));
                }
                if ((ds.Tables["BoneMarrowResults"] != null)) {
                    base.Tables.Add(new BoneMarrowResultsDataTable(ds.Tables["BoneMarrowResults"]));
                }
                if ((ds.Tables["CulturesResult"] != null)) {
                    base.Tables.Add(new CulturesResultDataTable(ds.Tables["CulturesResult"]));
                }
                if ((ds.Tables["CulturesSource"] != null)) {
                    base.Tables.Add(new CulturesSourceDataTable(ds.Tables["CulturesSource"]));
                }
                if ((ds.Tables["Images"] != null)) {
                    base.Tables.Add(new ImagesDataTable(ds.Tables["Images"]));
                }
                if ((ds.Tables["Immunophenotyping"] != null)) {
                    base.Tables.Add(new ImmunophenotypingDataTable(ds.Tables["Immunophenotyping"]));
                }
                if ((ds.Tables["OrganismSource"] != null)) {
                    base.Tables.Add(new OrganismSourceDataTable(ds.Tables["OrganismSource"]));
                }
                if ((ds.Tables["PatientDetails"] != null)) {
                    base.Tables.Add(new PatientDetailsDataTable(ds.Tables["PatientDetails"]));
                }
                if ((ds.Tables["Select_Immunophenotyping"] != null)) {
                    base.Tables.Add(new Select_ImmunophenotypingDataTable(ds.Tables["Select_Immunophenotyping"]));
                }
                if ((ds.Tables["SelectBMAsp_DATA"] != null)) {
                    base.Tables.Add(new SelectBMAsp_DATADataTable(ds.Tables["SelectBMAsp_DATA"]));
                }
                if ((ds.Tables["SelectBMB_DATA"] != null)) {
                    base.Tables.Add(new SelectBMB_DATADataTable(ds.Tables["SelectBMB_DATA"]));
                }
                if ((ds.Tables["SelectBoneMarrowImages"] != null)) {
                    base.Tables.Add(new SelectBoneMarrowImagesDataTable(ds.Tables["SelectBoneMarrowImages"]));
                }
                if ((ds.Tables["SelectCytogeneticsData"] != null)) {
                    base.Tables.Add(new SelectCytogeneticsDataDataTable(ds.Tables["SelectCytogeneticsData"]));
                }
                if ((ds.Tables["ProcSelectBMAsp_Data"] != null)) {
                    base.Tables.Add(new ProcSelectBMAsp_DataDataTable(ds.Tables["ProcSelectBMAsp_Data"]));
                }
                if ((ds.Tables["ProcSelectBMB_Data"] != null)) {
                    base.Tables.Add(new ProcSelectBMB_DataDataTable(ds.Tables["ProcSelectBMB_Data"]));
                }
                if ((ds.Tables["ProcSelectBMimages"] != null)) {
                    base.Tables.Add(new ProcSelectBMimagesDataTable(ds.Tables["ProcSelectBMimages"]));
                }
                if ((ds.Tables["ProcSelectCytogenetics"] != null)) {
                    base.Tables.Add(new ProcSelectCytogeneticsDataTable(ds.Tables["ProcSelectCytogenetics"]));
                }
                if ((ds.Tables["ProcSelectImmunophenotyping"] != null)) {
                    base.Tables.Add(new ProcSelectImmunophenotypingDataTable(ds.Tables["ProcSelectImmunophenotyping"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AntibioticResultDataTable AntibioticResult {
            get {
                return this.tableAntibioticResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AntibioticsSourceDataTable AntibioticsSource {
            get {
                return this.tableAntibioticsSource;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BoneMarrowResultsDataTable BoneMarrowResults {
            get {
                return this.tableBoneMarrowResults;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CulturesResultDataTable CulturesResult {
            get {
                return this.tableCulturesResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CulturesSourceDataTable CulturesSource {
            get {
                return this.tableCulturesSource;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ImagesDataTable Images {
            get {
                return this.tableImages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ImmunophenotypingDataTable Immunophenotyping {
            get {
                return this.tableImmunophenotyping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrganismSourceDataTable OrganismSource {
            get {
                return this.tableOrganismSource;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PatientDetailsDataTable PatientDetails {
            get {
                return this.tablePatientDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Select_ImmunophenotypingDataTable Select_Immunophenotyping {
            get {
                return this.tableSelect_Immunophenotyping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectBMAsp_DATADataTable SelectBMAsp_DATA {
            get {
                return this.tableSelectBMAsp_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectBMB_DATADataTable SelectBMB_DATA {
            get {
                return this.tableSelectBMB_DATA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectBoneMarrowImagesDataTable SelectBoneMarrowImages {
            get {
                return this.tableSelectBoneMarrowImages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectCytogeneticsDataDataTable SelectCytogeneticsData {
            get {
                return this.tableSelectCytogeneticsData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProcSelectBMAsp_DataDataTable ProcSelectBMAsp_Data {
            get {
                return this.tableProcSelectBMAsp_Data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProcSelectBMB_DataDataTable ProcSelectBMB_Data {
            get {
                return this.tableProcSelectBMB_Data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProcSelectBMimagesDataTable ProcSelectBMimages {
            get {
                return this.tableProcSelectBMimages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProcSelectCytogeneticsDataTable ProcSelectCytogenetics {
            get {
                return this.tableProcSelectCytogenetics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProcSelectImmunophenotypingDataTable ProcSelectImmunophenotyping {
            get {
                return this.tableProcSelectImmunophenotyping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FullDataSet cln = ((FullDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AntibioticResult"] != null)) {
                    base.Tables.Add(new AntibioticResultDataTable(ds.Tables["AntibioticResult"]));
                }
                if ((ds.Tables["AntibioticsSource"] != null)) {
                    base.Tables.Add(new AntibioticsSourceDataTable(ds.Tables["AntibioticsSource"]));
                }
                if ((ds.Tables["BoneMarrowResults"] != null)) {
                    base.Tables.Add(new BoneMarrowResultsDataTable(ds.Tables["BoneMarrowResults"]));
                }
                if ((ds.Tables["CulturesResult"] != null)) {
                    base.Tables.Add(new CulturesResultDataTable(ds.Tables["CulturesResult"]));
                }
                if ((ds.Tables["CulturesSource"] != null)) {
                    base.Tables.Add(new CulturesSourceDataTable(ds.Tables["CulturesSource"]));
                }
                if ((ds.Tables["Images"] != null)) {
                    base.Tables.Add(new ImagesDataTable(ds.Tables["Images"]));
                }
                if ((ds.Tables["Immunophenotyping"] != null)) {
                    base.Tables.Add(new ImmunophenotypingDataTable(ds.Tables["Immunophenotyping"]));
                }
                if ((ds.Tables["OrganismSource"] != null)) {
                    base.Tables.Add(new OrganismSourceDataTable(ds.Tables["OrganismSource"]));
                }
                if ((ds.Tables["PatientDetails"] != null)) {
                    base.Tables.Add(new PatientDetailsDataTable(ds.Tables["PatientDetails"]));
                }
                if ((ds.Tables["Select_Immunophenotyping"] != null)) {
                    base.Tables.Add(new Select_ImmunophenotypingDataTable(ds.Tables["Select_Immunophenotyping"]));
                }
                if ((ds.Tables["SelectBMAsp_DATA"] != null)) {
                    base.Tables.Add(new SelectBMAsp_DATADataTable(ds.Tables["SelectBMAsp_DATA"]));
                }
                if ((ds.Tables["SelectBMB_DATA"] != null)) {
                    base.Tables.Add(new SelectBMB_DATADataTable(ds.Tables["SelectBMB_DATA"]));
                }
                if ((ds.Tables["SelectBoneMarrowImages"] != null)) {
                    base.Tables.Add(new SelectBoneMarrowImagesDataTable(ds.Tables["SelectBoneMarrowImages"]));
                }
                if ((ds.Tables["SelectCytogeneticsData"] != null)) {
                    base.Tables.Add(new SelectCytogeneticsDataDataTable(ds.Tables["SelectCytogeneticsData"]));
                }
                if ((ds.Tables["ProcSelectBMAsp_Data"] != null)) {
                    base.Tables.Add(new ProcSelectBMAsp_DataDataTable(ds.Tables["ProcSelectBMAsp_Data"]));
                }
                if ((ds.Tables["ProcSelectBMB_Data"] != null)) {
                    base.Tables.Add(new ProcSelectBMB_DataDataTable(ds.Tables["ProcSelectBMB_Data"]));
                }
                if ((ds.Tables["ProcSelectBMimages"] != null)) {
                    base.Tables.Add(new ProcSelectBMimagesDataTable(ds.Tables["ProcSelectBMimages"]));
                }
                if ((ds.Tables["ProcSelectCytogenetics"] != null)) {
                    base.Tables.Add(new ProcSelectCytogeneticsDataTable(ds.Tables["ProcSelectCytogenetics"]));
                }
                if ((ds.Tables["ProcSelectImmunophenotyping"] != null)) {
                    base.Tables.Add(new ProcSelectImmunophenotypingDataTable(ds.Tables["ProcSelectImmunophenotyping"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAntibioticResult = ((AntibioticResultDataTable)(base.Tables["AntibioticResult"]));
            if ((initTable == true)) {
                if ((this.tableAntibioticResult != null)) {
                    this.tableAntibioticResult.InitVars();
                }
            }
            this.tableAntibioticsSource = ((AntibioticsSourceDataTable)(base.Tables["AntibioticsSource"]));
            if ((initTable == true)) {
                if ((this.tableAntibioticsSource != null)) {
                    this.tableAntibioticsSource.InitVars();
                }
            }
            this.tableBoneMarrowResults = ((BoneMarrowResultsDataTable)(base.Tables["BoneMarrowResults"]));
            if ((initTable == true)) {
                if ((this.tableBoneMarrowResults != null)) {
                    this.tableBoneMarrowResults.InitVars();
                }
            }
            this.tableCulturesResult = ((CulturesResultDataTable)(base.Tables["CulturesResult"]));
            if ((initTable == true)) {
                if ((this.tableCulturesResult != null)) {
                    this.tableCulturesResult.InitVars();
                }
            }
            this.tableCulturesSource = ((CulturesSourceDataTable)(base.Tables["CulturesSource"]));
            if ((initTable == true)) {
                if ((this.tableCulturesSource != null)) {
                    this.tableCulturesSource.InitVars();
                }
            }
            this.tableImages = ((ImagesDataTable)(base.Tables["Images"]));
            if ((initTable == true)) {
                if ((this.tableImages != null)) {
                    this.tableImages.InitVars();
                }
            }
            this.tableImmunophenotyping = ((ImmunophenotypingDataTable)(base.Tables["Immunophenotyping"]));
            if ((initTable == true)) {
                if ((this.tableImmunophenotyping != null)) {
                    this.tableImmunophenotyping.InitVars();
                }
            }
            this.tableOrganismSource = ((OrganismSourceDataTable)(base.Tables["OrganismSource"]));
            if ((initTable == true)) {
                if ((this.tableOrganismSource != null)) {
                    this.tableOrganismSource.InitVars();
                }
            }
            this.tablePatientDetails = ((PatientDetailsDataTable)(base.Tables["PatientDetails"]));
            if ((initTable == true)) {
                if ((this.tablePatientDetails != null)) {
                    this.tablePatientDetails.InitVars();
                }
            }
            this.tableSelect_Immunophenotyping = ((Select_ImmunophenotypingDataTable)(base.Tables["Select_Immunophenotyping"]));
            if ((initTable == true)) {
                if ((this.tableSelect_Immunophenotyping != null)) {
                    this.tableSelect_Immunophenotyping.InitVars();
                }
            }
            this.tableSelectBMAsp_DATA = ((SelectBMAsp_DATADataTable)(base.Tables["SelectBMAsp_DATA"]));
            if ((initTable == true)) {
                if ((this.tableSelectBMAsp_DATA != null)) {
                    this.tableSelectBMAsp_DATA.InitVars();
                }
            }
            this.tableSelectBMB_DATA = ((SelectBMB_DATADataTable)(base.Tables["SelectBMB_DATA"]));
            if ((initTable == true)) {
                if ((this.tableSelectBMB_DATA != null)) {
                    this.tableSelectBMB_DATA.InitVars();
                }
            }
            this.tableSelectBoneMarrowImages = ((SelectBoneMarrowImagesDataTable)(base.Tables["SelectBoneMarrowImages"]));
            if ((initTable == true)) {
                if ((this.tableSelectBoneMarrowImages != null)) {
                    this.tableSelectBoneMarrowImages.InitVars();
                }
            }
            this.tableSelectCytogeneticsData = ((SelectCytogeneticsDataDataTable)(base.Tables["SelectCytogeneticsData"]));
            if ((initTable == true)) {
                if ((this.tableSelectCytogeneticsData != null)) {
                    this.tableSelectCytogeneticsData.InitVars();
                }
            }
            this.tableProcSelectBMAsp_Data = ((ProcSelectBMAsp_DataDataTable)(base.Tables["ProcSelectBMAsp_Data"]));
            if ((initTable == true)) {
                if ((this.tableProcSelectBMAsp_Data != null)) {
                    this.tableProcSelectBMAsp_Data.InitVars();
                }
            }
            this.tableProcSelectBMB_Data = ((ProcSelectBMB_DataDataTable)(base.Tables["ProcSelectBMB_Data"]));
            if ((initTable == true)) {
                if ((this.tableProcSelectBMB_Data != null)) {
                    this.tableProcSelectBMB_Data.InitVars();
                }
            }
            this.tableProcSelectBMimages = ((ProcSelectBMimagesDataTable)(base.Tables["ProcSelectBMimages"]));
            if ((initTable == true)) {
                if ((this.tableProcSelectBMimages != null)) {
                    this.tableProcSelectBMimages.InitVars();
                }
            }
            this.tableProcSelectCytogenetics = ((ProcSelectCytogeneticsDataTable)(base.Tables["ProcSelectCytogenetics"]));
            if ((initTable == true)) {
                if ((this.tableProcSelectCytogenetics != null)) {
                    this.tableProcSelectCytogenetics.InitVars();
                }
            }
            this.tableProcSelectImmunophenotyping = ((ProcSelectImmunophenotypingDataTable)(base.Tables["ProcSelectImmunophenotyping"]));
            if ((initTable == true)) {
                if ((this.tableProcSelectImmunophenotyping != null)) {
                    this.tableProcSelectImmunophenotyping.InitVars();
                }
            }
            this.relationFK_AntibioticResult_CulturesResult = this.Relations["FK_AntibioticResult_CulturesResult"];
            this.relationFK_BoneMarrowResults_PatientDetails = this.Relations["FK_BoneMarrowResults_PatientDetails"];
            this.relationFK_CulturesResult_CulturesSource = this.Relations["FK_CulturesResult_CulturesSource"];
            this.relationFK_CulturesResult_OrganismSource = this.Relations["FK_CulturesResult_OrganismSource"];
            this.relationFK_CulturesResult_PatientDetails = this.Relations["FK_CulturesResult_PatientDetails"];
            this.relationFK_Images_PatientDetails = this.Relations["FK_Images_PatientDetails"];
            this.relationFK_Immunophenotyping_PatientDetails = this.Relations["FK_Immunophenotyping_PatientDetails"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FullDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FullDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAntibioticResult = new AntibioticResultDataTable();
            base.Tables.Add(this.tableAntibioticResult);
            this.tableAntibioticsSource = new AntibioticsSourceDataTable();
            base.Tables.Add(this.tableAntibioticsSource);
            this.tableBoneMarrowResults = new BoneMarrowResultsDataTable();
            base.Tables.Add(this.tableBoneMarrowResults);
            this.tableCulturesResult = new CulturesResultDataTable();
            base.Tables.Add(this.tableCulturesResult);
            this.tableCulturesSource = new CulturesSourceDataTable();
            base.Tables.Add(this.tableCulturesSource);
            this.tableImages = new ImagesDataTable();
            base.Tables.Add(this.tableImages);
            this.tableImmunophenotyping = new ImmunophenotypingDataTable();
            base.Tables.Add(this.tableImmunophenotyping);
            this.tableOrganismSource = new OrganismSourceDataTable();
            base.Tables.Add(this.tableOrganismSource);
            this.tablePatientDetails = new PatientDetailsDataTable();
            base.Tables.Add(this.tablePatientDetails);
            this.tableSelect_Immunophenotyping = new Select_ImmunophenotypingDataTable();
            base.Tables.Add(this.tableSelect_Immunophenotyping);
            this.tableSelectBMAsp_DATA = new SelectBMAsp_DATADataTable();
            base.Tables.Add(this.tableSelectBMAsp_DATA);
            this.tableSelectBMB_DATA = new SelectBMB_DATADataTable();
            base.Tables.Add(this.tableSelectBMB_DATA);
            this.tableSelectBoneMarrowImages = new SelectBoneMarrowImagesDataTable();
            base.Tables.Add(this.tableSelectBoneMarrowImages);
            this.tableSelectCytogeneticsData = new SelectCytogeneticsDataDataTable();
            base.Tables.Add(this.tableSelectCytogeneticsData);
            this.tableProcSelectBMAsp_Data = new ProcSelectBMAsp_DataDataTable();
            base.Tables.Add(this.tableProcSelectBMAsp_Data);
            this.tableProcSelectBMB_Data = new ProcSelectBMB_DataDataTable();
            base.Tables.Add(this.tableProcSelectBMB_Data);
            this.tableProcSelectBMimages = new ProcSelectBMimagesDataTable();
            base.Tables.Add(this.tableProcSelectBMimages);
            this.tableProcSelectCytogenetics = new ProcSelectCytogeneticsDataTable();
            base.Tables.Add(this.tableProcSelectCytogenetics);
            this.tableProcSelectImmunophenotyping = new ProcSelectImmunophenotypingDataTable();
            base.Tables.Add(this.tableProcSelectImmunophenotyping);
            this.relationFK_AntibioticResult_CulturesResult = new global::System.Data.DataRelation("FK_AntibioticResult_CulturesResult", new global::System.Data.DataColumn[] {
                        this.tableCulturesResult.CulturesResultsUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAntibioticResult.CulturesResultsUIDColumn}, false);
            this.Relations.Add(this.relationFK_AntibioticResult_CulturesResult);
            this.relationFK_BoneMarrowResults_PatientDetails = new global::System.Data.DataRelation("FK_BoneMarrowResults_PatientDetails", new global::System.Data.DataColumn[] {
                        this.tablePatientDetails.PatientIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBoneMarrowResults.IDColumn}, false);
            this.Relations.Add(this.relationFK_BoneMarrowResults_PatientDetails);
            this.relationFK_CulturesResult_CulturesSource = new global::System.Data.DataRelation("FK_CulturesResult_CulturesSource", new global::System.Data.DataColumn[] {
                        this.tableCulturesSource.CultureUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCulturesResult.CultureUIDColumn}, false);
            this.Relations.Add(this.relationFK_CulturesResult_CulturesSource);
            this.relationFK_CulturesResult_OrganismSource = new global::System.Data.DataRelation("FK_CulturesResult_OrganismSource", new global::System.Data.DataColumn[] {
                        this.tableOrganismSource.OrganismUIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCulturesResult.OrganismUIDColumn}, false);
            this.Relations.Add(this.relationFK_CulturesResult_OrganismSource);
            this.relationFK_CulturesResult_PatientDetails = new global::System.Data.DataRelation("FK_CulturesResult_PatientDetails", new global::System.Data.DataColumn[] {
                        this.tablePatientDetails.PatientIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCulturesResult.PatientIDColumn}, false);
            this.Relations.Add(this.relationFK_CulturesResult_PatientDetails);
            this.relationFK_Images_PatientDetails = new global::System.Data.DataRelation("FK_Images_PatientDetails", new global::System.Data.DataColumn[] {
                        this.tablePatientDetails.PatientIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableImages.IDColumn}, false);
            this.Relations.Add(this.relationFK_Images_PatientDetails);
            this.relationFK_Immunophenotyping_PatientDetails = new global::System.Data.DataRelation("FK_Immunophenotyping_PatientDetails", new global::System.Data.DataColumn[] {
                        this.tablePatientDetails.PatientIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableImmunophenotyping.PatientIDColumn}, false);
            this.Relations.Add(this.relationFK_Immunophenotyping_PatientDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAntibioticResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAntibioticsSource() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBoneMarrowResults() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCulturesResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCulturesSource() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeImages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeImmunophenotyping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOrganismSource() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePatientDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelect_Immunophenotyping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectBMAsp_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectBMB_DATA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectBoneMarrowImages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectCytogeneticsData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProcSelectBMAsp_Data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProcSelectBMB_Data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProcSelectBMimages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProcSelectCytogenetics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProcSelectImmunophenotyping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FullDataSet ds = new FullDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AntibioticResultRowChangeEventHandler(object sender, AntibioticResultRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AntibioticsSourceRowChangeEventHandler(object sender, AntibioticsSourceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BoneMarrowResultsRowChangeEventHandler(object sender, BoneMarrowResultsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CulturesResultRowChangeEventHandler(object sender, CulturesResultRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CulturesSourceRowChangeEventHandler(object sender, CulturesSourceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ImagesRowChangeEventHandler(object sender, ImagesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ImmunophenotypingRowChangeEventHandler(object sender, ImmunophenotypingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OrganismSourceRowChangeEventHandler(object sender, OrganismSourceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PatientDetailsRowChangeEventHandler(object sender, PatientDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Select_ImmunophenotypingRowChangeEventHandler(object sender, Select_ImmunophenotypingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectBMAsp_DATARowChangeEventHandler(object sender, SelectBMAsp_DATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectBMB_DATARowChangeEventHandler(object sender, SelectBMB_DATARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectBoneMarrowImagesRowChangeEventHandler(object sender, SelectBoneMarrowImagesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectCytogeneticsDataRowChangeEventHandler(object sender, SelectCytogeneticsDataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProcSelectBMAsp_DataRowChangeEventHandler(object sender, ProcSelectBMAsp_DataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProcSelectBMB_DataRowChangeEventHandler(object sender, ProcSelectBMB_DataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProcSelectBMimagesRowChangeEventHandler(object sender, ProcSelectBMimagesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProcSelectCytogeneticsRowChangeEventHandler(object sender, ProcSelectCytogeneticsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProcSelectImmunophenotypingRowChangeEventHandler(object sender, ProcSelectImmunophenotypingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AntibioticResultDataTable : global::System.Data.TypedTableBase<AntibioticResultRow> {
            
            private global::System.Data.DataColumn columnCulturesResultsUID;
            
            private global::System.Data.DataColumn columnAntibioticResultUID;
            
            private global::System.Data.DataColumn columnAntibioticNameForResult;
            
            private global::System.Data.DataColumn columnAntibioticStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultDataTable() {
                this.TableName = "AntibioticResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AntibioticResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AntibioticResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CulturesResultsUIDColumn {
                get {
                    return this.columnCulturesResultsUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticResultUIDColumn {
                get {
                    return this.columnAntibioticResultUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticNameForResultColumn {
                get {
                    return this.columnAntibioticNameForResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticStatusColumn {
                get {
                    return this.columnAntibioticStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow this[int index] {
                get {
                    return ((AntibioticResultRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticResultRowChangeEventHandler AntibioticResultRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticResultRowChangeEventHandler AntibioticResultRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticResultRowChangeEventHandler AntibioticResultRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticResultRowChangeEventHandler AntibioticResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAntibioticResultRow(AntibioticResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow AddAntibioticResultRow(CulturesResultRow parentCulturesResultRowByFK_AntibioticResult_CulturesResult, string AntibioticNameForResult, string AntibioticStatus) {
                AntibioticResultRow rowAntibioticResultRow = ((AntibioticResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AntibioticNameForResult,
                        AntibioticStatus};
                if ((parentCulturesResultRowByFK_AntibioticResult_CulturesResult != null)) {
                    columnValuesArray[0] = parentCulturesResultRowByFK_AntibioticResult_CulturesResult[2];
                }
                rowAntibioticResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAntibioticResultRow);
                return rowAntibioticResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow FindByAntibioticResultUID(int AntibioticResultUID) {
                return ((AntibioticResultRow)(this.Rows.Find(new object[] {
                            AntibioticResultUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AntibioticResultDataTable cln = ((AntibioticResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AntibioticResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCulturesResultsUID = base.Columns["CulturesResultsUID"];
                this.columnAntibioticResultUID = base.Columns["AntibioticResultUID"];
                this.columnAntibioticNameForResult = base.Columns["AntibioticNameForResult"];
                this.columnAntibioticStatus = base.Columns["AntibioticStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCulturesResultsUID = new global::System.Data.DataColumn("CulturesResultsUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCulturesResultsUID);
                this.columnAntibioticResultUID = new global::System.Data.DataColumn("AntibioticResultUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticResultUID);
                this.columnAntibioticNameForResult = new global::System.Data.DataColumn("AntibioticNameForResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticNameForResult);
                this.columnAntibioticStatus = new global::System.Data.DataColumn("AntibioticStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAntibioticResultUID}, true));
                this.columnAntibioticResultUID.AutoIncrement = true;
                this.columnAntibioticResultUID.AutoIncrementSeed = -1;
                this.columnAntibioticResultUID.AutoIncrementStep = -1;
                this.columnAntibioticResultUID.AllowDBNull = false;
                this.columnAntibioticResultUID.ReadOnly = true;
                this.columnAntibioticResultUID.Unique = true;
                this.columnAntibioticNameForResult.MaxLength = 2147483647;
                this.columnAntibioticStatus.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow NewAntibioticResultRow() {
                return ((AntibioticResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AntibioticResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AntibioticResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AntibioticResultRowChanged != null)) {
                    this.AntibioticResultRowChanged(this, new AntibioticResultRowChangeEvent(((AntibioticResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AntibioticResultRowChanging != null)) {
                    this.AntibioticResultRowChanging(this, new AntibioticResultRowChangeEvent(((AntibioticResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AntibioticResultRowDeleted != null)) {
                    this.AntibioticResultRowDeleted(this, new AntibioticResultRowChangeEvent(((AntibioticResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AntibioticResultRowDeleting != null)) {
                    this.AntibioticResultRowDeleting(this, new AntibioticResultRowChangeEvent(((AntibioticResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAntibioticResultRow(AntibioticResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AntibioticResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AntibioticsSourceDataTable : global::System.Data.TypedTableBase<AntibioticsSourceRow> {
            
            private global::System.Data.DataColumn columnAntibioticUID;
            
            private global::System.Data.DataColumn columnAntibioticName;
            
            private global::System.Data.DataColumn columnAntibioticAbbreviation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceDataTable() {
                this.TableName = "AntibioticsSource";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AntibioticsSourceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AntibioticsSourceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticUIDColumn {
                get {
                    return this.columnAntibioticUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticNameColumn {
                get {
                    return this.columnAntibioticName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AntibioticAbbreviationColumn {
                get {
                    return this.columnAntibioticAbbreviation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRow this[int index] {
                get {
                    return ((AntibioticsSourceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticsSourceRowChangeEventHandler AntibioticsSourceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticsSourceRowChangeEventHandler AntibioticsSourceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticsSourceRowChangeEventHandler AntibioticsSourceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AntibioticsSourceRowChangeEventHandler AntibioticsSourceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAntibioticsSourceRow(AntibioticsSourceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRow AddAntibioticsSourceRow(string AntibioticName, string AntibioticAbbreviation) {
                AntibioticsSourceRow rowAntibioticsSourceRow = ((AntibioticsSourceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AntibioticName,
                        AntibioticAbbreviation};
                rowAntibioticsSourceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAntibioticsSourceRow);
                return rowAntibioticsSourceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRow FindByAntibioticUID(int AntibioticUID) {
                return ((AntibioticsSourceRow)(this.Rows.Find(new object[] {
                            AntibioticUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AntibioticsSourceDataTable cln = ((AntibioticsSourceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AntibioticsSourceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAntibioticUID = base.Columns["AntibioticUID"];
                this.columnAntibioticName = base.Columns["AntibioticName"];
                this.columnAntibioticAbbreviation = base.Columns["AntibioticAbbreviation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAntibioticUID = new global::System.Data.DataColumn("AntibioticUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticUID);
                this.columnAntibioticName = new global::System.Data.DataColumn("AntibioticName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticName);
                this.columnAntibioticAbbreviation = new global::System.Data.DataColumn("AntibioticAbbreviation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticAbbreviation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAntibioticUID}, true));
                this.columnAntibioticUID.AutoIncrement = true;
                this.columnAntibioticUID.AutoIncrementSeed = -1;
                this.columnAntibioticUID.AutoIncrementStep = -1;
                this.columnAntibioticUID.AllowDBNull = false;
                this.columnAntibioticUID.ReadOnly = true;
                this.columnAntibioticUID.Unique = true;
                this.columnAntibioticName.MaxLength = 2147483647;
                this.columnAntibioticAbbreviation.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRow NewAntibioticsSourceRow() {
                return ((AntibioticsSourceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AntibioticsSourceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AntibioticsSourceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AntibioticsSourceRowChanged != null)) {
                    this.AntibioticsSourceRowChanged(this, new AntibioticsSourceRowChangeEvent(((AntibioticsSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AntibioticsSourceRowChanging != null)) {
                    this.AntibioticsSourceRowChanging(this, new AntibioticsSourceRowChangeEvent(((AntibioticsSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AntibioticsSourceRowDeleted != null)) {
                    this.AntibioticsSourceRowDeleted(this, new AntibioticsSourceRowChangeEvent(((AntibioticsSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AntibioticsSourceRowDeleting != null)) {
                    this.AntibioticsSourceRowDeleting(this, new AntibioticsSourceRowChangeEvent(((AntibioticsSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAntibioticsSourceRow(AntibioticsSourceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AntibioticsSourceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BoneMarrowResultsDataTable : global::System.Data.TypedTableBase<BoneMarrowResultsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBMBsite;
            
            private global::System.Data.DataColumn columnBMAspSite;
            
            private global::System.Data.DataColumn columnBMB_HistoExamin;
            
            private global::System.Data.DataColumn columnBMAspComment;
            
            private global::System.Data.DataColumn columnBlasts;
            
            private global::System.Data.DataColumn columnPromyelocytes;
            
            private global::System.Data.DataColumn columnMyelocytes;
            
            private global::System.Data.DataColumn columnJuvenile;
            
            private global::System.Data.DataColumn columnStaff;
            
            private global::System.Data.DataColumn columnSegmented;
            
            private global::System.Data.DataColumn columnLymphocytes;
            
            private global::System.Data.DataColumn columnMonocytes;
            
            private global::System.Data.DataColumn columnEosinophils;
            
            private global::System.Data.DataColumn columnBasophils;
            
            private global::System.Data.DataColumn columnNormoblasts;
            
            private global::System.Data.DataColumn columnPlasmaCells;
            
            private global::System.Data.DataColumn columnBoneHardness;
            
            private global::System.Data.DataColumn columnBoneSize;
            
            private global::System.Data.DataColumn columnBMBconclusion;
            
            private global::System.Data.DataColumn columnBMAconclusion;
            
            private global::System.Data.DataColumn columnUni2;
            
            private global::System.Data.DataColumn columnPhenotypeImmuPhen;
            
            private global::System.Data.DataColumn columnCommentImmuPhen;
            
            private global::System.Data.DataColumn columnConclusionImmuPheno;
            
            private global::System.Data.DataColumn columnCytoTestName;
            
            private global::System.Data.DataColumn columnCytoSpecimen;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount45;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount46;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount47;
            
            private global::System.Data.DataColumn columnCytoChromosomeCountTotal;
            
            private global::System.Data.DataColumn columnCytoCellsCounted45;
            
            private global::System.Data.DataColumn columnCytoCellsCounted46;
            
            private global::System.Data.DataColumn columnCytoCellsCounted47;
            
            private global::System.Data.DataColumn columnCytoCellsCounted4Total;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed45;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed46;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed47;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographedTotal;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped45;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped46;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped47;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotypedTotal;
            
            private global::System.Data.DataColumn columnCytoKaryotype;
            
            private global::System.Data.DataColumn columnCytoInterpretation;
            
            private global::System.Data.DataColumn columnCytoRecommendation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsDataTable() {
                this.TableName = "BoneMarrowResults";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BoneMarrowResultsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BoneMarrowResultsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBsiteColumn {
                get {
                    return this.columnBMBsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspSiteColumn {
                get {
                    return this.columnBMAspSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMB_HistoExaminColumn {
                get {
                    return this.columnBMB_HistoExamin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspCommentColumn {
                get {
                    return this.columnBMAspComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlastsColumn {
                get {
                    return this.columnBlasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromyelocytesColumn {
                get {
                    return this.columnPromyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MyelocytesColumn {
                get {
                    return this.columnMyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JuvenileColumn {
                get {
                    return this.columnJuvenile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffColumn {
                get {
                    return this.columnStaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SegmentedColumn {
                get {
                    return this.columnSegmented;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LymphocytesColumn {
                get {
                    return this.columnLymphocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonocytesColumn {
                get {
                    return this.columnMonocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EosinophilsColumn {
                get {
                    return this.columnEosinophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasophilsColumn {
                get {
                    return this.columnBasophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormoblastsColumn {
                get {
                    return this.columnNormoblasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlasmaCellsColumn {
                get {
                    return this.columnPlasmaCells;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneHardnessColumn {
                get {
                    return this.columnBoneHardness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneSizeColumn {
                get {
                    return this.columnBoneSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBconclusionColumn {
                get {
                    return this.columnBMBconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAconclusionColumn {
                get {
                    return this.columnBMAconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Uni2Column {
                get {
                    return this.columnUni2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhenotypeImmuPhenColumn {
                get {
                    return this.columnPhenotypeImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentImmuPhenColumn {
                get {
                    return this.columnCommentImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionImmuPhenoColumn {
                get {
                    return this.columnConclusionImmuPheno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoTestNameColumn {
                get {
                    return this.columnCytoTestName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoSpecimenColumn {
                get {
                    return this.columnCytoSpecimen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount45Column {
                get {
                    return this.columnCytoChromosomeCount45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount46Column {
                get {
                    return this.columnCytoChromosomeCount46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount47Column {
                get {
                    return this.columnCytoChromosomeCount47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCountTotalColumn {
                get {
                    return this.columnCytoChromosomeCountTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted45Column {
                get {
                    return this.columnCytoCellsCounted45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted46Column {
                get {
                    return this.columnCytoCellsCounted46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted47Column {
                get {
                    return this.columnCytoCellsCounted47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted4TotalColumn {
                get {
                    return this.columnCytoCellsCounted4Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed45Column {
                get {
                    return this.columnCytoCellsPhotographed45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed46Column {
                get {
                    return this.columnCytoCellsPhotographed46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed47Column {
                get {
                    return this.columnCytoCellsPhotographed47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographedTotalColumn {
                get {
                    return this.columnCytoCellsPhotographedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped45Column {
                get {
                    return this.columnCytoCellsKayrotyped45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped46Column {
                get {
                    return this.columnCytoCellsKayrotyped46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped47Column {
                get {
                    return this.columnCytoCellsKayrotyped47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotypedTotalColumn {
                get {
                    return this.columnCytoCellsKayrotypedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoKaryotypeColumn {
                get {
                    return this.columnCytoKaryotype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoInterpretationColumn {
                get {
                    return this.columnCytoInterpretation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoRecommendationColumn {
                get {
                    return this.columnCytoRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow this[int index] {
                get {
                    return ((BoneMarrowResultsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BoneMarrowResultsRowChangeEventHandler BoneMarrowResultsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BoneMarrowResultsRowChangeEventHandler BoneMarrowResultsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BoneMarrowResultsRowChangeEventHandler BoneMarrowResultsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BoneMarrowResultsRowChangeEventHandler BoneMarrowResultsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBoneMarrowResultsRow(BoneMarrowResultsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow AddBoneMarrowResultsRow(
                        PatientDetailsRow parentPatientDetailsRowByFK_BoneMarrowResults_PatientDetails, 
                        string BMBsite, 
                        string BMAspSite, 
                        string BMB_HistoExamin, 
                        string BMAspComment, 
                        decimal Blasts, 
                        decimal Promyelocytes, 
                        decimal Myelocytes, 
                        decimal Juvenile, 
                        decimal Staff, 
                        decimal Segmented, 
                        decimal Lymphocytes, 
                        decimal Monocytes, 
                        decimal Eosinophils, 
                        decimal Basophils, 
                        decimal Normoblasts, 
                        decimal PlasmaCells, 
                        string BoneHardness, 
                        decimal BoneSize, 
                        string BMBconclusion, 
                        string BMAconclusion, 
                        string PhenotypeImmuPhen, 
                        string CommentImmuPhen, 
                        string ConclusionImmuPheno, 
                        string CytoTestName, 
                        string CytoSpecimen, 
                        decimal CytoChromosomeCount45, 
                        decimal CytoChromosomeCount46, 
                        decimal CytoChromosomeCount47, 
                        decimal CytoChromosomeCountTotal, 
                        decimal CytoCellsCounted45, 
                        decimal CytoCellsCounted46, 
                        decimal CytoCellsCounted47, 
                        decimal CytoCellsCounted4Total, 
                        decimal CytoCellsPhotographed45, 
                        decimal CytoCellsPhotographed46, 
                        decimal CytoCellsPhotographed47, 
                        decimal CytoCellsPhotographedTotal, 
                        decimal CytoCellsKayrotyped45, 
                        decimal CytoCellsKayrotyped46, 
                        decimal CytoCellsKayrotyped47, 
                        decimal CytoCellsKayrotypedTotal, 
                        string CytoKaryotype, 
                        string CytoInterpretation, 
                        string CytoRecommendation) {
                BoneMarrowResultsRow rowBoneMarrowResultsRow = ((BoneMarrowResultsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BMBsite,
                        BMAspSite,
                        BMB_HistoExamin,
                        BMAspComment,
                        Blasts,
                        Promyelocytes,
                        Myelocytes,
                        Juvenile,
                        Staff,
                        Segmented,
                        Lymphocytes,
                        Monocytes,
                        Eosinophils,
                        Basophils,
                        Normoblasts,
                        PlasmaCells,
                        BoneHardness,
                        BoneSize,
                        BMBconclusion,
                        BMAconclusion,
                        null,
                        PhenotypeImmuPhen,
                        CommentImmuPhen,
                        ConclusionImmuPheno,
                        CytoTestName,
                        CytoSpecimen,
                        CytoChromosomeCount45,
                        CytoChromosomeCount46,
                        CytoChromosomeCount47,
                        CytoChromosomeCountTotal,
                        CytoCellsCounted45,
                        CytoCellsCounted46,
                        CytoCellsCounted47,
                        CytoCellsCounted4Total,
                        CytoCellsPhotographed45,
                        CytoCellsPhotographed46,
                        CytoCellsPhotographed47,
                        CytoCellsPhotographedTotal,
                        CytoCellsKayrotyped45,
                        CytoCellsKayrotyped46,
                        CytoCellsKayrotyped47,
                        CytoCellsKayrotypedTotal,
                        CytoKaryotype,
                        CytoInterpretation,
                        CytoRecommendation};
                if ((parentPatientDetailsRowByFK_BoneMarrowResults_PatientDetails != null)) {
                    columnValuesArray[0] = parentPatientDetailsRowByFK_BoneMarrowResults_PatientDetails[0];
                }
                rowBoneMarrowResultsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBoneMarrowResultsRow);
                return rowBoneMarrowResultsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow FindByUni2(int Uni2) {
                return ((BoneMarrowResultsRow)(this.Rows.Find(new object[] {
                            Uni2})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BoneMarrowResultsDataTable cln = ((BoneMarrowResultsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BoneMarrowResultsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBMBsite = base.Columns["BMBsite"];
                this.columnBMAspSite = base.Columns["BMAspSite"];
                this.columnBMB_HistoExamin = base.Columns["BMB_HistoExamin"];
                this.columnBMAspComment = base.Columns["BMAspComment"];
                this.columnBlasts = base.Columns["Blasts"];
                this.columnPromyelocytes = base.Columns["Promyelocytes"];
                this.columnMyelocytes = base.Columns["Myelocytes"];
                this.columnJuvenile = base.Columns["Juvenile"];
                this.columnStaff = base.Columns["Staff"];
                this.columnSegmented = base.Columns["Segmented"];
                this.columnLymphocytes = base.Columns["Lymphocytes"];
                this.columnMonocytes = base.Columns["Monocytes"];
                this.columnEosinophils = base.Columns["Eosinophils"];
                this.columnBasophils = base.Columns["Basophils"];
                this.columnNormoblasts = base.Columns["Normoblasts"];
                this.columnPlasmaCells = base.Columns["PlasmaCells"];
                this.columnBoneHardness = base.Columns["BoneHardness"];
                this.columnBoneSize = base.Columns["BoneSize"];
                this.columnBMBconclusion = base.Columns["BMBconclusion"];
                this.columnBMAconclusion = base.Columns["BMAconclusion"];
                this.columnUni2 = base.Columns["Uni2"];
                this.columnPhenotypeImmuPhen = base.Columns["PhenotypeImmuPhen"];
                this.columnCommentImmuPhen = base.Columns["CommentImmuPhen"];
                this.columnConclusionImmuPheno = base.Columns["ConclusionImmuPheno"];
                this.columnCytoTestName = base.Columns["CytoTestName"];
                this.columnCytoSpecimen = base.Columns["CytoSpecimen"];
                this.columnCytoChromosomeCount45 = base.Columns["CytoChromosomeCount45"];
                this.columnCytoChromosomeCount46 = base.Columns["CytoChromosomeCount46"];
                this.columnCytoChromosomeCount47 = base.Columns["CytoChromosomeCount47"];
                this.columnCytoChromosomeCountTotal = base.Columns["CytoChromosomeCountTotal"];
                this.columnCytoCellsCounted45 = base.Columns["CytoCellsCounted45"];
                this.columnCytoCellsCounted46 = base.Columns["CytoCellsCounted46"];
                this.columnCytoCellsCounted47 = base.Columns["CytoCellsCounted47"];
                this.columnCytoCellsCounted4Total = base.Columns["CytoCellsCounted4Total"];
                this.columnCytoCellsPhotographed45 = base.Columns["CytoCellsPhotographed45"];
                this.columnCytoCellsPhotographed46 = base.Columns["CytoCellsPhotographed46"];
                this.columnCytoCellsPhotographed47 = base.Columns["CytoCellsPhotographed47"];
                this.columnCytoCellsPhotographedTotal = base.Columns["CytoCellsPhotographedTotal"];
                this.columnCytoCellsKayrotyped45 = base.Columns["CytoCellsKayrotyped45"];
                this.columnCytoCellsKayrotyped46 = base.Columns["CytoCellsKayrotyped46"];
                this.columnCytoCellsKayrotyped47 = base.Columns["CytoCellsKayrotyped47"];
                this.columnCytoCellsKayrotypedTotal = base.Columns["CytoCellsKayrotypedTotal"];
                this.columnCytoKaryotype = base.Columns["CytoKaryotype"];
                this.columnCytoInterpretation = base.Columns["CytoInterpretation"];
                this.columnCytoRecommendation = base.Columns["CytoRecommendation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBMBsite = new global::System.Data.DataColumn("BMBsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBsite);
                this.columnBMAspSite = new global::System.Data.DataColumn("BMAspSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspSite);
                this.columnBMB_HistoExamin = new global::System.Data.DataColumn("BMB_HistoExamin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMB_HistoExamin);
                this.columnBMAspComment = new global::System.Data.DataColumn("BMAspComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspComment);
                this.columnBlasts = new global::System.Data.DataColumn("Blasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlasts);
                this.columnPromyelocytes = new global::System.Data.DataColumn("Promyelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromyelocytes);
                this.columnMyelocytes = new global::System.Data.DataColumn("Myelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyelocytes);
                this.columnJuvenile = new global::System.Data.DataColumn("Juvenile", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJuvenile);
                this.columnStaff = new global::System.Data.DataColumn("Staff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaff);
                this.columnSegmented = new global::System.Data.DataColumn("Segmented", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegmented);
                this.columnLymphocytes = new global::System.Data.DataColumn("Lymphocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLymphocytes);
                this.columnMonocytes = new global::System.Data.DataColumn("Monocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonocytes);
                this.columnEosinophils = new global::System.Data.DataColumn("Eosinophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEosinophils);
                this.columnBasophils = new global::System.Data.DataColumn("Basophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasophils);
                this.columnNormoblasts = new global::System.Data.DataColumn("Normoblasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormoblasts);
                this.columnPlasmaCells = new global::System.Data.DataColumn("PlasmaCells", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlasmaCells);
                this.columnBoneHardness = new global::System.Data.DataColumn("BoneHardness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneHardness);
                this.columnBoneSize = new global::System.Data.DataColumn("BoneSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneSize);
                this.columnBMBconclusion = new global::System.Data.DataColumn("BMBconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBconclusion);
                this.columnBMAconclusion = new global::System.Data.DataColumn("BMAconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAconclusion);
                this.columnUni2 = new global::System.Data.DataColumn("Uni2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUni2);
                this.columnPhenotypeImmuPhen = new global::System.Data.DataColumn("PhenotypeImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhenotypeImmuPhen);
                this.columnCommentImmuPhen = new global::System.Data.DataColumn("CommentImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentImmuPhen);
                this.columnConclusionImmuPheno = new global::System.Data.DataColumn("ConclusionImmuPheno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusionImmuPheno);
                this.columnCytoTestName = new global::System.Data.DataColumn("CytoTestName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoTestName);
                this.columnCytoSpecimen = new global::System.Data.DataColumn("CytoSpecimen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoSpecimen);
                this.columnCytoChromosomeCount45 = new global::System.Data.DataColumn("CytoChromosomeCount45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount45);
                this.columnCytoChromosomeCount46 = new global::System.Data.DataColumn("CytoChromosomeCount46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount46);
                this.columnCytoChromosomeCount47 = new global::System.Data.DataColumn("CytoChromosomeCount47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount47);
                this.columnCytoChromosomeCountTotal = new global::System.Data.DataColumn("CytoChromosomeCountTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCountTotal);
                this.columnCytoCellsCounted45 = new global::System.Data.DataColumn("CytoCellsCounted45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted45);
                this.columnCytoCellsCounted46 = new global::System.Data.DataColumn("CytoCellsCounted46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted46);
                this.columnCytoCellsCounted47 = new global::System.Data.DataColumn("CytoCellsCounted47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted47);
                this.columnCytoCellsCounted4Total = new global::System.Data.DataColumn("CytoCellsCounted4Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted4Total);
                this.columnCytoCellsPhotographed45 = new global::System.Data.DataColumn("CytoCellsPhotographed45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed45);
                this.columnCytoCellsPhotographed46 = new global::System.Data.DataColumn("CytoCellsPhotographed46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed46);
                this.columnCytoCellsPhotographed47 = new global::System.Data.DataColumn("CytoCellsPhotographed47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed47);
                this.columnCytoCellsPhotographedTotal = new global::System.Data.DataColumn("CytoCellsPhotographedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographedTotal);
                this.columnCytoCellsKayrotyped45 = new global::System.Data.DataColumn("CytoCellsKayrotyped45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped45);
                this.columnCytoCellsKayrotyped46 = new global::System.Data.DataColumn("CytoCellsKayrotyped46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped46);
                this.columnCytoCellsKayrotyped47 = new global::System.Data.DataColumn("CytoCellsKayrotyped47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped47);
                this.columnCytoCellsKayrotypedTotal = new global::System.Data.DataColumn("CytoCellsKayrotypedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotypedTotal);
                this.columnCytoKaryotype = new global::System.Data.DataColumn("CytoKaryotype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoKaryotype);
                this.columnCytoInterpretation = new global::System.Data.DataColumn("CytoInterpretation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoInterpretation);
                this.columnCytoRecommendation = new global::System.Data.DataColumn("CytoRecommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoRecommendation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUni2}, true));
                this.columnBMBsite.MaxLength = 2147483647;
                this.columnBMAspSite.MaxLength = 2147483647;
                this.columnBMB_HistoExamin.MaxLength = 2147483647;
                this.columnBMAspComment.MaxLength = 2147483647;
                this.columnBoneHardness.MaxLength = 2147483647;
                this.columnBMBconclusion.MaxLength = 2147483647;
                this.columnBMAconclusion.MaxLength = 2147483647;
                this.columnUni2.AutoIncrement = true;
                this.columnUni2.AutoIncrementSeed = -1;
                this.columnUni2.AutoIncrementStep = -1;
                this.columnUni2.AllowDBNull = false;
                this.columnUni2.ReadOnly = true;
                this.columnUni2.Unique = true;
                this.columnPhenotypeImmuPhen.MaxLength = 2147483647;
                this.columnCommentImmuPhen.MaxLength = 2147483647;
                this.columnConclusionImmuPheno.MaxLength = 2147483647;
                this.columnCytoTestName.MaxLength = 2147483647;
                this.columnCytoSpecimen.MaxLength = 2147483647;
                this.columnCytoKaryotype.MaxLength = 2147483647;
                this.columnCytoInterpretation.MaxLength = 2147483647;
                this.columnCytoRecommendation.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow NewBoneMarrowResultsRow() {
                return ((BoneMarrowResultsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BoneMarrowResultsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BoneMarrowResultsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BoneMarrowResultsRowChanged != null)) {
                    this.BoneMarrowResultsRowChanged(this, new BoneMarrowResultsRowChangeEvent(((BoneMarrowResultsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BoneMarrowResultsRowChanging != null)) {
                    this.BoneMarrowResultsRowChanging(this, new BoneMarrowResultsRowChangeEvent(((BoneMarrowResultsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BoneMarrowResultsRowDeleted != null)) {
                    this.BoneMarrowResultsRowDeleted(this, new BoneMarrowResultsRowChangeEvent(((BoneMarrowResultsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BoneMarrowResultsRowDeleting != null)) {
                    this.BoneMarrowResultsRowDeleting(this, new BoneMarrowResultsRowChangeEvent(((BoneMarrowResultsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBoneMarrowResultsRow(BoneMarrowResultsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BoneMarrowResultsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CulturesResultDataTable : global::System.Data.TypedTableBase<CulturesResultRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnCultureUID;
            
            private global::System.Data.DataColumn columnCulturesResultsUID;
            
            private global::System.Data.DataColumn columnDirectFilm;
            
            private global::System.Data.DataColumn columnPUS;
            
            private global::System.Data.DataColumn columnRBCs;
            
            private global::System.Data.DataColumn columnOrganismUID;
            
            private global::System.Data.DataColumn columnEpithelial;
            
            private global::System.Data.DataColumn columnNotesOrComment;
            
            private global::System.Data.DataColumn columnOtherInfo;
            
            private global::System.Data.DataColumn columnCultureCondition;
            
            private global::System.Data.DataColumn columnCultureNameForResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultDataTable() {
                this.TableName = "CulturesResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CulturesResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CulturesResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CultureUIDColumn {
                get {
                    return this.columnCultureUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CulturesResultsUIDColumn {
                get {
                    return this.columnCulturesResultsUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectFilmColumn {
                get {
                    return this.columnDirectFilm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PUSColumn {
                get {
                    return this.columnPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RBCsColumn {
                get {
                    return this.columnRBCs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganismUIDColumn {
                get {
                    return this.columnOrganismUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EpithelialColumn {
                get {
                    return this.columnEpithelial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesOrCommentColumn {
                get {
                    return this.columnNotesOrComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherInfoColumn {
                get {
                    return this.columnOtherInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CultureConditionColumn {
                get {
                    return this.columnCultureCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CultureNameForResultColumn {
                get {
                    return this.columnCultureNameForResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow this[int index] {
                get {
                    return ((CulturesResultRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesResultRowChangeEventHandler CulturesResultRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesResultRowChangeEventHandler CulturesResultRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesResultRowChangeEventHandler CulturesResultRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesResultRowChangeEventHandler CulturesResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCulturesResultRow(CulturesResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow AddCulturesResultRow(PatientDetailsRow parentPatientDetailsRowByFK_CulturesResult_PatientDetails, CulturesSourceRow parentCulturesSourceRowByFK_CulturesResult_CulturesSource, string DirectFilm, string PUS, string RBCs, OrganismSourceRow parentOrganismSourceRowByFK_CulturesResult_OrganismSource, string Epithelial, string NotesOrComment, string OtherInfo, string CultureCondition, string CultureNameForResult) {
                CulturesResultRow rowCulturesResultRow = ((CulturesResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        DirectFilm,
                        PUS,
                        RBCs,
                        null,
                        Epithelial,
                        NotesOrComment,
                        OtherInfo,
                        CultureCondition,
                        CultureNameForResult};
                if ((parentPatientDetailsRowByFK_CulturesResult_PatientDetails != null)) {
                    columnValuesArray[0] = parentPatientDetailsRowByFK_CulturesResult_PatientDetails[0];
                }
                if ((parentCulturesSourceRowByFK_CulturesResult_CulturesSource != null)) {
                    columnValuesArray[1] = parentCulturesSourceRowByFK_CulturesResult_CulturesSource[0];
                }
                if ((parentOrganismSourceRowByFK_CulturesResult_OrganismSource != null)) {
                    columnValuesArray[6] = parentOrganismSourceRowByFK_CulturesResult_OrganismSource[0];
                }
                rowCulturesResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCulturesResultRow);
                return rowCulturesResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow FindByCulturesResultsUID(int CulturesResultsUID) {
                return ((CulturesResultRow)(this.Rows.Find(new object[] {
                            CulturesResultsUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CulturesResultDataTable cln = ((CulturesResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CulturesResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnCultureUID = base.Columns["CultureUID"];
                this.columnCulturesResultsUID = base.Columns["CulturesResultsUID"];
                this.columnDirectFilm = base.Columns["DirectFilm"];
                this.columnPUS = base.Columns["PUS"];
                this.columnRBCs = base.Columns["RBCs"];
                this.columnOrganismUID = base.Columns["OrganismUID"];
                this.columnEpithelial = base.Columns["Epithelial"];
                this.columnNotesOrComment = base.Columns["NotesOrComment"];
                this.columnOtherInfo = base.Columns["OtherInfo"];
                this.columnCultureCondition = base.Columns["CultureCondition"];
                this.columnCultureNameForResult = base.Columns["CultureNameForResult"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnCultureUID = new global::System.Data.DataColumn("CultureUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCultureUID);
                this.columnCulturesResultsUID = new global::System.Data.DataColumn("CulturesResultsUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCulturesResultsUID);
                this.columnDirectFilm = new global::System.Data.DataColumn("DirectFilm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectFilm);
                this.columnPUS = new global::System.Data.DataColumn("PUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUS);
                this.columnRBCs = new global::System.Data.DataColumn("RBCs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBCs);
                this.columnOrganismUID = new global::System.Data.DataColumn("OrganismUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganismUID);
                this.columnEpithelial = new global::System.Data.DataColumn("Epithelial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEpithelial);
                this.columnNotesOrComment = new global::System.Data.DataColumn("NotesOrComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotesOrComment);
                this.columnOtherInfo = new global::System.Data.DataColumn("OtherInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherInfo);
                this.columnCultureCondition = new global::System.Data.DataColumn("CultureCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCultureCondition);
                this.columnCultureNameForResult = new global::System.Data.DataColumn("CultureNameForResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCultureNameForResult);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCulturesResultsUID}, true));
                this.columnCulturesResultsUID.AutoIncrement = true;
                this.columnCulturesResultsUID.AutoIncrementSeed = -1;
                this.columnCulturesResultsUID.AutoIncrementStep = -1;
                this.columnCulturesResultsUID.AllowDBNull = false;
                this.columnCulturesResultsUID.ReadOnly = true;
                this.columnCulturesResultsUID.Unique = true;
                this.columnDirectFilm.MaxLength = 2147483647;
                this.columnPUS.MaxLength = 2147483647;
                this.columnRBCs.MaxLength = 2147483647;
                this.columnEpithelial.MaxLength = 2147483647;
                this.columnNotesOrComment.MaxLength = 2147483647;
                this.columnOtherInfo.MaxLength = 2147483647;
                this.columnCultureCondition.MaxLength = 2147483647;
                this.columnCultureNameForResult.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow NewCulturesResultRow() {
                return ((CulturesResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CulturesResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CulturesResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CulturesResultRowChanged != null)) {
                    this.CulturesResultRowChanged(this, new CulturesResultRowChangeEvent(((CulturesResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CulturesResultRowChanging != null)) {
                    this.CulturesResultRowChanging(this, new CulturesResultRowChangeEvent(((CulturesResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CulturesResultRowDeleted != null)) {
                    this.CulturesResultRowDeleted(this, new CulturesResultRowChangeEvent(((CulturesResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CulturesResultRowDeleting != null)) {
                    this.CulturesResultRowDeleting(this, new CulturesResultRowChangeEvent(((CulturesResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCulturesResultRow(CulturesResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CulturesResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CulturesSourceDataTable : global::System.Data.TypedTableBase<CulturesSourceRow> {
            
            private global::System.Data.DataColumn columnCultureUID;
            
            private global::System.Data.DataColumn columnCultureName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceDataTable() {
                this.TableName = "CulturesSource";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CulturesSourceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CulturesSourceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CultureUIDColumn {
                get {
                    return this.columnCultureUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CultureNameColumn {
                get {
                    return this.columnCultureName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow this[int index] {
                get {
                    return ((CulturesSourceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesSourceRowChangeEventHandler CulturesSourceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesSourceRowChangeEventHandler CulturesSourceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesSourceRowChangeEventHandler CulturesSourceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CulturesSourceRowChangeEventHandler CulturesSourceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCulturesSourceRow(CulturesSourceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow AddCulturesSourceRow(string CultureName) {
                CulturesSourceRow rowCulturesSourceRow = ((CulturesSourceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CultureName};
                rowCulturesSourceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCulturesSourceRow);
                return rowCulturesSourceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow FindByCultureUID(int CultureUID) {
                return ((CulturesSourceRow)(this.Rows.Find(new object[] {
                            CultureUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CulturesSourceDataTable cln = ((CulturesSourceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CulturesSourceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCultureUID = base.Columns["CultureUID"];
                this.columnCultureName = base.Columns["CultureName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCultureUID = new global::System.Data.DataColumn("CultureUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCultureUID);
                this.columnCultureName = new global::System.Data.DataColumn("CultureName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCultureName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCultureUID}, true));
                this.columnCultureUID.AutoIncrement = true;
                this.columnCultureUID.AutoIncrementSeed = -1;
                this.columnCultureUID.AutoIncrementStep = -1;
                this.columnCultureUID.AllowDBNull = false;
                this.columnCultureUID.ReadOnly = true;
                this.columnCultureUID.Unique = true;
                this.columnCultureName.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow NewCulturesSourceRow() {
                return ((CulturesSourceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CulturesSourceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CulturesSourceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CulturesSourceRowChanged != null)) {
                    this.CulturesSourceRowChanged(this, new CulturesSourceRowChangeEvent(((CulturesSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CulturesSourceRowChanging != null)) {
                    this.CulturesSourceRowChanging(this, new CulturesSourceRowChangeEvent(((CulturesSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CulturesSourceRowDeleted != null)) {
                    this.CulturesSourceRowDeleted(this, new CulturesSourceRowChangeEvent(((CulturesSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CulturesSourceRowDeleting != null)) {
                    this.CulturesSourceRowDeleting(this, new CulturesSourceRowChangeEvent(((CulturesSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCulturesSourceRow(CulturesSourceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CulturesSourceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ImagesDataTable : global::System.Data.TypedTableBase<ImagesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnImg1;
            
            private global::System.Data.DataColumn columnImg2;
            
            private global::System.Data.DataColumn columnImg3;
            
            private global::System.Data.DataColumn columnImg4;
            
            private global::System.Data.DataColumn columnImg5;
            
            private global::System.Data.DataColumn columnImg6;
            
            private global::System.Data.DataColumn columnImg7;
            
            private global::System.Data.DataColumn columnImgName1;
            
            private global::System.Data.DataColumn columnImgName2;
            
            private global::System.Data.DataColumn columnImgName3;
            
            private global::System.Data.DataColumn columnImgName4;
            
            private global::System.Data.DataColumn columnImgName5;
            
            private global::System.Data.DataColumn columnImgName6;
            
            private global::System.Data.DataColumn columnImgName7;
            
            private global::System.Data.DataColumn columnUni;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesDataTable() {
                this.TableName = "Images";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ImagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ImagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img1Column {
                get {
                    return this.columnImg1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img2Column {
                get {
                    return this.columnImg2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img3Column {
                get {
                    return this.columnImg3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img4Column {
                get {
                    return this.columnImg4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img5Column {
                get {
                    return this.columnImg5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img6Column {
                get {
                    return this.columnImg6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img7Column {
                get {
                    return this.columnImg7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName1Column {
                get {
                    return this.columnImgName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName2Column {
                get {
                    return this.columnImgName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName3Column {
                get {
                    return this.columnImgName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName4Column {
                get {
                    return this.columnImgName4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName5Column {
                get {
                    return this.columnImgName5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName6Column {
                get {
                    return this.columnImgName6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName7Column {
                get {
                    return this.columnImgName7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UniColumn {
                get {
                    return this.columnUni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow this[int index] {
                get {
                    return ((ImagesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImagesRowChangeEventHandler ImagesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImagesRowChangeEventHandler ImagesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImagesRowChangeEventHandler ImagesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImagesRowChangeEventHandler ImagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddImagesRow(ImagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow AddImagesRow(PatientDetailsRow parentPatientDetailsRowByFK_Images_PatientDetails, byte[] Img1, byte[] Img2, byte[] Img3, byte[] Img4, byte[] Img5, byte[] Img6, byte[] Img7, string ImgName1, string ImgName2, string ImgName3, string ImgName4, string ImgName5, string ImgName6, string ImgName7) {
                ImagesRow rowImagesRow = ((ImagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Img1,
                        Img2,
                        Img3,
                        Img4,
                        Img5,
                        Img6,
                        Img7,
                        ImgName1,
                        ImgName2,
                        ImgName3,
                        ImgName4,
                        ImgName5,
                        ImgName6,
                        ImgName7,
                        null};
                if ((parentPatientDetailsRowByFK_Images_PatientDetails != null)) {
                    columnValuesArray[0] = parentPatientDetailsRowByFK_Images_PatientDetails[0];
                }
                rowImagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowImagesRow);
                return rowImagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow FindByUni(int Uni) {
                return ((ImagesRow)(this.Rows.Find(new object[] {
                            Uni})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ImagesDataTable cln = ((ImagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ImagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnImg1 = base.Columns["Img1"];
                this.columnImg2 = base.Columns["Img2"];
                this.columnImg3 = base.Columns["Img3"];
                this.columnImg4 = base.Columns["Img4"];
                this.columnImg5 = base.Columns["Img5"];
                this.columnImg6 = base.Columns["Img6"];
                this.columnImg7 = base.Columns["Img7"];
                this.columnImgName1 = base.Columns["ImgName1"];
                this.columnImgName2 = base.Columns["ImgName2"];
                this.columnImgName3 = base.Columns["ImgName3"];
                this.columnImgName4 = base.Columns["ImgName4"];
                this.columnImgName5 = base.Columns["ImgName5"];
                this.columnImgName6 = base.Columns["ImgName6"];
                this.columnImgName7 = base.Columns["ImgName7"];
                this.columnUni = base.Columns["Uni"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnImg1 = new global::System.Data.DataColumn("Img1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg1);
                this.columnImg2 = new global::System.Data.DataColumn("Img2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg2);
                this.columnImg3 = new global::System.Data.DataColumn("Img3", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg3);
                this.columnImg4 = new global::System.Data.DataColumn("Img4", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg4);
                this.columnImg5 = new global::System.Data.DataColumn("Img5", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg5);
                this.columnImg6 = new global::System.Data.DataColumn("Img6", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg6);
                this.columnImg7 = new global::System.Data.DataColumn("Img7", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg7);
                this.columnImgName1 = new global::System.Data.DataColumn("ImgName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName1);
                this.columnImgName2 = new global::System.Data.DataColumn("ImgName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName2);
                this.columnImgName3 = new global::System.Data.DataColumn("ImgName3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName3);
                this.columnImgName4 = new global::System.Data.DataColumn("ImgName4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName4);
                this.columnImgName5 = new global::System.Data.DataColumn("ImgName5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName5);
                this.columnImgName6 = new global::System.Data.DataColumn("ImgName6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName6);
                this.columnImgName7 = new global::System.Data.DataColumn("ImgName7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName7);
                this.columnUni = new global::System.Data.DataColumn("Uni", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUni);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUni}, true));
                this.columnImgName1.MaxLength = 2147483647;
                this.columnImgName2.MaxLength = 2147483647;
                this.columnImgName3.MaxLength = 2147483647;
                this.columnImgName4.MaxLength = 2147483647;
                this.columnImgName5.MaxLength = 2147483647;
                this.columnImgName6.MaxLength = 2147483647;
                this.columnImgName7.MaxLength = 2147483647;
                this.columnUni.AutoIncrement = true;
                this.columnUni.AutoIncrementSeed = -1;
                this.columnUni.AutoIncrementStep = -1;
                this.columnUni.AllowDBNull = false;
                this.columnUni.ReadOnly = true;
                this.columnUni.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow NewImagesRow() {
                return ((ImagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ImagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ImagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ImagesRowChanged != null)) {
                    this.ImagesRowChanged(this, new ImagesRowChangeEvent(((ImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ImagesRowChanging != null)) {
                    this.ImagesRowChanging(this, new ImagesRowChangeEvent(((ImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ImagesRowDeleted != null)) {
                    this.ImagesRowDeleted(this, new ImagesRowChangeEvent(((ImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ImagesRowDeleting != null)) {
                    this.ImagesRowDeleting(this, new ImagesRowChangeEvent(((ImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveImagesRow(ImagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ImagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ImmunophenotypingDataTable : global::System.Data.TypedTableBase<ImmunophenotypingRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnMarkerName;
            
            private global::System.Data.DataColumn columnPercentage;
            
            private global::System.Data.DataColumn columnTabIDImmun;
            
            private global::System.Data.DataColumn columnResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingDataTable() {
                this.TableName = "Immunophenotyping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ImmunophenotypingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ImmunophenotypingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkerNameColumn {
                get {
                    return this.columnMarkerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TabIDImmunColumn {
                get {
                    return this.columnTabIDImmun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow this[int index] {
                get {
                    return ((ImmunophenotypingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImmunophenotypingRowChangeEventHandler ImmunophenotypingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImmunophenotypingRowChangeEventHandler ImmunophenotypingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImmunophenotypingRowChangeEventHandler ImmunophenotypingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ImmunophenotypingRowChangeEventHandler ImmunophenotypingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddImmunophenotypingRow(ImmunophenotypingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow AddImmunophenotypingRow(PatientDetailsRow parentPatientDetailsRowByFK_Immunophenotyping_PatientDetails, string MarkerName, string Percentage, string Result) {
                ImmunophenotypingRow rowImmunophenotypingRow = ((ImmunophenotypingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MarkerName,
                        Percentage,
                        null,
                        Result};
                if ((parentPatientDetailsRowByFK_Immunophenotyping_PatientDetails != null)) {
                    columnValuesArray[0] = parentPatientDetailsRowByFK_Immunophenotyping_PatientDetails[0];
                }
                rowImmunophenotypingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowImmunophenotypingRow);
                return rowImmunophenotypingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow FindByTabIDImmun(int TabIDImmun) {
                return ((ImmunophenotypingRow)(this.Rows.Find(new object[] {
                            TabIDImmun})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ImmunophenotypingDataTable cln = ((ImmunophenotypingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ImmunophenotypingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnMarkerName = base.Columns["MarkerName"];
                this.columnPercentage = base.Columns["Percentage"];
                this.columnTabIDImmun = base.Columns["TabIDImmun"];
                this.columnResult = base.Columns["Result"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnMarkerName = new global::System.Data.DataColumn("MarkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkerName);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
                this.columnTabIDImmun = new global::System.Data.DataColumn("TabIDImmun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabIDImmun);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTabIDImmun}, true));
                this.columnMarkerName.MaxLength = 2147483647;
                this.columnPercentage.MaxLength = 2147483647;
                this.columnTabIDImmun.AutoIncrement = true;
                this.columnTabIDImmun.AutoIncrementSeed = -1;
                this.columnTabIDImmun.AutoIncrementStep = -1;
                this.columnTabIDImmun.AllowDBNull = false;
                this.columnTabIDImmun.ReadOnly = true;
                this.columnTabIDImmun.Unique = true;
                this.columnResult.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow NewImmunophenotypingRow() {
                return ((ImmunophenotypingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ImmunophenotypingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ImmunophenotypingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ImmunophenotypingRowChanged != null)) {
                    this.ImmunophenotypingRowChanged(this, new ImmunophenotypingRowChangeEvent(((ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ImmunophenotypingRowChanging != null)) {
                    this.ImmunophenotypingRowChanging(this, new ImmunophenotypingRowChangeEvent(((ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ImmunophenotypingRowDeleted != null)) {
                    this.ImmunophenotypingRowDeleted(this, new ImmunophenotypingRowChangeEvent(((ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ImmunophenotypingRowDeleting != null)) {
                    this.ImmunophenotypingRowDeleting(this, new ImmunophenotypingRowChangeEvent(((ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveImmunophenotypingRow(ImmunophenotypingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ImmunophenotypingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrganismSourceDataTable : global::System.Data.TypedTableBase<OrganismSourceRow> {
            
            private global::System.Data.DataColumn columnOrganismUID;
            
            private global::System.Data.DataColumn columnOrganismName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceDataTable() {
                this.TableName = "OrganismSource";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrganismSourceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OrganismSourceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganismUIDColumn {
                get {
                    return this.columnOrganismUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganismNameColumn {
                get {
                    return this.columnOrganismName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow this[int index] {
                get {
                    return ((OrganismSourceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrganismSourceRowChangeEventHandler OrganismSourceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrganismSourceRowChangeEventHandler OrganismSourceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrganismSourceRowChangeEventHandler OrganismSourceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrganismSourceRowChangeEventHandler OrganismSourceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOrganismSourceRow(OrganismSourceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow AddOrganismSourceRow(string OrganismName) {
                OrganismSourceRow rowOrganismSourceRow = ((OrganismSourceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        OrganismName};
                rowOrganismSourceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrganismSourceRow);
                return rowOrganismSourceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow FindByOrganismUID(int OrganismUID) {
                return ((OrganismSourceRow)(this.Rows.Find(new object[] {
                            OrganismUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OrganismSourceDataTable cln = ((OrganismSourceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrganismSourceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOrganismUID = base.Columns["OrganismUID"];
                this.columnOrganismName = base.Columns["OrganismName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOrganismUID = new global::System.Data.DataColumn("OrganismUID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganismUID);
                this.columnOrganismName = new global::System.Data.DataColumn("OrganismName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganismName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrganismUID}, true));
                this.columnOrganismUID.AutoIncrement = true;
                this.columnOrganismUID.AutoIncrementSeed = -1;
                this.columnOrganismUID.AutoIncrementStep = -1;
                this.columnOrganismUID.AllowDBNull = false;
                this.columnOrganismUID.ReadOnly = true;
                this.columnOrganismUID.Unique = true;
                this.columnOrganismName.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow NewOrganismSourceRow() {
                return ((OrganismSourceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrganismSourceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OrganismSourceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrganismSourceRowChanged != null)) {
                    this.OrganismSourceRowChanged(this, new OrganismSourceRowChangeEvent(((OrganismSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrganismSourceRowChanging != null)) {
                    this.OrganismSourceRowChanging(this, new OrganismSourceRowChangeEvent(((OrganismSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrganismSourceRowDeleted != null)) {
                    this.OrganismSourceRowDeleted(this, new OrganismSourceRowChangeEvent(((OrganismSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrganismSourceRowDeleting != null)) {
                    this.OrganismSourceRowDeleting(this, new OrganismSourceRowChangeEvent(((OrganismSourceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOrganismSourceRow(OrganismSourceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrganismSourceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PatientDetailsDataTable : global::System.Data.TypedTableBase<PatientDetailsRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnAdress;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnSmoker;
            
            private global::System.Data.DataColumn columnPregnant;
            
            private global::System.Data.DataColumn columnFasting;
            
            private global::System.Data.DataColumn columnFastingHrs;
            
            private global::System.Data.DataColumn columnGlandsMed;
            
            private global::System.Data.DataColumn columnGlandsMedName;
            
            private global::System.Data.DataColumn columnDiabetic;
            
            private global::System.Data.DataColumn columnDiabetusMed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsDataTable() {
                this.TableName = "PatientDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PatientDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PatientDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressColumn {
                get {
                    return this.columnAdress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SmokerColumn {
                get {
                    return this.columnSmoker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PregnantColumn {
                get {
                    return this.columnPregnant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingColumn {
                get {
                    return this.columnFasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingHrsColumn {
                get {
                    return this.columnFastingHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedColumn {
                get {
                    return this.columnGlandsMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedNameColumn {
                get {
                    return this.columnGlandsMedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabeticColumn {
                get {
                    return this.columnDiabetic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabetusMedColumn {
                get {
                    return this.columnDiabetusMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow this[int index] {
                get {
                    return ((PatientDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientDetailsRowChangeEventHandler PatientDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientDetailsRowChangeEventHandler PatientDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientDetailsRowChangeEventHandler PatientDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PatientDetailsRowChangeEventHandler PatientDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPatientDetailsRow(PatientDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow AddPatientDetailsRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        string email, 
                        string Adress, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        bool Smoker, 
                        bool Pregnant, 
                        bool Fasting, 
                        float FastingHrs, 
                        bool GlandsMed, 
                        string GlandsMedName, 
                        bool Diabetic, 
                        string DiabetusMed) {
                PatientDetailsRow rowPatientDetailsRow = ((PatientDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        email,
                        Adress,
                        VisitDate,
                        ResultDate,
                        Smoker,
                        Pregnant,
                        Fasting,
                        FastingHrs,
                        GlandsMed,
                        GlandsMedName,
                        Diabetic,
                        DiabetusMed};
                rowPatientDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPatientDetailsRow);
                return rowPatientDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow FindByPatientID(int PatientID) {
                return ((PatientDetailsRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PatientDetailsDataTable cln = ((PatientDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PatientDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnemail = base.Columns["email"];
                this.columnAdress = base.Columns["Adress"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnSmoker = base.Columns["Smoker"];
                this.columnPregnant = base.Columns["Pregnant"];
                this.columnFasting = base.Columns["Fasting"];
                this.columnFastingHrs = base.Columns["FastingHrs"];
                this.columnGlandsMed = base.Columns["GlandsMed"];
                this.columnGlandsMedName = base.Columns["GlandsMedName"];
                this.columnDiabetic = base.Columns["Diabetic"];
                this.columnDiabetusMed = base.Columns["DiabetusMed"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnAdress = new global::System.Data.DataColumn("Adress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdress);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnSmoker = new global::System.Data.DataColumn("Smoker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmoker);
                this.columnPregnant = new global::System.Data.DataColumn("Pregnant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnant);
                this.columnFasting = new global::System.Data.DataColumn("Fasting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFasting);
                this.columnFastingHrs = new global::System.Data.DataColumn("FastingHrs", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastingHrs);
                this.columnGlandsMed = new global::System.Data.DataColumn("GlandsMed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMed);
                this.columnGlandsMedName = new global::System.Data.DataColumn("GlandsMedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMedName);
                this.columnDiabetic = new global::System.Data.DataColumn("Diabetic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetic);
                this.columnDiabetusMed = new global::System.Data.DataColumn("DiabetusMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetusMed);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnemail.MaxLength = 2147483647;
                this.columnAdress.MaxLength = 2147483647;
                this.columnGlandsMedName.MaxLength = 2147483647;
                this.columnDiabetusMed.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow NewPatientDetailsRow() {
                return ((PatientDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PatientDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PatientDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PatientDetailsRowChanged != null)) {
                    this.PatientDetailsRowChanged(this, new PatientDetailsRowChangeEvent(((PatientDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PatientDetailsRowChanging != null)) {
                    this.PatientDetailsRowChanging(this, new PatientDetailsRowChangeEvent(((PatientDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PatientDetailsRowDeleted != null)) {
                    this.PatientDetailsRowDeleted(this, new PatientDetailsRowChangeEvent(((PatientDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PatientDetailsRowDeleting != null)) {
                    this.PatientDetailsRowDeleting(this, new PatientDetailsRowChangeEvent(((PatientDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePatientDetailsRow(PatientDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PatientDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Select_ImmunophenotypingDataTable : global::System.Data.TypedTableBase<Select_ImmunophenotypingRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnPhenotypeImmuPhen;
            
            private global::System.Data.DataColumn columnCommentImmuPhen;
            
            private global::System.Data.DataColumn columnConclusionImmuPheno;
            
            private global::System.Data.DataColumn columnMarkerName;
            
            private global::System.Data.DataColumn columnPercentage;
            
            private global::System.Data.DataColumn columnResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingDataTable() {
                this.TableName = "Select_Immunophenotyping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Select_ImmunophenotypingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Select_ImmunophenotypingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhenotypeImmuPhenColumn {
                get {
                    return this.columnPhenotypeImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentImmuPhenColumn {
                get {
                    return this.columnCommentImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionImmuPhenoColumn {
                get {
                    return this.columnConclusionImmuPheno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkerNameColumn {
                get {
                    return this.columnMarkerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRow this[int index] {
                get {
                    return ((Select_ImmunophenotypingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Select_ImmunophenotypingRowChangeEventHandler Select_ImmunophenotypingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Select_ImmunophenotypingRowChangeEventHandler Select_ImmunophenotypingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Select_ImmunophenotypingRowChangeEventHandler Select_ImmunophenotypingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Select_ImmunophenotypingRowChangeEventHandler Select_ImmunophenotypingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelect_ImmunophenotypingRow(Select_ImmunophenotypingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRow AddSelect_ImmunophenotypingRow(int PatientID, string PName, string DrName, decimal Age, string AgeType, System.DateTime VisitDate, System.DateTime ResultDate, string PhenotypeImmuPhen, string CommentImmuPhen, string ConclusionImmuPheno, string MarkerName, string Percentage, string Result) {
                Select_ImmunophenotypingRow rowSelect_ImmunophenotypingRow = ((Select_ImmunophenotypingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        VisitDate,
                        ResultDate,
                        PhenotypeImmuPhen,
                        CommentImmuPhen,
                        ConclusionImmuPheno,
                        MarkerName,
                        Percentage,
                        Result};
                rowSelect_ImmunophenotypingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelect_ImmunophenotypingRow);
                return rowSelect_ImmunophenotypingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRow FindByPatientID(int PatientID) {
                return ((Select_ImmunophenotypingRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Select_ImmunophenotypingDataTable cln = ((Select_ImmunophenotypingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Select_ImmunophenotypingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnPhenotypeImmuPhen = base.Columns["PhenotypeImmuPhen"];
                this.columnCommentImmuPhen = base.Columns["CommentImmuPhen"];
                this.columnConclusionImmuPheno = base.Columns["ConclusionImmuPheno"];
                this.columnMarkerName = base.Columns["MarkerName"];
                this.columnPercentage = base.Columns["Percentage"];
                this.columnResult = base.Columns["Result"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnPhenotypeImmuPhen = new global::System.Data.DataColumn("PhenotypeImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhenotypeImmuPhen);
                this.columnCommentImmuPhen = new global::System.Data.DataColumn("CommentImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentImmuPhen);
                this.columnConclusionImmuPheno = new global::System.Data.DataColumn("ConclusionImmuPheno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusionImmuPheno);
                this.columnMarkerName = new global::System.Data.DataColumn("MarkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkerName);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnPhenotypeImmuPhen.MaxLength = 2147483647;
                this.columnCommentImmuPhen.MaxLength = 2147483647;
                this.columnConclusionImmuPheno.MaxLength = 2147483647;
                this.columnMarkerName.MaxLength = 2147483647;
                this.columnPercentage.MaxLength = 2147483647;
                this.columnResult.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRow NewSelect_ImmunophenotypingRow() {
                return ((Select_ImmunophenotypingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Select_ImmunophenotypingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Select_ImmunophenotypingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Select_ImmunophenotypingRowChanged != null)) {
                    this.Select_ImmunophenotypingRowChanged(this, new Select_ImmunophenotypingRowChangeEvent(((Select_ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Select_ImmunophenotypingRowChanging != null)) {
                    this.Select_ImmunophenotypingRowChanging(this, new Select_ImmunophenotypingRowChangeEvent(((Select_ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Select_ImmunophenotypingRowDeleted != null)) {
                    this.Select_ImmunophenotypingRowDeleted(this, new Select_ImmunophenotypingRowChangeEvent(((Select_ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Select_ImmunophenotypingRowDeleting != null)) {
                    this.Select_ImmunophenotypingRowDeleting(this, new Select_ImmunophenotypingRowChangeEvent(((Select_ImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelect_ImmunophenotypingRow(Select_ImmunophenotypingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Select_ImmunophenotypingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectBMAsp_DATADataTable : global::System.Data.TypedTableBase<SelectBMAsp_DATARow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBMBsite;
            
            private global::System.Data.DataColumn columnBMAspSite;
            
            private global::System.Data.DataColumn columnBMB_HistoExamin;
            
            private global::System.Data.DataColumn columnBMAspComment;
            
            private global::System.Data.DataColumn columnBlasts;
            
            private global::System.Data.DataColumn columnPromyelocytes;
            
            private global::System.Data.DataColumn columnMyelocytes;
            
            private global::System.Data.DataColumn columnJuvenile;
            
            private global::System.Data.DataColumn columnStaff;
            
            private global::System.Data.DataColumn columnSegmented;
            
            private global::System.Data.DataColumn columnLymphocytes;
            
            private global::System.Data.DataColumn columnMonocytes;
            
            private global::System.Data.DataColumn columnEosinophils;
            
            private global::System.Data.DataColumn columnBasophils;
            
            private global::System.Data.DataColumn columnNormoblasts;
            
            private global::System.Data.DataColumn columnPlasmaCells;
            
            private global::System.Data.DataColumn columnBoneHardness;
            
            private global::System.Data.DataColumn columnBoneSize;
            
            private global::System.Data.DataColumn columnBMBconclusion;
            
            private global::System.Data.DataColumn columnBMAconclusion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATADataTable() {
                this.TableName = "SelectBMAsp_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBMAsp_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectBMAsp_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBsiteColumn {
                get {
                    return this.columnBMBsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspSiteColumn {
                get {
                    return this.columnBMAspSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMB_HistoExaminColumn {
                get {
                    return this.columnBMB_HistoExamin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspCommentColumn {
                get {
                    return this.columnBMAspComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlastsColumn {
                get {
                    return this.columnBlasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromyelocytesColumn {
                get {
                    return this.columnPromyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MyelocytesColumn {
                get {
                    return this.columnMyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JuvenileColumn {
                get {
                    return this.columnJuvenile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffColumn {
                get {
                    return this.columnStaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SegmentedColumn {
                get {
                    return this.columnSegmented;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LymphocytesColumn {
                get {
                    return this.columnLymphocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonocytesColumn {
                get {
                    return this.columnMonocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EosinophilsColumn {
                get {
                    return this.columnEosinophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasophilsColumn {
                get {
                    return this.columnBasophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormoblastsColumn {
                get {
                    return this.columnNormoblasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlasmaCellsColumn {
                get {
                    return this.columnPlasmaCells;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneHardnessColumn {
                get {
                    return this.columnBoneHardness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneSizeColumn {
                get {
                    return this.columnBoneSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBconclusionColumn {
                get {
                    return this.columnBMBconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAconclusionColumn {
                get {
                    return this.columnBMAconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARow this[int index] {
                get {
                    return ((SelectBMAsp_DATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMAsp_DATARowChangeEventHandler SelectBMAsp_DATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMAsp_DATARowChangeEventHandler SelectBMAsp_DATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMAsp_DATARowChangeEventHandler SelectBMAsp_DATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMAsp_DATARowChangeEventHandler SelectBMAsp_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectBMAsp_DATARow(SelectBMAsp_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARow AddSelectBMAsp_DATARow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        int ID, 
                        string BMBsite, 
                        string BMAspSite, 
                        string BMB_HistoExamin, 
                        string BMAspComment, 
                        decimal Blasts, 
                        decimal Promyelocytes, 
                        decimal Myelocytes, 
                        decimal Juvenile, 
                        decimal Staff, 
                        decimal Segmented, 
                        decimal Lymphocytes, 
                        decimal Monocytes, 
                        decimal Eosinophils, 
                        decimal Basophils, 
                        decimal Normoblasts, 
                        decimal PlasmaCells, 
                        string BoneHardness, 
                        decimal BoneSize, 
                        string BMBconclusion, 
                        string BMAconclusion) {
                SelectBMAsp_DATARow rowSelectBMAsp_DATARow = ((SelectBMAsp_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        VisitDate,
                        ResultDate,
                        ID,
                        BMBsite,
                        BMAspSite,
                        BMB_HistoExamin,
                        BMAspComment,
                        Blasts,
                        Promyelocytes,
                        Myelocytes,
                        Juvenile,
                        Staff,
                        Segmented,
                        Lymphocytes,
                        Monocytes,
                        Eosinophils,
                        Basophils,
                        Normoblasts,
                        PlasmaCells,
                        BoneHardness,
                        BoneSize,
                        BMBconclusion,
                        BMAconclusion};
                rowSelectBMAsp_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectBMAsp_DATARow);
                return rowSelectBMAsp_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARow FindByPatientID(int PatientID) {
                return ((SelectBMAsp_DATARow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectBMAsp_DATADataTable cln = ((SelectBMAsp_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectBMAsp_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnID = base.Columns["ID"];
                this.columnBMBsite = base.Columns["BMBsite"];
                this.columnBMAspSite = base.Columns["BMAspSite"];
                this.columnBMB_HistoExamin = base.Columns["BMB_HistoExamin"];
                this.columnBMAspComment = base.Columns["BMAspComment"];
                this.columnBlasts = base.Columns["Blasts"];
                this.columnPromyelocytes = base.Columns["Promyelocytes"];
                this.columnMyelocytes = base.Columns["Myelocytes"];
                this.columnJuvenile = base.Columns["Juvenile"];
                this.columnStaff = base.Columns["Staff"];
                this.columnSegmented = base.Columns["Segmented"];
                this.columnLymphocytes = base.Columns["Lymphocytes"];
                this.columnMonocytes = base.Columns["Monocytes"];
                this.columnEosinophils = base.Columns["Eosinophils"];
                this.columnBasophils = base.Columns["Basophils"];
                this.columnNormoblasts = base.Columns["Normoblasts"];
                this.columnPlasmaCells = base.Columns["PlasmaCells"];
                this.columnBoneHardness = base.Columns["BoneHardness"];
                this.columnBoneSize = base.Columns["BoneSize"];
                this.columnBMBconclusion = base.Columns["BMBconclusion"];
                this.columnBMAconclusion = base.Columns["BMAconclusion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBMBsite = new global::System.Data.DataColumn("BMBsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBsite);
                this.columnBMAspSite = new global::System.Data.DataColumn("BMAspSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspSite);
                this.columnBMB_HistoExamin = new global::System.Data.DataColumn("BMB_HistoExamin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMB_HistoExamin);
                this.columnBMAspComment = new global::System.Data.DataColumn("BMAspComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspComment);
                this.columnBlasts = new global::System.Data.DataColumn("Blasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlasts);
                this.columnPromyelocytes = new global::System.Data.DataColumn("Promyelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromyelocytes);
                this.columnMyelocytes = new global::System.Data.DataColumn("Myelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyelocytes);
                this.columnJuvenile = new global::System.Data.DataColumn("Juvenile", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJuvenile);
                this.columnStaff = new global::System.Data.DataColumn("Staff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaff);
                this.columnSegmented = new global::System.Data.DataColumn("Segmented", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegmented);
                this.columnLymphocytes = new global::System.Data.DataColumn("Lymphocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLymphocytes);
                this.columnMonocytes = new global::System.Data.DataColumn("Monocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonocytes);
                this.columnEosinophils = new global::System.Data.DataColumn("Eosinophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEosinophils);
                this.columnBasophils = new global::System.Data.DataColumn("Basophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasophils);
                this.columnNormoblasts = new global::System.Data.DataColumn("Normoblasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormoblasts);
                this.columnPlasmaCells = new global::System.Data.DataColumn("PlasmaCells", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlasmaCells);
                this.columnBoneHardness = new global::System.Data.DataColumn("BoneHardness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneHardness);
                this.columnBoneSize = new global::System.Data.DataColumn("BoneSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneSize);
                this.columnBMBconclusion = new global::System.Data.DataColumn("BMBconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBconclusion);
                this.columnBMAconclusion = new global::System.Data.DataColumn("BMAconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAconclusion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnBMBsite.MaxLength = 2147483647;
                this.columnBMAspSite.MaxLength = 2147483647;
                this.columnBMB_HistoExamin.MaxLength = 2147483647;
                this.columnBMAspComment.MaxLength = 2147483647;
                this.columnBoneHardness.MaxLength = 2147483647;
                this.columnBMBconclusion.MaxLength = 2147483647;
                this.columnBMAconclusion.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARow NewSelectBMAsp_DATARow() {
                return ((SelectBMAsp_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectBMAsp_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectBMAsp_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectBMAsp_DATARowChanged != null)) {
                    this.SelectBMAsp_DATARowChanged(this, new SelectBMAsp_DATARowChangeEvent(((SelectBMAsp_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectBMAsp_DATARowChanging != null)) {
                    this.SelectBMAsp_DATARowChanging(this, new SelectBMAsp_DATARowChangeEvent(((SelectBMAsp_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectBMAsp_DATARowDeleted != null)) {
                    this.SelectBMAsp_DATARowDeleted(this, new SelectBMAsp_DATARowChangeEvent(((SelectBMAsp_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectBMAsp_DATARowDeleting != null)) {
                    this.SelectBMAsp_DATARowDeleting(this, new SelectBMAsp_DATARowChangeEvent(((SelectBMAsp_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectBMAsp_DATARow(SelectBMAsp_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectBMAsp_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectBMB_DATADataTable : global::System.Data.TypedTableBase<SelectBMB_DATARow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnAdress;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnSmoker;
            
            private global::System.Data.DataColumn columnPregnant;
            
            private global::System.Data.DataColumn columnFasting;
            
            private global::System.Data.DataColumn columnFastingHrs;
            
            private global::System.Data.DataColumn columnGlandsMed;
            
            private global::System.Data.DataColumn columnGlandsMedName;
            
            private global::System.Data.DataColumn columnDiabetic;
            
            private global::System.Data.DataColumn columnDiabetusMed;
            
            private global::System.Data.DataColumn columnBMBsite;
            
            private global::System.Data.DataColumn columnBMB_HistoExamin;
            
            private global::System.Data.DataColumn columnBoneSize;
            
            private global::System.Data.DataColumn columnBoneHardness;
            
            private global::System.Data.DataColumn columnBMBconclusion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATADataTable() {
                this.TableName = "SelectBMB_DATA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBMB_DATADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectBMB_DATADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressColumn {
                get {
                    return this.columnAdress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SmokerColumn {
                get {
                    return this.columnSmoker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PregnantColumn {
                get {
                    return this.columnPregnant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingColumn {
                get {
                    return this.columnFasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingHrsColumn {
                get {
                    return this.columnFastingHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedColumn {
                get {
                    return this.columnGlandsMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedNameColumn {
                get {
                    return this.columnGlandsMedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabeticColumn {
                get {
                    return this.columnDiabetic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabetusMedColumn {
                get {
                    return this.columnDiabetusMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBsiteColumn {
                get {
                    return this.columnBMBsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMB_HistoExaminColumn {
                get {
                    return this.columnBMB_HistoExamin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneSizeColumn {
                get {
                    return this.columnBoneSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneHardnessColumn {
                get {
                    return this.columnBoneHardness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBconclusionColumn {
                get {
                    return this.columnBMBconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARow this[int index] {
                get {
                    return ((SelectBMB_DATARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMB_DATARowChangeEventHandler SelectBMB_DATARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMB_DATARowChangeEventHandler SelectBMB_DATARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMB_DATARowChangeEventHandler SelectBMB_DATARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBMB_DATARowChangeEventHandler SelectBMB_DATARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectBMB_DATARow(SelectBMB_DATARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARow AddSelectBMB_DATARow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        string email, 
                        string Adress, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        bool Smoker, 
                        bool Pregnant, 
                        bool Fasting, 
                        float FastingHrs, 
                        bool GlandsMed, 
                        string GlandsMedName, 
                        bool Diabetic, 
                        string DiabetusMed, 
                        string BMBsite, 
                        string BMB_HistoExamin, 
                        decimal BoneSize, 
                        string BoneHardness, 
                        string BMBconclusion) {
                SelectBMB_DATARow rowSelectBMB_DATARow = ((SelectBMB_DATARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        email,
                        Adress,
                        VisitDate,
                        ResultDate,
                        Smoker,
                        Pregnant,
                        Fasting,
                        FastingHrs,
                        GlandsMed,
                        GlandsMedName,
                        Diabetic,
                        DiabetusMed,
                        BMBsite,
                        BMB_HistoExamin,
                        BoneSize,
                        BoneHardness,
                        BMBconclusion};
                rowSelectBMB_DATARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectBMB_DATARow);
                return rowSelectBMB_DATARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARow FindByPatientID(int PatientID) {
                return ((SelectBMB_DATARow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectBMB_DATADataTable cln = ((SelectBMB_DATADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectBMB_DATADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnemail = base.Columns["email"];
                this.columnAdress = base.Columns["Adress"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnSmoker = base.Columns["Smoker"];
                this.columnPregnant = base.Columns["Pregnant"];
                this.columnFasting = base.Columns["Fasting"];
                this.columnFastingHrs = base.Columns["FastingHrs"];
                this.columnGlandsMed = base.Columns["GlandsMed"];
                this.columnGlandsMedName = base.Columns["GlandsMedName"];
                this.columnDiabetic = base.Columns["Diabetic"];
                this.columnDiabetusMed = base.Columns["DiabetusMed"];
                this.columnBMBsite = base.Columns["BMBsite"];
                this.columnBMB_HistoExamin = base.Columns["BMB_HistoExamin"];
                this.columnBoneSize = base.Columns["BoneSize"];
                this.columnBoneHardness = base.Columns["BoneHardness"];
                this.columnBMBconclusion = base.Columns["BMBconclusion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnAdress = new global::System.Data.DataColumn("Adress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdress);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnSmoker = new global::System.Data.DataColumn("Smoker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmoker);
                this.columnPregnant = new global::System.Data.DataColumn("Pregnant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnant);
                this.columnFasting = new global::System.Data.DataColumn("Fasting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFasting);
                this.columnFastingHrs = new global::System.Data.DataColumn("FastingHrs", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastingHrs);
                this.columnGlandsMed = new global::System.Data.DataColumn("GlandsMed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMed);
                this.columnGlandsMedName = new global::System.Data.DataColumn("GlandsMedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMedName);
                this.columnDiabetic = new global::System.Data.DataColumn("Diabetic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetic);
                this.columnDiabetusMed = new global::System.Data.DataColumn("DiabetusMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetusMed);
                this.columnBMBsite = new global::System.Data.DataColumn("BMBsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBsite);
                this.columnBMB_HistoExamin = new global::System.Data.DataColumn("BMB_HistoExamin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMB_HistoExamin);
                this.columnBoneSize = new global::System.Data.DataColumn("BoneSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneSize);
                this.columnBoneHardness = new global::System.Data.DataColumn("BoneHardness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneHardness);
                this.columnBMBconclusion = new global::System.Data.DataColumn("BMBconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBconclusion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnemail.MaxLength = 2147483647;
                this.columnAdress.MaxLength = 2147483647;
                this.columnGlandsMedName.MaxLength = 2147483647;
                this.columnDiabetusMed.MaxLength = 2147483647;
                this.columnBMBsite.MaxLength = 2147483647;
                this.columnBMB_HistoExamin.MaxLength = 2147483647;
                this.columnBoneHardness.MaxLength = 2147483647;
                this.columnBMBconclusion.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARow NewSelectBMB_DATARow() {
                return ((SelectBMB_DATARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectBMB_DATARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectBMB_DATARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectBMB_DATARowChanged != null)) {
                    this.SelectBMB_DATARowChanged(this, new SelectBMB_DATARowChangeEvent(((SelectBMB_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectBMB_DATARowChanging != null)) {
                    this.SelectBMB_DATARowChanging(this, new SelectBMB_DATARowChangeEvent(((SelectBMB_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectBMB_DATARowDeleted != null)) {
                    this.SelectBMB_DATARowDeleted(this, new SelectBMB_DATARowChangeEvent(((SelectBMB_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectBMB_DATARowDeleting != null)) {
                    this.SelectBMB_DATARowDeleting(this, new SelectBMB_DATARowChangeEvent(((SelectBMB_DATARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectBMB_DATARow(SelectBMB_DATARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectBMB_DATADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectBoneMarrowImagesDataTable : global::System.Data.TypedTableBase<SelectBoneMarrowImagesRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnImg1;
            
            private global::System.Data.DataColumn columnImg2;
            
            private global::System.Data.DataColumn columnImg3;
            
            private global::System.Data.DataColumn columnImg4;
            
            private global::System.Data.DataColumn columnImg5;
            
            private global::System.Data.DataColumn columnImg6;
            
            private global::System.Data.DataColumn columnImg7;
            
            private global::System.Data.DataColumn columnImgName1;
            
            private global::System.Data.DataColumn columnImgName2;
            
            private global::System.Data.DataColumn columnImgName3;
            
            private global::System.Data.DataColumn columnImgName4;
            
            private global::System.Data.DataColumn columnImgName5;
            
            private global::System.Data.DataColumn columnImgName6;
            
            private global::System.Data.DataColumn columnImgName7;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesDataTable() {
                this.TableName = "SelectBoneMarrowImages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBoneMarrowImagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectBoneMarrowImagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img1Column {
                get {
                    return this.columnImg1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img2Column {
                get {
                    return this.columnImg2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img3Column {
                get {
                    return this.columnImg3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img4Column {
                get {
                    return this.columnImg4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img5Column {
                get {
                    return this.columnImg5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img6Column {
                get {
                    return this.columnImg6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img7Column {
                get {
                    return this.columnImg7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName1Column {
                get {
                    return this.columnImgName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName2Column {
                get {
                    return this.columnImgName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName3Column {
                get {
                    return this.columnImgName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName4Column {
                get {
                    return this.columnImgName4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName5Column {
                get {
                    return this.columnImgName5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName6Column {
                get {
                    return this.columnImgName6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName7Column {
                get {
                    return this.columnImgName7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRow this[int index] {
                get {
                    return ((SelectBoneMarrowImagesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBoneMarrowImagesRowChangeEventHandler SelectBoneMarrowImagesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBoneMarrowImagesRowChangeEventHandler SelectBoneMarrowImagesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBoneMarrowImagesRowChangeEventHandler SelectBoneMarrowImagesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectBoneMarrowImagesRowChangeEventHandler SelectBoneMarrowImagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectBoneMarrowImagesRow(SelectBoneMarrowImagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRow AddSelectBoneMarrowImagesRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        int ID, 
                        byte[] Img1, 
                        byte[] Img2, 
                        byte[] Img3, 
                        byte[] Img4, 
                        byte[] Img5, 
                        byte[] Img6, 
                        byte[] Img7, 
                        string ImgName1, 
                        string ImgName2, 
                        string ImgName3, 
                        string ImgName4, 
                        string ImgName5, 
                        string ImgName6, 
                        string ImgName7, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate) {
                SelectBoneMarrowImagesRow rowSelectBoneMarrowImagesRow = ((SelectBoneMarrowImagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        ID,
                        Img1,
                        Img2,
                        Img3,
                        Img4,
                        Img5,
                        Img6,
                        Img7,
                        ImgName1,
                        ImgName2,
                        ImgName3,
                        ImgName4,
                        ImgName5,
                        ImgName6,
                        ImgName7,
                        VisitDate,
                        ResultDate};
                rowSelectBoneMarrowImagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectBoneMarrowImagesRow);
                return rowSelectBoneMarrowImagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRow FindByPatientID(int PatientID) {
                return ((SelectBoneMarrowImagesRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectBoneMarrowImagesDataTable cln = ((SelectBoneMarrowImagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectBoneMarrowImagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnID = base.Columns["ID"];
                this.columnImg1 = base.Columns["Img1"];
                this.columnImg2 = base.Columns["Img2"];
                this.columnImg3 = base.Columns["Img3"];
                this.columnImg4 = base.Columns["Img4"];
                this.columnImg5 = base.Columns["Img5"];
                this.columnImg6 = base.Columns["Img6"];
                this.columnImg7 = base.Columns["Img7"];
                this.columnImgName1 = base.Columns["ImgName1"];
                this.columnImgName2 = base.Columns["ImgName2"];
                this.columnImgName3 = base.Columns["ImgName3"];
                this.columnImgName4 = base.Columns["ImgName4"];
                this.columnImgName5 = base.Columns["ImgName5"];
                this.columnImgName6 = base.Columns["ImgName6"];
                this.columnImgName7 = base.Columns["ImgName7"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnImg1 = new global::System.Data.DataColumn("Img1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg1);
                this.columnImg2 = new global::System.Data.DataColumn("Img2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg2);
                this.columnImg3 = new global::System.Data.DataColumn("Img3", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg3);
                this.columnImg4 = new global::System.Data.DataColumn("Img4", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg4);
                this.columnImg5 = new global::System.Data.DataColumn("Img5", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg5);
                this.columnImg6 = new global::System.Data.DataColumn("Img6", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg6);
                this.columnImg7 = new global::System.Data.DataColumn("Img7", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg7);
                this.columnImgName1 = new global::System.Data.DataColumn("ImgName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName1);
                this.columnImgName2 = new global::System.Data.DataColumn("ImgName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName2);
                this.columnImgName3 = new global::System.Data.DataColumn("ImgName3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName3);
                this.columnImgName4 = new global::System.Data.DataColumn("ImgName4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName4);
                this.columnImgName5 = new global::System.Data.DataColumn("ImgName5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName5);
                this.columnImgName6 = new global::System.Data.DataColumn("ImgName6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName6);
                this.columnImgName7 = new global::System.Data.DataColumn("ImgName7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName7);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnImgName1.MaxLength = 2147483647;
                this.columnImgName2.MaxLength = 2147483647;
                this.columnImgName3.MaxLength = 2147483647;
                this.columnImgName4.MaxLength = 2147483647;
                this.columnImgName5.MaxLength = 2147483647;
                this.columnImgName6.MaxLength = 2147483647;
                this.columnImgName7.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRow NewSelectBoneMarrowImagesRow() {
                return ((SelectBoneMarrowImagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectBoneMarrowImagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectBoneMarrowImagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectBoneMarrowImagesRowChanged != null)) {
                    this.SelectBoneMarrowImagesRowChanged(this, new SelectBoneMarrowImagesRowChangeEvent(((SelectBoneMarrowImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectBoneMarrowImagesRowChanging != null)) {
                    this.SelectBoneMarrowImagesRowChanging(this, new SelectBoneMarrowImagesRowChangeEvent(((SelectBoneMarrowImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectBoneMarrowImagesRowDeleted != null)) {
                    this.SelectBoneMarrowImagesRowDeleted(this, new SelectBoneMarrowImagesRowChangeEvent(((SelectBoneMarrowImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectBoneMarrowImagesRowDeleting != null)) {
                    this.SelectBoneMarrowImagesRowDeleting(this, new SelectBoneMarrowImagesRowChangeEvent(((SelectBoneMarrowImagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectBoneMarrowImagesRow(SelectBoneMarrowImagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectBoneMarrowImagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectCytogeneticsDataDataTable : global::System.Data.TypedTableBase<SelectCytogeneticsDataRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnCytoTestName;
            
            private global::System.Data.DataColumn columnCytoSpecimen;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount45;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount46;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount47;
            
            private global::System.Data.DataColumn columnCytoChromosomeCountTotal;
            
            private global::System.Data.DataColumn columnCytoCellsCounted45;
            
            private global::System.Data.DataColumn columnCytoCellsCounted46;
            
            private global::System.Data.DataColumn columnCytoCellsCounted47;
            
            private global::System.Data.DataColumn columnCytoCellsCounted4Total;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed45;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed46;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed47;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographedTotal;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped45;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped46;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped47;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotypedTotal;
            
            private global::System.Data.DataColumn columnCytoKaryotype;
            
            private global::System.Data.DataColumn columnCytoInterpretation;
            
            private global::System.Data.DataColumn columnCytoRecommendation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataDataTable() {
                this.TableName = "SelectCytogeneticsData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectCytogeneticsDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectCytogeneticsDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoTestNameColumn {
                get {
                    return this.columnCytoTestName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoSpecimenColumn {
                get {
                    return this.columnCytoSpecimen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount45Column {
                get {
                    return this.columnCytoChromosomeCount45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount46Column {
                get {
                    return this.columnCytoChromosomeCount46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount47Column {
                get {
                    return this.columnCytoChromosomeCount47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCountTotalColumn {
                get {
                    return this.columnCytoChromosomeCountTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted45Column {
                get {
                    return this.columnCytoCellsCounted45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted46Column {
                get {
                    return this.columnCytoCellsCounted46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted47Column {
                get {
                    return this.columnCytoCellsCounted47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted4TotalColumn {
                get {
                    return this.columnCytoCellsCounted4Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed45Column {
                get {
                    return this.columnCytoCellsPhotographed45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed46Column {
                get {
                    return this.columnCytoCellsPhotographed46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed47Column {
                get {
                    return this.columnCytoCellsPhotographed47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographedTotalColumn {
                get {
                    return this.columnCytoCellsPhotographedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped45Column {
                get {
                    return this.columnCytoCellsKayrotyped45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped46Column {
                get {
                    return this.columnCytoCellsKayrotyped46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped47Column {
                get {
                    return this.columnCytoCellsKayrotyped47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotypedTotalColumn {
                get {
                    return this.columnCytoCellsKayrotypedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoKaryotypeColumn {
                get {
                    return this.columnCytoKaryotype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoInterpretationColumn {
                get {
                    return this.columnCytoInterpretation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoRecommendationColumn {
                get {
                    return this.columnCytoRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRow this[int index] {
                get {
                    return ((SelectCytogeneticsDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectCytogeneticsDataRowChangeEventHandler SelectCytogeneticsDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectCytogeneticsDataRowChangeEventHandler SelectCytogeneticsDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectCytogeneticsDataRowChangeEventHandler SelectCytogeneticsDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectCytogeneticsDataRowChangeEventHandler SelectCytogeneticsDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectCytogeneticsDataRow(SelectCytogeneticsDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRow AddSelectCytogeneticsDataRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        string CytoTestName, 
                        string CytoSpecimen, 
                        decimal CytoChromosomeCount45, 
                        decimal CytoChromosomeCount46, 
                        decimal CytoChromosomeCount47, 
                        decimal CytoChromosomeCountTotal, 
                        decimal CytoCellsCounted45, 
                        decimal CytoCellsCounted46, 
                        decimal CytoCellsCounted47, 
                        decimal CytoCellsCounted4Total, 
                        decimal CytoCellsPhotographed45, 
                        decimal CytoCellsPhotographed46, 
                        decimal CytoCellsPhotographed47, 
                        decimal CytoCellsPhotographedTotal, 
                        decimal CytoCellsKayrotyped45, 
                        decimal CytoCellsKayrotyped46, 
                        decimal CytoCellsKayrotyped47, 
                        decimal CytoCellsKayrotypedTotal, 
                        string CytoKaryotype, 
                        string CytoInterpretation, 
                        string CytoRecommendation) {
                SelectCytogeneticsDataRow rowSelectCytogeneticsDataRow = ((SelectCytogeneticsDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        VisitDate,
                        ResultDate,
                        CytoTestName,
                        CytoSpecimen,
                        CytoChromosomeCount45,
                        CytoChromosomeCount46,
                        CytoChromosomeCount47,
                        CytoChromosomeCountTotal,
                        CytoCellsCounted45,
                        CytoCellsCounted46,
                        CytoCellsCounted47,
                        CytoCellsCounted4Total,
                        CytoCellsPhotographed45,
                        CytoCellsPhotographed46,
                        CytoCellsPhotographed47,
                        CytoCellsPhotographedTotal,
                        CytoCellsKayrotyped45,
                        CytoCellsKayrotyped46,
                        CytoCellsKayrotyped47,
                        CytoCellsKayrotypedTotal,
                        CytoKaryotype,
                        CytoInterpretation,
                        CytoRecommendation};
                rowSelectCytogeneticsDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectCytogeneticsDataRow);
                return rowSelectCytogeneticsDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRow FindByPatientID(int PatientID) {
                return ((SelectCytogeneticsDataRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectCytogeneticsDataDataTable cln = ((SelectCytogeneticsDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectCytogeneticsDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnCytoTestName = base.Columns["CytoTestName"];
                this.columnCytoSpecimen = base.Columns["CytoSpecimen"];
                this.columnCytoChromosomeCount45 = base.Columns["CytoChromosomeCount45"];
                this.columnCytoChromosomeCount46 = base.Columns["CytoChromosomeCount46"];
                this.columnCytoChromosomeCount47 = base.Columns["CytoChromosomeCount47"];
                this.columnCytoChromosomeCountTotal = base.Columns["CytoChromosomeCountTotal"];
                this.columnCytoCellsCounted45 = base.Columns["CytoCellsCounted45"];
                this.columnCytoCellsCounted46 = base.Columns["CytoCellsCounted46"];
                this.columnCytoCellsCounted47 = base.Columns["CytoCellsCounted47"];
                this.columnCytoCellsCounted4Total = base.Columns["CytoCellsCounted4Total"];
                this.columnCytoCellsPhotographed45 = base.Columns["CytoCellsPhotographed45"];
                this.columnCytoCellsPhotographed46 = base.Columns["CytoCellsPhotographed46"];
                this.columnCytoCellsPhotographed47 = base.Columns["CytoCellsPhotographed47"];
                this.columnCytoCellsPhotographedTotal = base.Columns["CytoCellsPhotographedTotal"];
                this.columnCytoCellsKayrotyped45 = base.Columns["CytoCellsKayrotyped45"];
                this.columnCytoCellsKayrotyped46 = base.Columns["CytoCellsKayrotyped46"];
                this.columnCytoCellsKayrotyped47 = base.Columns["CytoCellsKayrotyped47"];
                this.columnCytoCellsKayrotypedTotal = base.Columns["CytoCellsKayrotypedTotal"];
                this.columnCytoKaryotype = base.Columns["CytoKaryotype"];
                this.columnCytoInterpretation = base.Columns["CytoInterpretation"];
                this.columnCytoRecommendation = base.Columns["CytoRecommendation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnCytoTestName = new global::System.Data.DataColumn("CytoTestName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoTestName);
                this.columnCytoSpecimen = new global::System.Data.DataColumn("CytoSpecimen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoSpecimen);
                this.columnCytoChromosomeCount45 = new global::System.Data.DataColumn("CytoChromosomeCount45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount45);
                this.columnCytoChromosomeCount46 = new global::System.Data.DataColumn("CytoChromosomeCount46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount46);
                this.columnCytoChromosomeCount47 = new global::System.Data.DataColumn("CytoChromosomeCount47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount47);
                this.columnCytoChromosomeCountTotal = new global::System.Data.DataColumn("CytoChromosomeCountTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCountTotal);
                this.columnCytoCellsCounted45 = new global::System.Data.DataColumn("CytoCellsCounted45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted45);
                this.columnCytoCellsCounted46 = new global::System.Data.DataColumn("CytoCellsCounted46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted46);
                this.columnCytoCellsCounted47 = new global::System.Data.DataColumn("CytoCellsCounted47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted47);
                this.columnCytoCellsCounted4Total = new global::System.Data.DataColumn("CytoCellsCounted4Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted4Total);
                this.columnCytoCellsPhotographed45 = new global::System.Data.DataColumn("CytoCellsPhotographed45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed45);
                this.columnCytoCellsPhotographed46 = new global::System.Data.DataColumn("CytoCellsPhotographed46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed46);
                this.columnCytoCellsPhotographed47 = new global::System.Data.DataColumn("CytoCellsPhotographed47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed47);
                this.columnCytoCellsPhotographedTotal = new global::System.Data.DataColumn("CytoCellsPhotographedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographedTotal);
                this.columnCytoCellsKayrotyped45 = new global::System.Data.DataColumn("CytoCellsKayrotyped45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped45);
                this.columnCytoCellsKayrotyped46 = new global::System.Data.DataColumn("CytoCellsKayrotyped46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped46);
                this.columnCytoCellsKayrotyped47 = new global::System.Data.DataColumn("CytoCellsKayrotyped47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped47);
                this.columnCytoCellsKayrotypedTotal = new global::System.Data.DataColumn("CytoCellsKayrotypedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotypedTotal);
                this.columnCytoKaryotype = new global::System.Data.DataColumn("CytoKaryotype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoKaryotype);
                this.columnCytoInterpretation = new global::System.Data.DataColumn("CytoInterpretation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoInterpretation);
                this.columnCytoRecommendation = new global::System.Data.DataColumn("CytoRecommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoRecommendation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnCytoTestName.MaxLength = 2147483647;
                this.columnCytoSpecimen.MaxLength = 2147483647;
                this.columnCytoKaryotype.MaxLength = 2147483647;
                this.columnCytoInterpretation.MaxLength = 2147483647;
                this.columnCytoRecommendation.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRow NewSelectCytogeneticsDataRow() {
                return ((SelectCytogeneticsDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectCytogeneticsDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectCytogeneticsDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectCytogeneticsDataRowChanged != null)) {
                    this.SelectCytogeneticsDataRowChanged(this, new SelectCytogeneticsDataRowChangeEvent(((SelectCytogeneticsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectCytogeneticsDataRowChanging != null)) {
                    this.SelectCytogeneticsDataRowChanging(this, new SelectCytogeneticsDataRowChangeEvent(((SelectCytogeneticsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectCytogeneticsDataRowDeleted != null)) {
                    this.SelectCytogeneticsDataRowDeleted(this, new SelectCytogeneticsDataRowChangeEvent(((SelectCytogeneticsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectCytogeneticsDataRowDeleting != null)) {
                    this.SelectCytogeneticsDataRowDeleting(this, new SelectCytogeneticsDataRowChangeEvent(((SelectCytogeneticsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectCytogeneticsDataRow(SelectCytogeneticsDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectCytogeneticsDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProcSelectBMAsp_DataDataTable : global::System.Data.TypedTableBase<ProcSelectBMAsp_DataRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnAdress;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnSmoker;
            
            private global::System.Data.DataColumn columnPregnant;
            
            private global::System.Data.DataColumn columnFasting;
            
            private global::System.Data.DataColumn columnFastingHrs;
            
            private global::System.Data.DataColumn columnGlandsMed;
            
            private global::System.Data.DataColumn columnGlandsMedName;
            
            private global::System.Data.DataColumn columnDiabetic;
            
            private global::System.Data.DataColumn columnDiabetusMed;
            
            private global::System.Data.DataColumn columnBMAspSite;
            
            private global::System.Data.DataColumn columnBMAspComment;
            
            private global::System.Data.DataColumn columnBlasts;
            
            private global::System.Data.DataColumn columnPromyelocytes;
            
            private global::System.Data.DataColumn columnMyelocytes;
            
            private global::System.Data.DataColumn columnJuvenile;
            
            private global::System.Data.DataColumn columnStaff;
            
            private global::System.Data.DataColumn columnSegmented;
            
            private global::System.Data.DataColumn columnLymphocytes;
            
            private global::System.Data.DataColumn columnMonocytes;
            
            private global::System.Data.DataColumn columnEosinophils;
            
            private global::System.Data.DataColumn columnBasophils;
            
            private global::System.Data.DataColumn columnNormoblasts;
            
            private global::System.Data.DataColumn columnPlasmaCells;
            
            private global::System.Data.DataColumn columnBMAconclusion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataDataTable() {
                this.TableName = "ProcSelectBMAsp_Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMAsp_DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProcSelectBMAsp_DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressColumn {
                get {
                    return this.columnAdress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SmokerColumn {
                get {
                    return this.columnSmoker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PregnantColumn {
                get {
                    return this.columnPregnant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingColumn {
                get {
                    return this.columnFasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingHrsColumn {
                get {
                    return this.columnFastingHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedColumn {
                get {
                    return this.columnGlandsMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedNameColumn {
                get {
                    return this.columnGlandsMedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabeticColumn {
                get {
                    return this.columnDiabetic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabetusMedColumn {
                get {
                    return this.columnDiabetusMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspSiteColumn {
                get {
                    return this.columnBMAspSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAspCommentColumn {
                get {
                    return this.columnBMAspComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlastsColumn {
                get {
                    return this.columnBlasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PromyelocytesColumn {
                get {
                    return this.columnPromyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MyelocytesColumn {
                get {
                    return this.columnMyelocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JuvenileColumn {
                get {
                    return this.columnJuvenile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffColumn {
                get {
                    return this.columnStaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SegmentedColumn {
                get {
                    return this.columnSegmented;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LymphocytesColumn {
                get {
                    return this.columnLymphocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonocytesColumn {
                get {
                    return this.columnMonocytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EosinophilsColumn {
                get {
                    return this.columnEosinophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasophilsColumn {
                get {
                    return this.columnBasophils;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormoblastsColumn {
                get {
                    return this.columnNormoblasts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlasmaCellsColumn {
                get {
                    return this.columnPlasmaCells;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMAconclusionColumn {
                get {
                    return this.columnBMAconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRow this[int index] {
                get {
                    return ((ProcSelectBMAsp_DataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMAsp_DataRowChangeEventHandler ProcSelectBMAsp_DataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMAsp_DataRowChangeEventHandler ProcSelectBMAsp_DataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMAsp_DataRowChangeEventHandler ProcSelectBMAsp_DataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMAsp_DataRowChangeEventHandler ProcSelectBMAsp_DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProcSelectBMAsp_DataRow(ProcSelectBMAsp_DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRow AddProcSelectBMAsp_DataRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        string email, 
                        string Adress, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        bool Smoker, 
                        bool Pregnant, 
                        bool Fasting, 
                        float FastingHrs, 
                        bool GlandsMed, 
                        string GlandsMedName, 
                        bool Diabetic, 
                        string DiabetusMed, 
                        string BMAspSite, 
                        string BMAspComment, 
                        decimal Blasts, 
                        decimal Promyelocytes, 
                        decimal Myelocytes, 
                        decimal Juvenile, 
                        decimal Staff, 
                        decimal Segmented, 
                        decimal Lymphocytes, 
                        decimal Monocytes, 
                        decimal Eosinophils, 
                        decimal Basophils, 
                        decimal Normoblasts, 
                        decimal PlasmaCells, 
                        string BMAconclusion) {
                ProcSelectBMAsp_DataRow rowProcSelectBMAsp_DataRow = ((ProcSelectBMAsp_DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        email,
                        Adress,
                        VisitDate,
                        ResultDate,
                        Smoker,
                        Pregnant,
                        Fasting,
                        FastingHrs,
                        GlandsMed,
                        GlandsMedName,
                        Diabetic,
                        DiabetusMed,
                        BMAspSite,
                        BMAspComment,
                        Blasts,
                        Promyelocytes,
                        Myelocytes,
                        Juvenile,
                        Staff,
                        Segmented,
                        Lymphocytes,
                        Monocytes,
                        Eosinophils,
                        Basophils,
                        Normoblasts,
                        PlasmaCells,
                        BMAconclusion};
                rowProcSelectBMAsp_DataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProcSelectBMAsp_DataRow);
                return rowProcSelectBMAsp_DataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRow FindByPatientID(int PatientID) {
                return ((ProcSelectBMAsp_DataRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProcSelectBMAsp_DataDataTable cln = ((ProcSelectBMAsp_DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProcSelectBMAsp_DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnemail = base.Columns["email"];
                this.columnAdress = base.Columns["Adress"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnSmoker = base.Columns["Smoker"];
                this.columnPregnant = base.Columns["Pregnant"];
                this.columnFasting = base.Columns["Fasting"];
                this.columnFastingHrs = base.Columns["FastingHrs"];
                this.columnGlandsMed = base.Columns["GlandsMed"];
                this.columnGlandsMedName = base.Columns["GlandsMedName"];
                this.columnDiabetic = base.Columns["Diabetic"];
                this.columnDiabetusMed = base.Columns["DiabetusMed"];
                this.columnBMAspSite = base.Columns["BMAspSite"];
                this.columnBMAspComment = base.Columns["BMAspComment"];
                this.columnBlasts = base.Columns["Blasts"];
                this.columnPromyelocytes = base.Columns["Promyelocytes"];
                this.columnMyelocytes = base.Columns["Myelocytes"];
                this.columnJuvenile = base.Columns["Juvenile"];
                this.columnStaff = base.Columns["Staff"];
                this.columnSegmented = base.Columns["Segmented"];
                this.columnLymphocytes = base.Columns["Lymphocytes"];
                this.columnMonocytes = base.Columns["Monocytes"];
                this.columnEosinophils = base.Columns["Eosinophils"];
                this.columnBasophils = base.Columns["Basophils"];
                this.columnNormoblasts = base.Columns["Normoblasts"];
                this.columnPlasmaCells = base.Columns["PlasmaCells"];
                this.columnBMAconclusion = base.Columns["BMAconclusion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnAdress = new global::System.Data.DataColumn("Adress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdress);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnSmoker = new global::System.Data.DataColumn("Smoker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmoker);
                this.columnPregnant = new global::System.Data.DataColumn("Pregnant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnant);
                this.columnFasting = new global::System.Data.DataColumn("Fasting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFasting);
                this.columnFastingHrs = new global::System.Data.DataColumn("FastingHrs", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastingHrs);
                this.columnGlandsMed = new global::System.Data.DataColumn("GlandsMed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMed);
                this.columnGlandsMedName = new global::System.Data.DataColumn("GlandsMedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMedName);
                this.columnDiabetic = new global::System.Data.DataColumn("Diabetic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetic);
                this.columnDiabetusMed = new global::System.Data.DataColumn("DiabetusMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetusMed);
                this.columnBMAspSite = new global::System.Data.DataColumn("BMAspSite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspSite);
                this.columnBMAspComment = new global::System.Data.DataColumn("BMAspComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAspComment);
                this.columnBlasts = new global::System.Data.DataColumn("Blasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlasts);
                this.columnPromyelocytes = new global::System.Data.DataColumn("Promyelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromyelocytes);
                this.columnMyelocytes = new global::System.Data.DataColumn("Myelocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMyelocytes);
                this.columnJuvenile = new global::System.Data.DataColumn("Juvenile", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJuvenile);
                this.columnStaff = new global::System.Data.DataColumn("Staff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaff);
                this.columnSegmented = new global::System.Data.DataColumn("Segmented", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegmented);
                this.columnLymphocytes = new global::System.Data.DataColumn("Lymphocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLymphocytes);
                this.columnMonocytes = new global::System.Data.DataColumn("Monocytes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonocytes);
                this.columnEosinophils = new global::System.Data.DataColumn("Eosinophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEosinophils);
                this.columnBasophils = new global::System.Data.DataColumn("Basophils", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasophils);
                this.columnNormoblasts = new global::System.Data.DataColumn("Normoblasts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormoblasts);
                this.columnPlasmaCells = new global::System.Data.DataColumn("PlasmaCells", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlasmaCells);
                this.columnBMAconclusion = new global::System.Data.DataColumn("BMAconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMAconclusion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnemail.MaxLength = 2147483647;
                this.columnAdress.MaxLength = 2147483647;
                this.columnGlandsMedName.MaxLength = 2147483647;
                this.columnDiabetusMed.MaxLength = 2147483647;
                this.columnBMAspSite.MaxLength = 2147483647;
                this.columnBMAspComment.MaxLength = 2147483647;
                this.columnBMAconclusion.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRow NewProcSelectBMAsp_DataRow() {
                return ((ProcSelectBMAsp_DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProcSelectBMAsp_DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProcSelectBMAsp_DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProcSelectBMAsp_DataRowChanged != null)) {
                    this.ProcSelectBMAsp_DataRowChanged(this, new ProcSelectBMAsp_DataRowChangeEvent(((ProcSelectBMAsp_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProcSelectBMAsp_DataRowChanging != null)) {
                    this.ProcSelectBMAsp_DataRowChanging(this, new ProcSelectBMAsp_DataRowChangeEvent(((ProcSelectBMAsp_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProcSelectBMAsp_DataRowDeleted != null)) {
                    this.ProcSelectBMAsp_DataRowDeleted(this, new ProcSelectBMAsp_DataRowChangeEvent(((ProcSelectBMAsp_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProcSelectBMAsp_DataRowDeleting != null)) {
                    this.ProcSelectBMAsp_DataRowDeleting(this, new ProcSelectBMAsp_DataRowChangeEvent(((ProcSelectBMAsp_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProcSelectBMAsp_DataRow(ProcSelectBMAsp_DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProcSelectBMAsp_DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProcSelectBMB_DataDataTable : global::System.Data.TypedTableBase<ProcSelectBMB_DataRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnAdress;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnSmoker;
            
            private global::System.Data.DataColumn columnPregnant;
            
            private global::System.Data.DataColumn columnFasting;
            
            private global::System.Data.DataColumn columnFastingHrs;
            
            private global::System.Data.DataColumn columnGlandsMed;
            
            private global::System.Data.DataColumn columnGlandsMedName;
            
            private global::System.Data.DataColumn columnDiabetic;
            
            private global::System.Data.DataColumn columnDiabetusMed;
            
            private global::System.Data.DataColumn columnBMBsite;
            
            private global::System.Data.DataColumn columnBMB_HistoExamin;
            
            private global::System.Data.DataColumn columnBoneSize;
            
            private global::System.Data.DataColumn columnBoneHardness;
            
            private global::System.Data.DataColumn columnBMBconclusion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataDataTable() {
                this.TableName = "ProcSelectBMB_Data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMB_DataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProcSelectBMB_DataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdressColumn {
                get {
                    return this.columnAdress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SmokerColumn {
                get {
                    return this.columnSmoker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PregnantColumn {
                get {
                    return this.columnPregnant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingColumn {
                get {
                    return this.columnFasting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FastingHrsColumn {
                get {
                    return this.columnFastingHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedColumn {
                get {
                    return this.columnGlandsMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlandsMedNameColumn {
                get {
                    return this.columnGlandsMedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabeticColumn {
                get {
                    return this.columnDiabetic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiabetusMedColumn {
                get {
                    return this.columnDiabetusMed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBsiteColumn {
                get {
                    return this.columnBMBsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMB_HistoExaminColumn {
                get {
                    return this.columnBMB_HistoExamin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneSizeColumn {
                get {
                    return this.columnBoneSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoneHardnessColumn {
                get {
                    return this.columnBoneHardness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BMBconclusionColumn {
                get {
                    return this.columnBMBconclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRow this[int index] {
                get {
                    return ((ProcSelectBMB_DataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMB_DataRowChangeEventHandler ProcSelectBMB_DataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMB_DataRowChangeEventHandler ProcSelectBMB_DataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMB_DataRowChangeEventHandler ProcSelectBMB_DataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMB_DataRowChangeEventHandler ProcSelectBMB_DataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProcSelectBMB_DataRow(ProcSelectBMB_DataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRow AddProcSelectBMB_DataRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        string email, 
                        string Adress, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        bool Smoker, 
                        bool Pregnant, 
                        bool Fasting, 
                        float FastingHrs, 
                        bool GlandsMed, 
                        string GlandsMedName, 
                        bool Diabetic, 
                        string DiabetusMed, 
                        string BMBsite, 
                        string BMB_HistoExamin, 
                        decimal BoneSize, 
                        string BoneHardness, 
                        string BMBconclusion) {
                ProcSelectBMB_DataRow rowProcSelectBMB_DataRow = ((ProcSelectBMB_DataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        email,
                        Adress,
                        VisitDate,
                        ResultDate,
                        Smoker,
                        Pregnant,
                        Fasting,
                        FastingHrs,
                        GlandsMed,
                        GlandsMedName,
                        Diabetic,
                        DiabetusMed,
                        BMBsite,
                        BMB_HistoExamin,
                        BoneSize,
                        BoneHardness,
                        BMBconclusion};
                rowProcSelectBMB_DataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProcSelectBMB_DataRow);
                return rowProcSelectBMB_DataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRow FindByPatientID(int PatientID) {
                return ((ProcSelectBMB_DataRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProcSelectBMB_DataDataTable cln = ((ProcSelectBMB_DataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProcSelectBMB_DataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnemail = base.Columns["email"];
                this.columnAdress = base.Columns["Adress"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnSmoker = base.Columns["Smoker"];
                this.columnPregnant = base.Columns["Pregnant"];
                this.columnFasting = base.Columns["Fasting"];
                this.columnFastingHrs = base.Columns["FastingHrs"];
                this.columnGlandsMed = base.Columns["GlandsMed"];
                this.columnGlandsMedName = base.Columns["GlandsMedName"];
                this.columnDiabetic = base.Columns["Diabetic"];
                this.columnDiabetusMed = base.Columns["DiabetusMed"];
                this.columnBMBsite = base.Columns["BMBsite"];
                this.columnBMB_HistoExamin = base.Columns["BMB_HistoExamin"];
                this.columnBoneSize = base.Columns["BoneSize"];
                this.columnBoneHardness = base.Columns["BoneHardness"];
                this.columnBMBconclusion = base.Columns["BMBconclusion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnAdress = new global::System.Data.DataColumn("Adress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdress);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnSmoker = new global::System.Data.DataColumn("Smoker", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmoker);
                this.columnPregnant = new global::System.Data.DataColumn("Pregnant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnant);
                this.columnFasting = new global::System.Data.DataColumn("Fasting", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFasting);
                this.columnFastingHrs = new global::System.Data.DataColumn("FastingHrs", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastingHrs);
                this.columnGlandsMed = new global::System.Data.DataColumn("GlandsMed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMed);
                this.columnGlandsMedName = new global::System.Data.DataColumn("GlandsMedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlandsMedName);
                this.columnDiabetic = new global::System.Data.DataColumn("Diabetic", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetic);
                this.columnDiabetusMed = new global::System.Data.DataColumn("DiabetusMed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiabetusMed);
                this.columnBMBsite = new global::System.Data.DataColumn("BMBsite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBsite);
                this.columnBMB_HistoExamin = new global::System.Data.DataColumn("BMB_HistoExamin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMB_HistoExamin);
                this.columnBoneSize = new global::System.Data.DataColumn("BoneSize", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneSize);
                this.columnBoneHardness = new global::System.Data.DataColumn("BoneHardness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoneHardness);
                this.columnBMBconclusion = new global::System.Data.DataColumn("BMBconclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMBconclusion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnemail.MaxLength = 2147483647;
                this.columnAdress.MaxLength = 2147483647;
                this.columnGlandsMedName.MaxLength = 2147483647;
                this.columnDiabetusMed.MaxLength = 2147483647;
                this.columnBMBsite.MaxLength = 2147483647;
                this.columnBMB_HistoExamin.MaxLength = 2147483647;
                this.columnBoneHardness.MaxLength = 2147483647;
                this.columnBMBconclusion.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRow NewProcSelectBMB_DataRow() {
                return ((ProcSelectBMB_DataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProcSelectBMB_DataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProcSelectBMB_DataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProcSelectBMB_DataRowChanged != null)) {
                    this.ProcSelectBMB_DataRowChanged(this, new ProcSelectBMB_DataRowChangeEvent(((ProcSelectBMB_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProcSelectBMB_DataRowChanging != null)) {
                    this.ProcSelectBMB_DataRowChanging(this, new ProcSelectBMB_DataRowChangeEvent(((ProcSelectBMB_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProcSelectBMB_DataRowDeleted != null)) {
                    this.ProcSelectBMB_DataRowDeleted(this, new ProcSelectBMB_DataRowChangeEvent(((ProcSelectBMB_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProcSelectBMB_DataRowDeleting != null)) {
                    this.ProcSelectBMB_DataRowDeleting(this, new ProcSelectBMB_DataRowChangeEvent(((ProcSelectBMB_DataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProcSelectBMB_DataRow(ProcSelectBMB_DataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProcSelectBMB_DataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProcSelectBMimagesDataTable : global::System.Data.TypedTableBase<ProcSelectBMimagesRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnImg1;
            
            private global::System.Data.DataColumn columnImg2;
            
            private global::System.Data.DataColumn columnImg3;
            
            private global::System.Data.DataColumn columnImg4;
            
            private global::System.Data.DataColumn columnImg5;
            
            private global::System.Data.DataColumn columnImg6;
            
            private global::System.Data.DataColumn columnImg7;
            
            private global::System.Data.DataColumn columnImgName1;
            
            private global::System.Data.DataColumn columnImgName2;
            
            private global::System.Data.DataColumn columnImgName3;
            
            private global::System.Data.DataColumn columnImgName4;
            
            private global::System.Data.DataColumn columnImgName5;
            
            private global::System.Data.DataColumn columnImgName6;
            
            private global::System.Data.DataColumn columnImgName7;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesDataTable() {
                this.TableName = "ProcSelectBMimages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMimagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProcSelectBMimagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img1Column {
                get {
                    return this.columnImg1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img2Column {
                get {
                    return this.columnImg2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img3Column {
                get {
                    return this.columnImg3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img4Column {
                get {
                    return this.columnImg4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img5Column {
                get {
                    return this.columnImg5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img6Column {
                get {
                    return this.columnImg6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Img7Column {
                get {
                    return this.columnImg7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName1Column {
                get {
                    return this.columnImgName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName2Column {
                get {
                    return this.columnImgName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName3Column {
                get {
                    return this.columnImgName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName4Column {
                get {
                    return this.columnImgName4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName5Column {
                get {
                    return this.columnImgName5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName6Column {
                get {
                    return this.columnImgName6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgName7Column {
                get {
                    return this.columnImgName7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRow this[int index] {
                get {
                    return ((ProcSelectBMimagesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMimagesRowChangeEventHandler ProcSelectBMimagesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMimagesRowChangeEventHandler ProcSelectBMimagesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMimagesRowChangeEventHandler ProcSelectBMimagesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectBMimagesRowChangeEventHandler ProcSelectBMimagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProcSelectBMimagesRow(ProcSelectBMimagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRow AddProcSelectBMimagesRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        int ID, 
                        byte[] Img1, 
                        byte[] Img2, 
                        byte[] Img3, 
                        byte[] Img4, 
                        byte[] Img5, 
                        byte[] Img6, 
                        byte[] Img7, 
                        string ImgName1, 
                        string ImgName2, 
                        string ImgName3, 
                        string ImgName4, 
                        string ImgName5, 
                        string ImgName6, 
                        string ImgName7, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate) {
                ProcSelectBMimagesRow rowProcSelectBMimagesRow = ((ProcSelectBMimagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        ID,
                        Img1,
                        Img2,
                        Img3,
                        Img4,
                        Img5,
                        Img6,
                        Img7,
                        ImgName1,
                        ImgName2,
                        ImgName3,
                        ImgName4,
                        ImgName5,
                        ImgName6,
                        ImgName7,
                        VisitDate,
                        ResultDate};
                rowProcSelectBMimagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProcSelectBMimagesRow);
                return rowProcSelectBMimagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRow FindByPatientID(int PatientID) {
                return ((ProcSelectBMimagesRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProcSelectBMimagesDataTable cln = ((ProcSelectBMimagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProcSelectBMimagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnID = base.Columns["ID"];
                this.columnImg1 = base.Columns["Img1"];
                this.columnImg2 = base.Columns["Img2"];
                this.columnImg3 = base.Columns["Img3"];
                this.columnImg4 = base.Columns["Img4"];
                this.columnImg5 = base.Columns["Img5"];
                this.columnImg6 = base.Columns["Img6"];
                this.columnImg7 = base.Columns["Img7"];
                this.columnImgName1 = base.Columns["ImgName1"];
                this.columnImgName2 = base.Columns["ImgName2"];
                this.columnImgName3 = base.Columns["ImgName3"];
                this.columnImgName4 = base.Columns["ImgName4"];
                this.columnImgName5 = base.Columns["ImgName5"];
                this.columnImgName6 = base.Columns["ImgName6"];
                this.columnImgName7 = base.Columns["ImgName7"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnImg1 = new global::System.Data.DataColumn("Img1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg1);
                this.columnImg2 = new global::System.Data.DataColumn("Img2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg2);
                this.columnImg3 = new global::System.Data.DataColumn("Img3", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg3);
                this.columnImg4 = new global::System.Data.DataColumn("Img4", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg4);
                this.columnImg5 = new global::System.Data.DataColumn("Img5", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg5);
                this.columnImg6 = new global::System.Data.DataColumn("Img6", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg6);
                this.columnImg7 = new global::System.Data.DataColumn("Img7", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImg7);
                this.columnImgName1 = new global::System.Data.DataColumn("ImgName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName1);
                this.columnImgName2 = new global::System.Data.DataColumn("ImgName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName2);
                this.columnImgName3 = new global::System.Data.DataColumn("ImgName3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName3);
                this.columnImgName4 = new global::System.Data.DataColumn("ImgName4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName4);
                this.columnImgName5 = new global::System.Data.DataColumn("ImgName5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName5);
                this.columnImgName6 = new global::System.Data.DataColumn("ImgName6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName6);
                this.columnImgName7 = new global::System.Data.DataColumn("ImgName7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgName7);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnImgName1.MaxLength = 2147483647;
                this.columnImgName2.MaxLength = 2147483647;
                this.columnImgName3.MaxLength = 2147483647;
                this.columnImgName4.MaxLength = 2147483647;
                this.columnImgName5.MaxLength = 2147483647;
                this.columnImgName6.MaxLength = 2147483647;
                this.columnImgName7.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRow NewProcSelectBMimagesRow() {
                return ((ProcSelectBMimagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProcSelectBMimagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProcSelectBMimagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProcSelectBMimagesRowChanged != null)) {
                    this.ProcSelectBMimagesRowChanged(this, new ProcSelectBMimagesRowChangeEvent(((ProcSelectBMimagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProcSelectBMimagesRowChanging != null)) {
                    this.ProcSelectBMimagesRowChanging(this, new ProcSelectBMimagesRowChangeEvent(((ProcSelectBMimagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProcSelectBMimagesRowDeleted != null)) {
                    this.ProcSelectBMimagesRowDeleted(this, new ProcSelectBMimagesRowChangeEvent(((ProcSelectBMimagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProcSelectBMimagesRowDeleting != null)) {
                    this.ProcSelectBMimagesRowDeleting(this, new ProcSelectBMimagesRowChangeEvent(((ProcSelectBMimagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProcSelectBMimagesRow(ProcSelectBMimagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProcSelectBMimagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProcSelectCytogeneticsDataTable : global::System.Data.TypedTableBase<ProcSelectCytogeneticsRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnCytoTestName;
            
            private global::System.Data.DataColumn columnCytoSpecimen;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount45;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount46;
            
            private global::System.Data.DataColumn columnCytoChromosomeCount47;
            
            private global::System.Data.DataColumn columnCytoChromosomeCountTotal;
            
            private global::System.Data.DataColumn columnCytoCellsCounted45;
            
            private global::System.Data.DataColumn columnCytoCellsCounted46;
            
            private global::System.Data.DataColumn columnCytoCellsCounted47;
            
            private global::System.Data.DataColumn columnCytoCellsCounted4Total;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed45;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed46;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographed47;
            
            private global::System.Data.DataColumn columnCytoCellsPhotographedTotal;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped45;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped46;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotyped47;
            
            private global::System.Data.DataColumn columnCytoCellsKayrotypedTotal;
            
            private global::System.Data.DataColumn columnCytoKaryotype;
            
            private global::System.Data.DataColumn columnCytoInterpretation;
            
            private global::System.Data.DataColumn columnCytoRecommendation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsDataTable() {
                this.TableName = "ProcSelectCytogenetics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectCytogeneticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProcSelectCytogeneticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoTestNameColumn {
                get {
                    return this.columnCytoTestName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoSpecimenColumn {
                get {
                    return this.columnCytoSpecimen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount45Column {
                get {
                    return this.columnCytoChromosomeCount45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount46Column {
                get {
                    return this.columnCytoChromosomeCount46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCount47Column {
                get {
                    return this.columnCytoChromosomeCount47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoChromosomeCountTotalColumn {
                get {
                    return this.columnCytoChromosomeCountTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted45Column {
                get {
                    return this.columnCytoCellsCounted45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted46Column {
                get {
                    return this.columnCytoCellsCounted46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted47Column {
                get {
                    return this.columnCytoCellsCounted47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsCounted4TotalColumn {
                get {
                    return this.columnCytoCellsCounted4Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed45Column {
                get {
                    return this.columnCytoCellsPhotographed45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed46Column {
                get {
                    return this.columnCytoCellsPhotographed46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographed47Column {
                get {
                    return this.columnCytoCellsPhotographed47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsPhotographedTotalColumn {
                get {
                    return this.columnCytoCellsPhotographedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped45Column {
                get {
                    return this.columnCytoCellsKayrotyped45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped46Column {
                get {
                    return this.columnCytoCellsKayrotyped46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotyped47Column {
                get {
                    return this.columnCytoCellsKayrotyped47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoCellsKayrotypedTotalColumn {
                get {
                    return this.columnCytoCellsKayrotypedTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoKaryotypeColumn {
                get {
                    return this.columnCytoKaryotype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoInterpretationColumn {
                get {
                    return this.columnCytoInterpretation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CytoRecommendationColumn {
                get {
                    return this.columnCytoRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRow this[int index] {
                get {
                    return ((ProcSelectCytogeneticsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectCytogeneticsRowChangeEventHandler ProcSelectCytogeneticsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectCytogeneticsRowChangeEventHandler ProcSelectCytogeneticsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectCytogeneticsRowChangeEventHandler ProcSelectCytogeneticsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectCytogeneticsRowChangeEventHandler ProcSelectCytogeneticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProcSelectCytogeneticsRow(ProcSelectCytogeneticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRow AddProcSelectCytogeneticsRow(
                        int PatientID, 
                        string PName, 
                        string DrName, 
                        decimal Age, 
                        string AgeType, 
                        string Gender, 
                        System.DateTime VisitDate, 
                        System.DateTime ResultDate, 
                        string CytoTestName, 
                        string CytoSpecimen, 
                        decimal CytoChromosomeCount45, 
                        decimal CytoChromosomeCount46, 
                        decimal CytoChromosomeCount47, 
                        decimal CytoChromosomeCountTotal, 
                        decimal CytoCellsCounted45, 
                        decimal CytoCellsCounted46, 
                        decimal CytoCellsCounted47, 
                        decimal CytoCellsCounted4Total, 
                        decimal CytoCellsPhotographed45, 
                        decimal CytoCellsPhotographed46, 
                        decimal CytoCellsPhotographed47, 
                        decimal CytoCellsPhotographedTotal, 
                        decimal CytoCellsKayrotyped45, 
                        decimal CytoCellsKayrotyped46, 
                        decimal CytoCellsKayrotyped47, 
                        decimal CytoCellsKayrotypedTotal, 
                        string CytoKaryotype, 
                        string CytoInterpretation, 
                        string CytoRecommendation) {
                ProcSelectCytogeneticsRow rowProcSelectCytogeneticsRow = ((ProcSelectCytogeneticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        Gender,
                        VisitDate,
                        ResultDate,
                        CytoTestName,
                        CytoSpecimen,
                        CytoChromosomeCount45,
                        CytoChromosomeCount46,
                        CytoChromosomeCount47,
                        CytoChromosomeCountTotal,
                        CytoCellsCounted45,
                        CytoCellsCounted46,
                        CytoCellsCounted47,
                        CytoCellsCounted4Total,
                        CytoCellsPhotographed45,
                        CytoCellsPhotographed46,
                        CytoCellsPhotographed47,
                        CytoCellsPhotographedTotal,
                        CytoCellsKayrotyped45,
                        CytoCellsKayrotyped46,
                        CytoCellsKayrotyped47,
                        CytoCellsKayrotypedTotal,
                        CytoKaryotype,
                        CytoInterpretation,
                        CytoRecommendation};
                rowProcSelectCytogeneticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProcSelectCytogeneticsRow);
                return rowProcSelectCytogeneticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRow FindByPatientID(int PatientID) {
                return ((ProcSelectCytogeneticsRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProcSelectCytogeneticsDataTable cln = ((ProcSelectCytogeneticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProcSelectCytogeneticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnGender = base.Columns["Gender"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnCytoTestName = base.Columns["CytoTestName"];
                this.columnCytoSpecimen = base.Columns["CytoSpecimen"];
                this.columnCytoChromosomeCount45 = base.Columns["CytoChromosomeCount45"];
                this.columnCytoChromosomeCount46 = base.Columns["CytoChromosomeCount46"];
                this.columnCytoChromosomeCount47 = base.Columns["CytoChromosomeCount47"];
                this.columnCytoChromosomeCountTotal = base.Columns["CytoChromosomeCountTotal"];
                this.columnCytoCellsCounted45 = base.Columns["CytoCellsCounted45"];
                this.columnCytoCellsCounted46 = base.Columns["CytoCellsCounted46"];
                this.columnCytoCellsCounted47 = base.Columns["CytoCellsCounted47"];
                this.columnCytoCellsCounted4Total = base.Columns["CytoCellsCounted4Total"];
                this.columnCytoCellsPhotographed45 = base.Columns["CytoCellsPhotographed45"];
                this.columnCytoCellsPhotographed46 = base.Columns["CytoCellsPhotographed46"];
                this.columnCytoCellsPhotographed47 = base.Columns["CytoCellsPhotographed47"];
                this.columnCytoCellsPhotographedTotal = base.Columns["CytoCellsPhotographedTotal"];
                this.columnCytoCellsKayrotyped45 = base.Columns["CytoCellsKayrotyped45"];
                this.columnCytoCellsKayrotyped46 = base.Columns["CytoCellsKayrotyped46"];
                this.columnCytoCellsKayrotyped47 = base.Columns["CytoCellsKayrotyped47"];
                this.columnCytoCellsKayrotypedTotal = base.Columns["CytoCellsKayrotypedTotal"];
                this.columnCytoKaryotype = base.Columns["CytoKaryotype"];
                this.columnCytoInterpretation = base.Columns["CytoInterpretation"];
                this.columnCytoRecommendation = base.Columns["CytoRecommendation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnCytoTestName = new global::System.Data.DataColumn("CytoTestName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoTestName);
                this.columnCytoSpecimen = new global::System.Data.DataColumn("CytoSpecimen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoSpecimen);
                this.columnCytoChromosomeCount45 = new global::System.Data.DataColumn("CytoChromosomeCount45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount45);
                this.columnCytoChromosomeCount46 = new global::System.Data.DataColumn("CytoChromosomeCount46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount46);
                this.columnCytoChromosomeCount47 = new global::System.Data.DataColumn("CytoChromosomeCount47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCount47);
                this.columnCytoChromosomeCountTotal = new global::System.Data.DataColumn("CytoChromosomeCountTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoChromosomeCountTotal);
                this.columnCytoCellsCounted45 = new global::System.Data.DataColumn("CytoCellsCounted45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted45);
                this.columnCytoCellsCounted46 = new global::System.Data.DataColumn("CytoCellsCounted46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted46);
                this.columnCytoCellsCounted47 = new global::System.Data.DataColumn("CytoCellsCounted47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted47);
                this.columnCytoCellsCounted4Total = new global::System.Data.DataColumn("CytoCellsCounted4Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsCounted4Total);
                this.columnCytoCellsPhotographed45 = new global::System.Data.DataColumn("CytoCellsPhotographed45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed45);
                this.columnCytoCellsPhotographed46 = new global::System.Data.DataColumn("CytoCellsPhotographed46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed46);
                this.columnCytoCellsPhotographed47 = new global::System.Data.DataColumn("CytoCellsPhotographed47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographed47);
                this.columnCytoCellsPhotographedTotal = new global::System.Data.DataColumn("CytoCellsPhotographedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsPhotographedTotal);
                this.columnCytoCellsKayrotyped45 = new global::System.Data.DataColumn("CytoCellsKayrotyped45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped45);
                this.columnCytoCellsKayrotyped46 = new global::System.Data.DataColumn("CytoCellsKayrotyped46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped46);
                this.columnCytoCellsKayrotyped47 = new global::System.Data.DataColumn("CytoCellsKayrotyped47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotyped47);
                this.columnCytoCellsKayrotypedTotal = new global::System.Data.DataColumn("CytoCellsKayrotypedTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoCellsKayrotypedTotal);
                this.columnCytoKaryotype = new global::System.Data.DataColumn("CytoKaryotype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoKaryotype);
                this.columnCytoInterpretation = new global::System.Data.DataColumn("CytoInterpretation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoInterpretation);
                this.columnCytoRecommendation = new global::System.Data.DataColumn("CytoRecommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCytoRecommendation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnCytoTestName.MaxLength = 2147483647;
                this.columnCytoSpecimen.MaxLength = 2147483647;
                this.columnCytoKaryotype.MaxLength = 2147483647;
                this.columnCytoInterpretation.MaxLength = 2147483647;
                this.columnCytoRecommendation.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRow NewProcSelectCytogeneticsRow() {
                return ((ProcSelectCytogeneticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProcSelectCytogeneticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProcSelectCytogeneticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProcSelectCytogeneticsRowChanged != null)) {
                    this.ProcSelectCytogeneticsRowChanged(this, new ProcSelectCytogeneticsRowChangeEvent(((ProcSelectCytogeneticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProcSelectCytogeneticsRowChanging != null)) {
                    this.ProcSelectCytogeneticsRowChanging(this, new ProcSelectCytogeneticsRowChangeEvent(((ProcSelectCytogeneticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProcSelectCytogeneticsRowDeleted != null)) {
                    this.ProcSelectCytogeneticsRowDeleted(this, new ProcSelectCytogeneticsRowChangeEvent(((ProcSelectCytogeneticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProcSelectCytogeneticsRowDeleting != null)) {
                    this.ProcSelectCytogeneticsRowDeleting(this, new ProcSelectCytogeneticsRowChangeEvent(((ProcSelectCytogeneticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProcSelectCytogeneticsRow(ProcSelectCytogeneticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProcSelectCytogeneticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProcSelectImmunophenotypingDataTable : global::System.Data.TypedTableBase<ProcSelectImmunophenotypingRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnPName;
            
            private global::System.Data.DataColumn columnDrName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnAgeType;
            
            private global::System.Data.DataColumn columnVisitDate;
            
            private global::System.Data.DataColumn columnResultDate;
            
            private global::System.Data.DataColumn columnPhenotypeImmuPhen;
            
            private global::System.Data.DataColumn columnCommentImmuPhen;
            
            private global::System.Data.DataColumn columnConclusionImmuPheno;
            
            private global::System.Data.DataColumn columnMarkerName;
            
            private global::System.Data.DataColumn columnPercentage;
            
            private global::System.Data.DataColumn columnResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingDataTable() {
                this.TableName = "ProcSelectImmunophenotyping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectImmunophenotypingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProcSelectImmunophenotypingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNameColumn {
                get {
                    return this.columnPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrNameColumn {
                get {
                    return this.columnDrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeTypeColumn {
                get {
                    return this.columnAgeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitDateColumn {
                get {
                    return this.columnVisitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultDateColumn {
                get {
                    return this.columnResultDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhenotypeImmuPhenColumn {
                get {
                    return this.columnPhenotypeImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentImmuPhenColumn {
                get {
                    return this.columnCommentImmuPhen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionImmuPhenoColumn {
                get {
                    return this.columnConclusionImmuPheno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkerNameColumn {
                get {
                    return this.columnMarkerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentageColumn {
                get {
                    return this.columnPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultColumn {
                get {
                    return this.columnResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRow this[int index] {
                get {
                    return ((ProcSelectImmunophenotypingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectImmunophenotypingRowChangeEventHandler ProcSelectImmunophenotypingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectImmunophenotypingRowChangeEventHandler ProcSelectImmunophenotypingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectImmunophenotypingRowChangeEventHandler ProcSelectImmunophenotypingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProcSelectImmunophenotypingRowChangeEventHandler ProcSelectImmunophenotypingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProcSelectImmunophenotypingRow(ProcSelectImmunophenotypingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRow AddProcSelectImmunophenotypingRow(int PatientID, string PName, string DrName, decimal Age, string AgeType, System.DateTime VisitDate, System.DateTime ResultDate, string PhenotypeImmuPhen, string CommentImmuPhen, string ConclusionImmuPheno, string MarkerName, string Percentage, string Result) {
                ProcSelectImmunophenotypingRow rowProcSelectImmunophenotypingRow = ((ProcSelectImmunophenotypingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        PName,
                        DrName,
                        Age,
                        AgeType,
                        VisitDate,
                        ResultDate,
                        PhenotypeImmuPhen,
                        CommentImmuPhen,
                        ConclusionImmuPheno,
                        MarkerName,
                        Percentage,
                        Result};
                rowProcSelectImmunophenotypingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProcSelectImmunophenotypingRow);
                return rowProcSelectImmunophenotypingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRow FindByPatientID(int PatientID) {
                return ((ProcSelectImmunophenotypingRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProcSelectImmunophenotypingDataTable cln = ((ProcSelectImmunophenotypingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProcSelectImmunophenotypingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnPName = base.Columns["PName"];
                this.columnDrName = base.Columns["DrName"];
                this.columnAge = base.Columns["Age"];
                this.columnAgeType = base.Columns["AgeType"];
                this.columnVisitDate = base.Columns["VisitDate"];
                this.columnResultDate = base.Columns["ResultDate"];
                this.columnPhenotypeImmuPhen = base.Columns["PhenotypeImmuPhen"];
                this.columnCommentImmuPhen = base.Columns["CommentImmuPhen"];
                this.columnConclusionImmuPheno = base.Columns["ConclusionImmuPheno"];
                this.columnMarkerName = base.Columns["MarkerName"];
                this.columnPercentage = base.Columns["Percentage"];
                this.columnResult = base.Columns["Result"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnPName = new global::System.Data.DataColumn("PName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPName);
                this.columnDrName = new global::System.Data.DataColumn("DrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnAgeType = new global::System.Data.DataColumn("AgeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeType);
                this.columnVisitDate = new global::System.Data.DataColumn("VisitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitDate);
                this.columnResultDate = new global::System.Data.DataColumn("ResultDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultDate);
                this.columnPhenotypeImmuPhen = new global::System.Data.DataColumn("PhenotypeImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhenotypeImmuPhen);
                this.columnCommentImmuPhen = new global::System.Data.DataColumn("CommentImmuPhen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentImmuPhen);
                this.columnConclusionImmuPheno = new global::System.Data.DataColumn("ConclusionImmuPheno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusionImmuPheno);
                this.columnMarkerName = new global::System.Data.DataColumn("MarkerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkerName);
                this.columnPercentage = new global::System.Data.DataColumn("Percentage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentage);
                this.columnResult = new global::System.Data.DataColumn("Result", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnPName.MaxLength = 2147483647;
                this.columnDrName.MaxLength = 2147483647;
                this.columnAgeType.MaxLength = 2147483647;
                this.columnPhenotypeImmuPhen.MaxLength = 2147483647;
                this.columnCommentImmuPhen.MaxLength = 2147483647;
                this.columnConclusionImmuPheno.MaxLength = 2147483647;
                this.columnMarkerName.MaxLength = 2147483647;
                this.columnPercentage.MaxLength = 2147483647;
                this.columnResult.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRow NewProcSelectImmunophenotypingRow() {
                return ((ProcSelectImmunophenotypingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProcSelectImmunophenotypingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProcSelectImmunophenotypingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProcSelectImmunophenotypingRowChanged != null)) {
                    this.ProcSelectImmunophenotypingRowChanged(this, new ProcSelectImmunophenotypingRowChangeEvent(((ProcSelectImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProcSelectImmunophenotypingRowChanging != null)) {
                    this.ProcSelectImmunophenotypingRowChanging(this, new ProcSelectImmunophenotypingRowChangeEvent(((ProcSelectImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProcSelectImmunophenotypingRowDeleted != null)) {
                    this.ProcSelectImmunophenotypingRowDeleted(this, new ProcSelectImmunophenotypingRowChangeEvent(((ProcSelectImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProcSelectImmunophenotypingRowDeleting != null)) {
                    this.ProcSelectImmunophenotypingRowDeleting(this, new ProcSelectImmunophenotypingRowChangeEvent(((ProcSelectImmunophenotypingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProcSelectImmunophenotypingRow(ProcSelectImmunophenotypingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FullDataSet ds = new FullDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProcSelectImmunophenotypingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AntibioticResultRow : global::System.Data.DataRow {
            
            private AntibioticResultDataTable tableAntibioticResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AntibioticResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAntibioticResult = ((AntibioticResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CulturesResultsUID {
                get {
                    try {
                        return ((int)(this[this.tableAntibioticResult.CulturesResultsUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CulturesResultsUID\' in table \'AntibioticResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAntibioticResult.CulturesResultsUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AntibioticResultUID {
                get {
                    return ((int)(this[this.tableAntibioticResult.AntibioticResultUIDColumn]));
                }
                set {
                    this[this.tableAntibioticResult.AntibioticResultUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AntibioticNameForResult {
                get {
                    try {
                        return ((string)(this[this.tableAntibioticResult.AntibioticNameForResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticNameForResult\' in table \'AntibioticResult\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAntibioticResult.AntibioticNameForResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AntibioticStatus {
                get {
                    try {
                        return ((string)(this[this.tableAntibioticResult.AntibioticStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticStatus\' in table \'AntibioticResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAntibioticResult.AntibioticStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow CulturesResultRow {
                get {
                    return ((CulturesResultRow)(this.GetParentRow(this.Table.ParentRelations["FK_AntibioticResult_CulturesResult"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AntibioticResult_CulturesResult"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCulturesResultsUIDNull() {
                return this.IsNull(this.tableAntibioticResult.CulturesResultsUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCulturesResultsUIDNull() {
                this[this.tableAntibioticResult.CulturesResultsUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAntibioticNameForResultNull() {
                return this.IsNull(this.tableAntibioticResult.AntibioticNameForResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAntibioticNameForResultNull() {
                this[this.tableAntibioticResult.AntibioticNameForResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAntibioticStatusNull() {
                return this.IsNull(this.tableAntibioticResult.AntibioticStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAntibioticStatusNull() {
                this[this.tableAntibioticResult.AntibioticStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AntibioticsSourceRow : global::System.Data.DataRow {
            
            private AntibioticsSourceDataTable tableAntibioticsSource;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AntibioticsSourceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAntibioticsSource = ((AntibioticsSourceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AntibioticUID {
                get {
                    return ((int)(this[this.tableAntibioticsSource.AntibioticUIDColumn]));
                }
                set {
                    this[this.tableAntibioticsSource.AntibioticUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AntibioticName {
                get {
                    try {
                        return ((string)(this[this.tableAntibioticsSource.AntibioticNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticName\' in table \'AntibioticsSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAntibioticsSource.AntibioticNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AntibioticAbbreviation {
                get {
                    try {
                        return ((string)(this[this.tableAntibioticsSource.AntibioticAbbreviationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticAbbreviation\' in table \'AntibioticsSource\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAntibioticsSource.AntibioticAbbreviationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAntibioticNameNull() {
                return this.IsNull(this.tableAntibioticsSource.AntibioticNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAntibioticNameNull() {
                this[this.tableAntibioticsSource.AntibioticNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAntibioticAbbreviationNull() {
                return this.IsNull(this.tableAntibioticsSource.AntibioticAbbreviationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAntibioticAbbreviationNull() {
                this[this.tableAntibioticsSource.AntibioticAbbreviationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BoneMarrowResultsRow : global::System.Data.DataRow {
            
            private BoneMarrowResultsDataTable tableBoneMarrowResults;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BoneMarrowResultsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBoneMarrowResults = ((BoneMarrowResultsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableBoneMarrowResults.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBsite {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMBsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBsite\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMBsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspSite {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMAspSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspSite\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMAspSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMB_HistoExamin {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMB_HistoExaminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMB_HistoExamin\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMB_HistoExaminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspComment {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMAspCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspComment\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMAspCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Blasts {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.BlastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Blasts\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BlastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Promyelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.PromyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Promyelocytes\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.PromyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Myelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.MyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myelocytes\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.MyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Juvenile {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.JuvenileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Juvenile\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.JuvenileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Staff {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.StaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Staff\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.StaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Segmented {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.SegmentedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Segmented\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.SegmentedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Lymphocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.LymphocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lymphocytes\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.LymphocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Monocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.MonocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Monocytes\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.MonocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Eosinophils {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.EosinophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eosinophils\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.EosinophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Basophils {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.BasophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Basophils\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BasophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Normoblasts {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.NormoblastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normoblasts\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.NormoblastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PlasmaCells {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.PlasmaCellsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlasmaCells\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.PlasmaCellsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoneHardness {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BoneHardnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneHardness\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BoneHardnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BoneSize {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.BoneSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneSize\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BoneSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBconclusion {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMBconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBconclusion\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMBconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAconclusion {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.BMAconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAconclusion\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.BMAconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uni2 {
                get {
                    return ((int)(this[this.tableBoneMarrowResults.Uni2Column]));
                }
                set {
                    this[this.tableBoneMarrowResults.Uni2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhenotypeImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.PhenotypeImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhenotypeImmuPhen\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.PhenotypeImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CommentImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CommentImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentImmuPhen\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CommentImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConclusionImmuPheno {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.ConclusionImmuPhenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConclusionImmuPheno\' in table \'BoneMarrowResults\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.ConclusionImmuPhenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoTestName {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CytoTestNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoTestName\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoTestNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoSpecimen {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CytoSpecimenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoSpecimen\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoSpecimenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount45 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoChromosomeCount45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount45\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoChromosomeCount45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount46 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoChromosomeCount46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount46\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoChromosomeCount46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount47 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoChromosomeCount47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount47\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoChromosomeCount47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCountTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoChromosomeCountTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCountTotal\' in table \'BoneMarrowResults\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoChromosomeCountTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted45 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsCounted45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted45\' in table \'BoneMarrowResults\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsCounted45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted46 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsCounted46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted46\' in table \'BoneMarrowResults\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsCounted46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted47 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsCounted47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted47\' in table \'BoneMarrowResults\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsCounted47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted4Total {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsCounted4TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted4Total\' in table \'BoneMarrowResults\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsCounted4TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed45 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsPhotographed45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed45\' in table \'BoneMarrowResults\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsPhotographed45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed46 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsPhotographed46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed46\' in table \'BoneMarrowResults\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsPhotographed46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed47 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsPhotographed47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed47\' in table \'BoneMarrowResults\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsPhotographed47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsPhotographedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographedTotal\' in table \'BoneMarrowResults\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsPhotographedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped45 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsKayrotyped45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped45\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsKayrotyped45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped46 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsKayrotyped46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped46\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsKayrotyped46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped47 {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsKayrotyped47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped47\' in table \'BoneMarrowResults\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsKayrotyped47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotypedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableBoneMarrowResults.CytoCellsKayrotypedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotypedTotal\' in table \'BoneMarrowResults\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoCellsKayrotypedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoKaryotype {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CytoKaryotypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoKaryotype\' in table \'BoneMarrowResults\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoKaryotypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoInterpretation {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CytoInterpretationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoInterpretation\' in table \'BoneMarrowResults\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoInterpretationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoRecommendation {
                get {
                    try {
                        return ((string)(this[this.tableBoneMarrowResults.CytoRecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoRecommendation\' in table \'BoneMarrowResults\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBoneMarrowResults.CytoRecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow PatientDetailsRow {
                get {
                    return ((PatientDetailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_BoneMarrowResults_PatientDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BoneMarrowResults_PatientDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableBoneMarrowResults.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableBoneMarrowResults.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBsiteNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMBsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBsiteNull() {
                this[this.tableBoneMarrowResults.BMBsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspSiteNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMAspSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspSiteNull() {
                this[this.tableBoneMarrowResults.BMAspSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMB_HistoExaminNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMB_HistoExaminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMB_HistoExaminNull() {
                this[this.tableBoneMarrowResults.BMB_HistoExaminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspCommentNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMAspCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspCommentNull() {
                this[this.tableBoneMarrowResults.BMAspCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlastsNull() {
                return this.IsNull(this.tableBoneMarrowResults.BlastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlastsNull() {
                this[this.tableBoneMarrowResults.BlastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPromyelocytesNull() {
                return this.IsNull(this.tableBoneMarrowResults.PromyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPromyelocytesNull() {
                this[this.tableBoneMarrowResults.PromyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMyelocytesNull() {
                return this.IsNull(this.tableBoneMarrowResults.MyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMyelocytesNull() {
                this[this.tableBoneMarrowResults.MyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJuvenileNull() {
                return this.IsNull(this.tableBoneMarrowResults.JuvenileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJuvenileNull() {
                this[this.tableBoneMarrowResults.JuvenileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffNull() {
                return this.IsNull(this.tableBoneMarrowResults.StaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffNull() {
                this[this.tableBoneMarrowResults.StaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSegmentedNull() {
                return this.IsNull(this.tableBoneMarrowResults.SegmentedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSegmentedNull() {
                this[this.tableBoneMarrowResults.SegmentedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLymphocytesNull() {
                return this.IsNull(this.tableBoneMarrowResults.LymphocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLymphocytesNull() {
                this[this.tableBoneMarrowResults.LymphocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonocytesNull() {
                return this.IsNull(this.tableBoneMarrowResults.MonocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonocytesNull() {
                this[this.tableBoneMarrowResults.MonocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEosinophilsNull() {
                return this.IsNull(this.tableBoneMarrowResults.EosinophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEosinophilsNull() {
                this[this.tableBoneMarrowResults.EosinophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBasophilsNull() {
                return this.IsNull(this.tableBoneMarrowResults.BasophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBasophilsNull() {
                this[this.tableBoneMarrowResults.BasophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormoblastsNull() {
                return this.IsNull(this.tableBoneMarrowResults.NormoblastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNormoblastsNull() {
                this[this.tableBoneMarrowResults.NormoblastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlasmaCellsNull() {
                return this.IsNull(this.tableBoneMarrowResults.PlasmaCellsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlasmaCellsNull() {
                this[this.tableBoneMarrowResults.PlasmaCellsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneHardnessNull() {
                return this.IsNull(this.tableBoneMarrowResults.BoneHardnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneHardnessNull() {
                this[this.tableBoneMarrowResults.BoneHardnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneSizeNull() {
                return this.IsNull(this.tableBoneMarrowResults.BoneSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneSizeNull() {
                this[this.tableBoneMarrowResults.BoneSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBconclusionNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMBconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBconclusionNull() {
                this[this.tableBoneMarrowResults.BMBconclusionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAconclusionNull() {
                return this.IsNull(this.tableBoneMarrowResults.BMAconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAconclusionNull() {
                this[this.tableBoneMarrowResults.BMAconclusionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhenotypeImmuPhenNull() {
                return this.IsNull(this.tableBoneMarrowResults.PhenotypeImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhenotypeImmuPhenNull() {
                this[this.tableBoneMarrowResults.PhenotypeImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentImmuPhenNull() {
                return this.IsNull(this.tableBoneMarrowResults.CommentImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentImmuPhenNull() {
                this[this.tableBoneMarrowResults.CommentImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConclusionImmuPhenoNull() {
                return this.IsNull(this.tableBoneMarrowResults.ConclusionImmuPhenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConclusionImmuPhenoNull() {
                this[this.tableBoneMarrowResults.ConclusionImmuPhenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoTestNameNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoTestNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoTestNameNull() {
                this[this.tableBoneMarrowResults.CytoTestNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoSpecimenNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoSpecimenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoSpecimenNull() {
                this[this.tableBoneMarrowResults.CytoSpecimenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount45Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoChromosomeCount45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount45Null() {
                this[this.tableBoneMarrowResults.CytoChromosomeCount45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount46Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoChromosomeCount46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount46Null() {
                this[this.tableBoneMarrowResults.CytoChromosomeCount46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount47Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoChromosomeCount47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount47Null() {
                this[this.tableBoneMarrowResults.CytoChromosomeCount47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCountTotalNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoChromosomeCountTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCountTotalNull() {
                this[this.tableBoneMarrowResults.CytoChromosomeCountTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted45Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsCounted45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted45Null() {
                this[this.tableBoneMarrowResults.CytoCellsCounted45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted46Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsCounted46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted46Null() {
                this[this.tableBoneMarrowResults.CytoCellsCounted46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted47Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsCounted47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted47Null() {
                this[this.tableBoneMarrowResults.CytoCellsCounted47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted4TotalNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsCounted4TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted4TotalNull() {
                this[this.tableBoneMarrowResults.CytoCellsCounted4TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed45Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsPhotographed45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed45Null() {
                this[this.tableBoneMarrowResults.CytoCellsPhotographed45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed46Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsPhotographed46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed46Null() {
                this[this.tableBoneMarrowResults.CytoCellsPhotographed46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed47Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsPhotographed47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed47Null() {
                this[this.tableBoneMarrowResults.CytoCellsPhotographed47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographedTotalNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsPhotographedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographedTotalNull() {
                this[this.tableBoneMarrowResults.CytoCellsPhotographedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped45Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsKayrotyped45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped45Null() {
                this[this.tableBoneMarrowResults.CytoCellsKayrotyped45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped46Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsKayrotyped46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped46Null() {
                this[this.tableBoneMarrowResults.CytoCellsKayrotyped46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped47Null() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsKayrotyped47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped47Null() {
                this[this.tableBoneMarrowResults.CytoCellsKayrotyped47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotypedTotalNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoCellsKayrotypedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotypedTotalNull() {
                this[this.tableBoneMarrowResults.CytoCellsKayrotypedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoKaryotypeNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoKaryotypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoKaryotypeNull() {
                this[this.tableBoneMarrowResults.CytoKaryotypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoInterpretationNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoInterpretationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoInterpretationNull() {
                this[this.tableBoneMarrowResults.CytoInterpretationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoRecommendationNull() {
                return this.IsNull(this.tableBoneMarrowResults.CytoRecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoRecommendationNull() {
                this[this.tableBoneMarrowResults.CytoRecommendationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CulturesResultRow : global::System.Data.DataRow {
            
            private CulturesResultDataTable tableCulturesResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CulturesResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCulturesResult = ((CulturesResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    try {
                        return ((int)(this[this.tableCulturesResult.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CultureUID {
                get {
                    try {
                        return ((int)(this[this.tableCulturesResult.CultureUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CultureUID\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.CultureUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CulturesResultsUID {
                get {
                    return ((int)(this[this.tableCulturesResult.CulturesResultsUIDColumn]));
                }
                set {
                    this[this.tableCulturesResult.CulturesResultsUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectFilm {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.DirectFilmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectFilm\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.DirectFilmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PUS {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.PUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUS\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.PUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RBCs {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.RBCsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RBCs\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.RBCsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrganismUID {
                get {
                    try {
                        return ((int)(this[this.tableCulturesResult.OrganismUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganismUID\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.OrganismUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Epithelial {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.EpithelialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Epithelial\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.EpithelialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NotesOrComment {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.NotesOrCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotesOrComment\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.NotesOrCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherInfo {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.OtherInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherInfo\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.OtherInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CultureCondition {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.CultureConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CultureCondition\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.CultureConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CultureNameForResult {
                get {
                    try {
                        return ((string)(this[this.tableCulturesResult.CultureNameForResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CultureNameForResult\' in table \'CulturesResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesResult.CultureNameForResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow CulturesSourceRow {
                get {
                    return ((CulturesSourceRow)(this.GetParentRow(this.Table.ParentRelations["FK_CulturesResult_CulturesSource"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CulturesResult_CulturesSource"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow OrganismSourceRow {
                get {
                    return ((OrganismSourceRow)(this.GetParentRow(this.Table.ParentRelations["FK_CulturesResult_OrganismSource"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CulturesResult_OrganismSource"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow PatientDetailsRow {
                get {
                    return ((PatientDetailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CulturesResult_PatientDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CulturesResult_PatientDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tableCulturesResult.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tableCulturesResult.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCultureUIDNull() {
                return this.IsNull(this.tableCulturesResult.CultureUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCultureUIDNull() {
                this[this.tableCulturesResult.CultureUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectFilmNull() {
                return this.IsNull(this.tableCulturesResult.DirectFilmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectFilmNull() {
                this[this.tableCulturesResult.DirectFilmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPUSNull() {
                return this.IsNull(this.tableCulturesResult.PUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPUSNull() {
                this[this.tableCulturesResult.PUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRBCsNull() {
                return this.IsNull(this.tableCulturesResult.RBCsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRBCsNull() {
                this[this.tableCulturesResult.RBCsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrganismUIDNull() {
                return this.IsNull(this.tableCulturesResult.OrganismUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrganismUIDNull() {
                this[this.tableCulturesResult.OrganismUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEpithelialNull() {
                return this.IsNull(this.tableCulturesResult.EpithelialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEpithelialNull() {
                this[this.tableCulturesResult.EpithelialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesOrCommentNull() {
                return this.IsNull(this.tableCulturesResult.NotesOrCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesOrCommentNull() {
                this[this.tableCulturesResult.NotesOrCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherInfoNull() {
                return this.IsNull(this.tableCulturesResult.OtherInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherInfoNull() {
                this[this.tableCulturesResult.OtherInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCultureConditionNull() {
                return this.IsNull(this.tableCulturesResult.CultureConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCultureConditionNull() {
                this[this.tableCulturesResult.CultureConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCultureNameForResultNull() {
                return this.IsNull(this.tableCulturesResult.CultureNameForResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCultureNameForResultNull() {
                this[this.tableCulturesResult.CultureNameForResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow[] GetAntibioticResultRows() {
                if ((this.Table.ChildRelations["FK_AntibioticResult_CulturesResult"] == null)) {
                    return new AntibioticResultRow[0];
                }
                else {
                    return ((AntibioticResultRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AntibioticResult_CulturesResult"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CulturesSourceRow : global::System.Data.DataRow {
            
            private CulturesSourceDataTable tableCulturesSource;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CulturesSourceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCulturesSource = ((CulturesSourceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CultureUID {
                get {
                    return ((int)(this[this.tableCulturesSource.CultureUIDColumn]));
                }
                set {
                    this[this.tableCulturesSource.CultureUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CultureName {
                get {
                    try {
                        return ((string)(this[this.tableCulturesSource.CultureNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CultureName\' in table \'CulturesSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCulturesSource.CultureNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCultureNameNull() {
                return this.IsNull(this.tableCulturesSource.CultureNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCultureNameNull() {
                this[this.tableCulturesSource.CultureNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow[] GetCulturesResultRows() {
                if ((this.Table.ChildRelations["FK_CulturesResult_CulturesSource"] == null)) {
                    return new CulturesResultRow[0];
                }
                else {
                    return ((CulturesResultRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CulturesResult_CulturesSource"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ImagesRow : global::System.Data.DataRow {
            
            private ImagesDataTable tableImages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ImagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableImages = ((ImagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableImages.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img1 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img1\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img2 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img2\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img3 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img3\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img4 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img4\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img5 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img5\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img6 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img6\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img7 {
                get {
                    try {
                        return ((byte[])(this[this.tableImages.Img7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img7\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.Img7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName1 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName1\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName2 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName2\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName3 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName3\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName4 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName4\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName5 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName5\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName6 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName6\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName7 {
                get {
                    try {
                        return ((string)(this[this.tableImages.ImgName7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName7\' in table \'Images\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImages.ImgName7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uni {
                get {
                    return ((int)(this[this.tableImages.UniColumn]));
                }
                set {
                    this[this.tableImages.UniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow PatientDetailsRow {
                get {
                    return ((PatientDetailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Images_PatientDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Images_PatientDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableImages.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableImages.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg1Null() {
                return this.IsNull(this.tableImages.Img1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg1Null() {
                this[this.tableImages.Img1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg2Null() {
                return this.IsNull(this.tableImages.Img2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg2Null() {
                this[this.tableImages.Img2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg3Null() {
                return this.IsNull(this.tableImages.Img3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg3Null() {
                this[this.tableImages.Img3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg4Null() {
                return this.IsNull(this.tableImages.Img4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg4Null() {
                this[this.tableImages.Img4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg5Null() {
                return this.IsNull(this.tableImages.Img5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg5Null() {
                this[this.tableImages.Img5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg6Null() {
                return this.IsNull(this.tableImages.Img6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg6Null() {
                this[this.tableImages.Img6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg7Null() {
                return this.IsNull(this.tableImages.Img7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg7Null() {
                this[this.tableImages.Img7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName1Null() {
                return this.IsNull(this.tableImages.ImgName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName1Null() {
                this[this.tableImages.ImgName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName2Null() {
                return this.IsNull(this.tableImages.ImgName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName2Null() {
                this[this.tableImages.ImgName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName3Null() {
                return this.IsNull(this.tableImages.ImgName3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName3Null() {
                this[this.tableImages.ImgName3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName4Null() {
                return this.IsNull(this.tableImages.ImgName4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName4Null() {
                this[this.tableImages.ImgName4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName5Null() {
                return this.IsNull(this.tableImages.ImgName5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName5Null() {
                this[this.tableImages.ImgName5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName6Null() {
                return this.IsNull(this.tableImages.ImgName6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName6Null() {
                this[this.tableImages.ImgName6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName7Null() {
                return this.IsNull(this.tableImages.ImgName7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName7Null() {
                this[this.tableImages.ImgName7Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ImmunophenotypingRow : global::System.Data.DataRow {
            
            private ImmunophenotypingDataTable tableImmunophenotyping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ImmunophenotypingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableImmunophenotyping = ((ImmunophenotypingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    try {
                        return ((int)(this[this.tableImmunophenotyping.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImmunophenotyping.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarkerName {
                get {
                    try {
                        return ((string)(this[this.tableImmunophenotyping.MarkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkerName\' in table \'Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImmunophenotyping.MarkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Percentage {
                get {
                    try {
                        return ((string)(this[this.tableImmunophenotyping.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImmunophenotyping.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TabIDImmun {
                get {
                    return ((int)(this[this.tableImmunophenotyping.TabIDImmunColumn]));
                }
                set {
                    this[this.tableImmunophenotyping.TabIDImmunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableImmunophenotyping.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableImmunophenotyping.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow PatientDetailsRow {
                get {
                    return ((PatientDetailsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Immunophenotyping_PatientDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Immunophenotyping_PatientDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tableImmunophenotyping.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tableImmunophenotyping.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkerNameNull() {
                return this.IsNull(this.tableImmunophenotyping.MarkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkerNameNull() {
                this[this.tableImmunophenotyping.MarkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableImmunophenotyping.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentageNull() {
                this[this.tableImmunophenotyping.PercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableImmunophenotyping.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableImmunophenotyping.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OrganismSourceRow : global::System.Data.DataRow {
            
            private OrganismSourceDataTable tableOrganismSource;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrganismSourceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrganismSource = ((OrganismSourceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrganismUID {
                get {
                    return ((int)(this[this.tableOrganismSource.OrganismUIDColumn]));
                }
                set {
                    this[this.tableOrganismSource.OrganismUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrganismName {
                get {
                    try {
                        return ((string)(this[this.tableOrganismSource.OrganismNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganismName\' in table \'OrganismSource\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganismSource.OrganismNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrganismNameNull() {
                return this.IsNull(this.tableOrganismSource.OrganismNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrganismNameNull() {
                this[this.tableOrganismSource.OrganismNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow[] GetCulturesResultRows() {
                if ((this.Table.ChildRelations["FK_CulturesResult_OrganismSource"] == null)) {
                    return new CulturesResultRow[0];
                }
                else {
                    return ((CulturesResultRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CulturesResult_OrganismSource"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PatientDetailsRow : global::System.Data.DataRow {
            
            private PatientDetailsDataTable tablePatientDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PatientDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePatientDetails = ((PatientDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tablePatientDetails.PatientIDColumn]));
                }
                set {
                    this[this.tablePatientDetails.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tablePatientDetails.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adress {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.AdressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adress\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.AdressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientDetails.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePatientDetails.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Smoker {
                get {
                    try {
                        return ((bool)(this[this.tablePatientDetails.SmokerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Smoker\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.SmokerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Pregnant {
                get {
                    try {
                        return ((bool)(this[this.tablePatientDetails.PregnantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnant\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.PregnantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Fasting {
                get {
                    try {
                        return ((bool)(this[this.tablePatientDetails.FastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fasting\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.FastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FastingHrs {
                get {
                    try {
                        return ((float)(this[this.tablePatientDetails.FastingHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FastingHrs\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.FastingHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GlandsMed {
                get {
                    try {
                        return ((bool)(this[this.tablePatientDetails.GlandsMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMed\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.GlandsMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlandsMedName {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.GlandsMedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMedName\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.GlandsMedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Diabetic {
                get {
                    try {
                        return ((bool)(this[this.tablePatientDetails.DiabeticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diabetic\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.DiabeticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiabetusMed {
                get {
                    try {
                        return ((string)(this[this.tablePatientDetails.DiabetusMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiabetusMed\' in table \'PatientDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePatientDetails.DiabetusMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tablePatientDetails.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tablePatientDetails.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tablePatientDetails.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tablePatientDetails.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tablePatientDetails.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tablePatientDetails.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tablePatientDetails.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tablePatientDetails.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tablePatientDetails.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tablePatientDetails.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tablePatientDetails.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetemailNull() {
                this[this.tablePatientDetails.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdressNull() {
                return this.IsNull(this.tablePatientDetails.AdressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdressNull() {
                this[this.tablePatientDetails.AdressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tablePatientDetails.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tablePatientDetails.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tablePatientDetails.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tablePatientDetails.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSmokerNull() {
                return this.IsNull(this.tablePatientDetails.SmokerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSmokerNull() {
                this[this.tablePatientDetails.SmokerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPregnantNull() {
                return this.IsNull(this.tablePatientDetails.PregnantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPregnantNull() {
                this[this.tablePatientDetails.PregnantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingNull() {
                return this.IsNull(this.tablePatientDetails.FastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingNull() {
                this[this.tablePatientDetails.FastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingHrsNull() {
                return this.IsNull(this.tablePatientDetails.FastingHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingHrsNull() {
                this[this.tablePatientDetails.FastingHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNull() {
                return this.IsNull(this.tablePatientDetails.GlandsMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNull() {
                this[this.tablePatientDetails.GlandsMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNameNull() {
                return this.IsNull(this.tablePatientDetails.GlandsMedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNameNull() {
                this[this.tablePatientDetails.GlandsMedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabeticNull() {
                return this.IsNull(this.tablePatientDetails.DiabeticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabeticNull() {
                this[this.tablePatientDetails.DiabeticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabetusMedNull() {
                return this.IsNull(this.tablePatientDetails.DiabetusMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabetusMedNull() {
                this[this.tablePatientDetails.DiabetusMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow[] GetBoneMarrowResultsRows() {
                if ((this.Table.ChildRelations["FK_BoneMarrowResults_PatientDetails"] == null)) {
                    return new BoneMarrowResultsRow[0];
                }
                else {
                    return ((BoneMarrowResultsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BoneMarrowResults_PatientDetails"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow[] GetCulturesResultRows() {
                if ((this.Table.ChildRelations["FK_CulturesResult_PatientDetails"] == null)) {
                    return new CulturesResultRow[0];
                }
                else {
                    return ((CulturesResultRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CulturesResult_PatientDetails"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow[] GetImagesRows() {
                if ((this.Table.ChildRelations["FK_Images_PatientDetails"] == null)) {
                    return new ImagesRow[0];
                }
                else {
                    return ((ImagesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Images_PatientDetails"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow[] GetImmunophenotypingRows() {
                if ((this.Table.ChildRelations["FK_Immunophenotyping_PatientDetails"] == null)) {
                    return new ImmunophenotypingRow[0];
                }
                else {
                    return ((ImmunophenotypingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Immunophenotyping_PatientDetails"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Select_ImmunophenotypingRow : global::System.Data.DataRow {
            
            private Select_ImmunophenotypingDataTable tableSelect_Immunophenotyping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Select_ImmunophenotypingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelect_Immunophenotyping = ((Select_ImmunophenotypingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableSelect_Immunophenotyping.PatientIDColumn]));
                }
                set {
                    this[this.tableSelect_Immunophenotyping.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableSelect_Immunophenotyping.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelect_Immunophenotyping.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelect_Immunophenotyping.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhenotypeImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.PhenotypeImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhenotypeImmuPhen\' in table \'Select_Immunophenotyping\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.PhenotypeImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CommentImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.CommentImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentImmuPhen\' in table \'Select_Immunophenotyping\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.CommentImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConclusionImmuPheno {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.ConclusionImmuPhenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConclusionImmuPheno\' in table \'Select_Immunophenotyping\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.ConclusionImmuPhenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarkerName {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.MarkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkerName\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.MarkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Percentage {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableSelect_Immunophenotyping.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'Select_Immunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelect_Immunophenotyping.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableSelect_Immunophenotyping.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableSelect_Immunophenotyping.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableSelect_Immunophenotyping.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableSelect_Immunophenotyping.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableSelect_Immunophenotyping.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableSelect_Immunophenotyping.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhenotypeImmuPhenNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.PhenotypeImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhenotypeImmuPhenNull() {
                this[this.tableSelect_Immunophenotyping.PhenotypeImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentImmuPhenNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.CommentImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentImmuPhenNull() {
                this[this.tableSelect_Immunophenotyping.CommentImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConclusionImmuPhenoNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.ConclusionImmuPhenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConclusionImmuPhenoNull() {
                this[this.tableSelect_Immunophenotyping.ConclusionImmuPhenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkerNameNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.MarkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkerNameNull() {
                this[this.tableSelect_Immunophenotyping.MarkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentageNull() {
                this[this.tableSelect_Immunophenotyping.PercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableSelect_Immunophenotyping.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableSelect_Immunophenotyping.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectBMAsp_DATARow : global::System.Data.DataRow {
            
            private SelectBMAsp_DATADataTable tableSelectBMAsp_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBMAsp_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectBMAsp_DATA = ((SelectBMAsp_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableSelectBMAsp_DATA.PatientIDColumn]));
                }
                set {
                    this[this.tableSelectBMAsp_DATA.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBMAsp_DATA.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBMAsp_DATA.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSelectBMAsp_DATA.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBsite {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMBsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBsite\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMBsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspSite {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMAspSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspSite\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMAspSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMB_HistoExamin {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMB_HistoExaminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMB_HistoExamin\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMB_HistoExaminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspComment {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMAspCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspComment\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMAspCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Blasts {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.BlastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Blasts\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BlastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Promyelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.PromyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Promyelocytes\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.PromyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Myelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.MyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myelocytes\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.MyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Juvenile {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.JuvenileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Juvenile\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.JuvenileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Staff {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.StaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Staff\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.StaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Segmented {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.SegmentedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Segmented\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.SegmentedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Lymphocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.LymphocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lymphocytes\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.LymphocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Monocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.MonocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Monocytes\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.MonocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Eosinophils {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.EosinophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eosinophils\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.EosinophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Basophils {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.BasophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Basophils\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BasophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Normoblasts {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.NormoblastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normoblasts\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.NormoblastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PlasmaCells {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.PlasmaCellsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlasmaCells\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.PlasmaCellsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoneHardness {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BoneHardnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneHardness\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BoneHardnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BoneSize {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMAsp_DATA.BoneSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneSize\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BoneSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBconclusion {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMBconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBconclusion\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMBconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAconclusion {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMAsp_DATA.BMAconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAconclusion\' in table \'SelectBMAsp_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMAsp_DATA.BMAconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableSelectBMAsp_DATA.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableSelectBMAsp_DATA.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableSelectBMAsp_DATA.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableSelectBMAsp_DATA.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableSelectBMAsp_DATA.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableSelectBMAsp_DATA.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableSelectBMAsp_DATA.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableSelectBMAsp_DATA.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBsiteNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMBsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBsiteNull() {
                this[this.tableSelectBMAsp_DATA.BMBsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspSiteNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMAspSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspSiteNull() {
                this[this.tableSelectBMAsp_DATA.BMAspSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMB_HistoExaminNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMB_HistoExaminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMB_HistoExaminNull() {
                this[this.tableSelectBMAsp_DATA.BMB_HistoExaminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspCommentNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMAspCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspCommentNull() {
                this[this.tableSelectBMAsp_DATA.BMAspCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlastsNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BlastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlastsNull() {
                this[this.tableSelectBMAsp_DATA.BlastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPromyelocytesNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.PromyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPromyelocytesNull() {
                this[this.tableSelectBMAsp_DATA.PromyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMyelocytesNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.MyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMyelocytesNull() {
                this[this.tableSelectBMAsp_DATA.MyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJuvenileNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.JuvenileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJuvenileNull() {
                this[this.tableSelectBMAsp_DATA.JuvenileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.StaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffNull() {
                this[this.tableSelectBMAsp_DATA.StaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSegmentedNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.SegmentedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSegmentedNull() {
                this[this.tableSelectBMAsp_DATA.SegmentedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLymphocytesNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.LymphocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLymphocytesNull() {
                this[this.tableSelectBMAsp_DATA.LymphocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonocytesNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.MonocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonocytesNull() {
                this[this.tableSelectBMAsp_DATA.MonocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEosinophilsNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.EosinophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEosinophilsNull() {
                this[this.tableSelectBMAsp_DATA.EosinophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBasophilsNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BasophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBasophilsNull() {
                this[this.tableSelectBMAsp_DATA.BasophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormoblastsNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.NormoblastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNormoblastsNull() {
                this[this.tableSelectBMAsp_DATA.NormoblastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlasmaCellsNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.PlasmaCellsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlasmaCellsNull() {
                this[this.tableSelectBMAsp_DATA.PlasmaCellsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneHardnessNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BoneHardnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneHardnessNull() {
                this[this.tableSelectBMAsp_DATA.BoneHardnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneSizeNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BoneSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneSizeNull() {
                this[this.tableSelectBMAsp_DATA.BoneSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBconclusionNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMBconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBconclusionNull() {
                this[this.tableSelectBMAsp_DATA.BMBconclusionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAconclusionNull() {
                return this.IsNull(this.tableSelectBMAsp_DATA.BMAconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAconclusionNull() {
                this[this.tableSelectBMAsp_DATA.BMAconclusionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectBMB_DATARow : global::System.Data.DataRow {
            
            private SelectBMB_DATADataTable tableSelectBMB_DATA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBMB_DATARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectBMB_DATA = ((SelectBMB_DATADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableSelectBMB_DATA.PatientIDColumn]));
                }
                set {
                    this[this.tableSelectBMB_DATA.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMB_DATA.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adress {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.AdressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adress\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.AdressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBMB_DATA.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBMB_DATA.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Smoker {
                get {
                    try {
                        return ((bool)(this[this.tableSelectBMB_DATA.SmokerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Smoker\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.SmokerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Pregnant {
                get {
                    try {
                        return ((bool)(this[this.tableSelectBMB_DATA.PregnantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnant\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.PregnantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Fasting {
                get {
                    try {
                        return ((bool)(this[this.tableSelectBMB_DATA.FastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fasting\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.FastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FastingHrs {
                get {
                    try {
                        return ((float)(this[this.tableSelectBMB_DATA.FastingHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FastingHrs\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.FastingHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GlandsMed {
                get {
                    try {
                        return ((bool)(this[this.tableSelectBMB_DATA.GlandsMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMed\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.GlandsMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlandsMedName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.GlandsMedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMedName\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.GlandsMedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Diabetic {
                get {
                    try {
                        return ((bool)(this[this.tableSelectBMB_DATA.DiabeticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diabetic\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.DiabeticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiabetusMed {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.DiabetusMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiabetusMed\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.DiabetusMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBsite {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.BMBsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBsite\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.BMBsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMB_HistoExamin {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.BMB_HistoExaminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMB_HistoExamin\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.BMB_HistoExaminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BoneSize {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectBMB_DATA.BoneSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneSize\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.BoneSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoneHardness {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.BoneHardnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneHardness\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.BoneHardnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBconclusion {
                get {
                    try {
                        return ((string)(this[this.tableSelectBMB_DATA.BMBconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBconclusion\' in table \'SelectBMB_DATA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBMB_DATA.BMBconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableSelectBMB_DATA.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableSelectBMB_DATA.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableSelectBMB_DATA.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableSelectBMB_DATA.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableSelectBMB_DATA.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableSelectBMB_DATA.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableSelectBMB_DATA.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableSelectBMB_DATA.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableSelectBMB_DATA.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableSelectBMB_DATA.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tableSelectBMB_DATA.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetemailNull() {
                this[this.tableSelectBMB_DATA.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdressNull() {
                return this.IsNull(this.tableSelectBMB_DATA.AdressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdressNull() {
                this[this.tableSelectBMB_DATA.AdressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableSelectBMB_DATA.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableSelectBMB_DATA.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableSelectBMB_DATA.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableSelectBMB_DATA.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSmokerNull() {
                return this.IsNull(this.tableSelectBMB_DATA.SmokerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSmokerNull() {
                this[this.tableSelectBMB_DATA.SmokerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPregnantNull() {
                return this.IsNull(this.tableSelectBMB_DATA.PregnantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPregnantNull() {
                this[this.tableSelectBMB_DATA.PregnantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingNull() {
                return this.IsNull(this.tableSelectBMB_DATA.FastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingNull() {
                this[this.tableSelectBMB_DATA.FastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingHrsNull() {
                return this.IsNull(this.tableSelectBMB_DATA.FastingHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingHrsNull() {
                this[this.tableSelectBMB_DATA.FastingHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNull() {
                return this.IsNull(this.tableSelectBMB_DATA.GlandsMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNull() {
                this[this.tableSelectBMB_DATA.GlandsMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNameNull() {
                return this.IsNull(this.tableSelectBMB_DATA.GlandsMedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNameNull() {
                this[this.tableSelectBMB_DATA.GlandsMedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabeticNull() {
                return this.IsNull(this.tableSelectBMB_DATA.DiabeticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabeticNull() {
                this[this.tableSelectBMB_DATA.DiabeticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabetusMedNull() {
                return this.IsNull(this.tableSelectBMB_DATA.DiabetusMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabetusMedNull() {
                this[this.tableSelectBMB_DATA.DiabetusMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBsiteNull() {
                return this.IsNull(this.tableSelectBMB_DATA.BMBsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBsiteNull() {
                this[this.tableSelectBMB_DATA.BMBsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMB_HistoExaminNull() {
                return this.IsNull(this.tableSelectBMB_DATA.BMB_HistoExaminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMB_HistoExaminNull() {
                this[this.tableSelectBMB_DATA.BMB_HistoExaminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneSizeNull() {
                return this.IsNull(this.tableSelectBMB_DATA.BoneSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneSizeNull() {
                this[this.tableSelectBMB_DATA.BoneSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneHardnessNull() {
                return this.IsNull(this.tableSelectBMB_DATA.BoneHardnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneHardnessNull() {
                this[this.tableSelectBMB_DATA.BoneHardnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBconclusionNull() {
                return this.IsNull(this.tableSelectBMB_DATA.BMBconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBconclusionNull() {
                this[this.tableSelectBMB_DATA.BMBconclusionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectBoneMarrowImagesRow : global::System.Data.DataRow {
            
            private SelectBoneMarrowImagesDataTable tableSelectBoneMarrowImages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectBoneMarrowImagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectBoneMarrowImages = ((SelectBoneMarrowImagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableSelectBoneMarrowImages.PatientIDColumn]));
                }
                set {
                    this[this.tableSelectBoneMarrowImages.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSelectBoneMarrowImages.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img1 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img1\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img2 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img2\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img3 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img3\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img4 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img4\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img5 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img5\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img6 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img6\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img7 {
                get {
                    try {
                        return ((byte[])(this[this.tableSelectBoneMarrowImages.Img7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img7\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.Img7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName1 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName1\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName2 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName2\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName3 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName3\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName4 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName4\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName5 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName5\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName6 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName6\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName7 {
                get {
                    try {
                        return ((string)(this[this.tableSelectBoneMarrowImages.ImgName7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName7\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ImgName7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBoneMarrowImages.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectBoneMarrowImages.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'SelectBoneMarrowImages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectBoneMarrowImages.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableSelectBoneMarrowImages.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableSelectBoneMarrowImages.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableSelectBoneMarrowImages.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableSelectBoneMarrowImages.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableSelectBoneMarrowImages.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableSelectBoneMarrowImages.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg1Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg1Null() {
                this[this.tableSelectBoneMarrowImages.Img1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg2Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg2Null() {
                this[this.tableSelectBoneMarrowImages.Img2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg3Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg3Null() {
                this[this.tableSelectBoneMarrowImages.Img3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg4Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg4Null() {
                this[this.tableSelectBoneMarrowImages.Img4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg5Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg5Null() {
                this[this.tableSelectBoneMarrowImages.Img5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg6Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg6Null() {
                this[this.tableSelectBoneMarrowImages.Img6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg7Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.Img7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg7Null() {
                this[this.tableSelectBoneMarrowImages.Img7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName1Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName1Null() {
                this[this.tableSelectBoneMarrowImages.ImgName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName2Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName2Null() {
                this[this.tableSelectBoneMarrowImages.ImgName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName3Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName3Null() {
                this[this.tableSelectBoneMarrowImages.ImgName3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName4Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName4Null() {
                this[this.tableSelectBoneMarrowImages.ImgName4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName5Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName5Null() {
                this[this.tableSelectBoneMarrowImages.ImgName5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName6Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName6Null() {
                this[this.tableSelectBoneMarrowImages.ImgName6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName7Null() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ImgName7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName7Null() {
                this[this.tableSelectBoneMarrowImages.ImgName7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableSelectBoneMarrowImages.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableSelectBoneMarrowImages.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableSelectBoneMarrowImages.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableSelectBoneMarrowImages.ResultDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectCytogeneticsDataRow : global::System.Data.DataRow {
            
            private SelectCytogeneticsDataDataTable tableSelectCytogeneticsData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectCytogeneticsDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectCytogeneticsData = ((SelectCytogeneticsDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableSelectCytogeneticsData.PatientIDColumn]));
                }
                set {
                    this[this.tableSelectCytogeneticsData.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectCytogeneticsData.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectCytogeneticsData.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoTestName {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.CytoTestNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoTestName\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoTestNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoSpecimen {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.CytoSpecimenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoSpecimen\' in table \'SelectCytogeneticsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoSpecimenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount45 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoChromosomeCount45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount45\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoChromosomeCount45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount46 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoChromosomeCount46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount46\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoChromosomeCount46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount47 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoChromosomeCount47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount47\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoChromosomeCount47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCountTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoChromosomeCountTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCountTotal\' in table \'SelectCytogeneticsData\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoChromosomeCountTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted45 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsCounted45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted45\' in table \'SelectCytogeneticsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsCounted45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted46 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsCounted46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted46\' in table \'SelectCytogeneticsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsCounted46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted47 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsCounted47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted47\' in table \'SelectCytogeneticsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsCounted47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted4Total {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsCounted4TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted4Total\' in table \'SelectCytogeneticsData\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsCounted4TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed45 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsPhotographed45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed45\' in table \'SelectCytogeneticsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsPhotographed45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed46 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsPhotographed46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed46\' in table \'SelectCytogeneticsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsPhotographed46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed47 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsPhotographed47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed47\' in table \'SelectCytogeneticsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsPhotographed47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsPhotographedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographedTotal\' in table \'SelectCytogeneticsDat" +
                                "a\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsPhotographedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped45 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped45\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped46 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped46\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped47 {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped47\' in table \'SelectCytogeneticsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotypedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectCytogeneticsData.CytoCellsKayrotypedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotypedTotal\' in table \'SelectCytogeneticsData\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoCellsKayrotypedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoKaryotype {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.CytoKaryotypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoKaryotype\' in table \'SelectCytogeneticsData\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoKaryotypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoInterpretation {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.CytoInterpretationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoInterpretation\' in table \'SelectCytogeneticsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoInterpretationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoRecommendation {
                get {
                    try {
                        return ((string)(this[this.tableSelectCytogeneticsData.CytoRecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoRecommendation\' in table \'SelectCytogeneticsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectCytogeneticsData.CytoRecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableSelectCytogeneticsData.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableSelectCytogeneticsData.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableSelectCytogeneticsData.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableSelectCytogeneticsData.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableSelectCytogeneticsData.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableSelectCytogeneticsData.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableSelectCytogeneticsData.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoTestNameNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoTestNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoTestNameNull() {
                this[this.tableSelectCytogeneticsData.CytoTestNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoSpecimenNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoSpecimenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoSpecimenNull() {
                this[this.tableSelectCytogeneticsData.CytoSpecimenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount45Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoChromosomeCount45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount45Null() {
                this[this.tableSelectCytogeneticsData.CytoChromosomeCount45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount46Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoChromosomeCount46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount46Null() {
                this[this.tableSelectCytogeneticsData.CytoChromosomeCount46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount47Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoChromosomeCount47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount47Null() {
                this[this.tableSelectCytogeneticsData.CytoChromosomeCount47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCountTotalNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoChromosomeCountTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCountTotalNull() {
                this[this.tableSelectCytogeneticsData.CytoChromosomeCountTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted45Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsCounted45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted45Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsCounted45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted46Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsCounted46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted46Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsCounted46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted47Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsCounted47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted47Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsCounted47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted4TotalNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsCounted4TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted4TotalNull() {
                this[this.tableSelectCytogeneticsData.CytoCellsCounted4TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed45Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsPhotographed45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed45Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsPhotographed45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed46Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsPhotographed46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed46Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsPhotographed46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed47Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsPhotographed47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed47Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsPhotographed47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographedTotalNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsPhotographedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographedTotalNull() {
                this[this.tableSelectCytogeneticsData.CytoCellsPhotographedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped45Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsKayrotyped45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped45Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped46Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsKayrotyped46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped46Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped47Null() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsKayrotyped47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped47Null() {
                this[this.tableSelectCytogeneticsData.CytoCellsKayrotyped47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotypedTotalNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoCellsKayrotypedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotypedTotalNull() {
                this[this.tableSelectCytogeneticsData.CytoCellsKayrotypedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoKaryotypeNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoKaryotypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoKaryotypeNull() {
                this[this.tableSelectCytogeneticsData.CytoKaryotypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoInterpretationNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoInterpretationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoInterpretationNull() {
                this[this.tableSelectCytogeneticsData.CytoInterpretationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoRecommendationNull() {
                return this.IsNull(this.tableSelectCytogeneticsData.CytoRecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoRecommendationNull() {
                this[this.tableSelectCytogeneticsData.CytoRecommendationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProcSelectBMAsp_DataRow : global::System.Data.DataRow {
            
            private ProcSelectBMAsp_DataDataTable tableProcSelectBMAsp_Data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMAsp_DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProcSelectBMAsp_Data = ((ProcSelectBMAsp_DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableProcSelectBMAsp_Data.PatientIDColumn]));
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adress {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.AdressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adress\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.AdressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMAsp_Data.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMAsp_Data.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Smoker {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMAsp_Data.SmokerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Smoker\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.SmokerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Pregnant {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMAsp_Data.PregnantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnant\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.PregnantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Fasting {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMAsp_Data.FastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fasting\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.FastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FastingHrs {
                get {
                    try {
                        return ((float)(this[this.tableProcSelectBMAsp_Data.FastingHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FastingHrs\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.FastingHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GlandsMed {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMAsp_Data.GlandsMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMed\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.GlandsMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlandsMedName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.GlandsMedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMedName\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.GlandsMedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Diabetic {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMAsp_Data.DiabeticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diabetic\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.DiabeticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiabetusMed {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.DiabetusMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiabetusMed\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.DiabetusMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspSite {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.BMAspSiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspSite\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.BMAspSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAspComment {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.BMAspCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAspComment\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.BMAspCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Blasts {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.BlastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Blasts\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.BlastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Promyelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.PromyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Promyelocytes\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.PromyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Myelocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.MyelocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Myelocytes\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.MyelocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Juvenile {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.JuvenileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Juvenile\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.JuvenileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Staff {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.StaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Staff\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.StaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Segmented {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.SegmentedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Segmented\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.SegmentedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Lymphocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.LymphocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lymphocytes\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.LymphocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Monocytes {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.MonocytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Monocytes\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.MonocytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Eosinophils {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.EosinophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eosinophils\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.EosinophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Basophils {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.BasophilsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Basophils\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.BasophilsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Normoblasts {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.NormoblastsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normoblasts\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.NormoblastsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PlasmaCells {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMAsp_Data.PlasmaCellsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlasmaCells\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.PlasmaCellsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMAconclusion {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMAsp_Data.BMAconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMAconclusion\' in table \'ProcSelectBMAsp_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMAsp_Data.BMAconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableProcSelectBMAsp_Data.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableProcSelectBMAsp_Data.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableProcSelectBMAsp_Data.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableProcSelectBMAsp_Data.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableProcSelectBMAsp_Data.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetemailNull() {
                this[this.tableProcSelectBMAsp_Data.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdressNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.AdressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdressNull() {
                this[this.tableProcSelectBMAsp_Data.AdressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableProcSelectBMAsp_Data.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableProcSelectBMAsp_Data.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSmokerNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.SmokerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSmokerNull() {
                this[this.tableProcSelectBMAsp_Data.SmokerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPregnantNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.PregnantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPregnantNull() {
                this[this.tableProcSelectBMAsp_Data.PregnantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.FastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingNull() {
                this[this.tableProcSelectBMAsp_Data.FastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingHrsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.FastingHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingHrsNull() {
                this[this.tableProcSelectBMAsp_Data.FastingHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.GlandsMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNull() {
                this[this.tableProcSelectBMAsp_Data.GlandsMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNameNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.GlandsMedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNameNull() {
                this[this.tableProcSelectBMAsp_Data.GlandsMedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabeticNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.DiabeticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabeticNull() {
                this[this.tableProcSelectBMAsp_Data.DiabeticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabetusMedNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.DiabetusMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabetusMedNull() {
                this[this.tableProcSelectBMAsp_Data.DiabetusMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspSiteNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.BMAspSiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspSiteNull() {
                this[this.tableProcSelectBMAsp_Data.BMAspSiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAspCommentNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.BMAspCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAspCommentNull() {
                this[this.tableProcSelectBMAsp_Data.BMAspCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBlastsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.BlastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBlastsNull() {
                this[this.tableProcSelectBMAsp_Data.BlastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPromyelocytesNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.PromyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPromyelocytesNull() {
                this[this.tableProcSelectBMAsp_Data.PromyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMyelocytesNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.MyelocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMyelocytesNull() {
                this[this.tableProcSelectBMAsp_Data.MyelocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJuvenileNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.JuvenileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJuvenileNull() {
                this[this.tableProcSelectBMAsp_Data.JuvenileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.StaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffNull() {
                this[this.tableProcSelectBMAsp_Data.StaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSegmentedNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.SegmentedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSegmentedNull() {
                this[this.tableProcSelectBMAsp_Data.SegmentedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLymphocytesNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.LymphocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLymphocytesNull() {
                this[this.tableProcSelectBMAsp_Data.LymphocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonocytesNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.MonocytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonocytesNull() {
                this[this.tableProcSelectBMAsp_Data.MonocytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEosinophilsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.EosinophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEosinophilsNull() {
                this[this.tableProcSelectBMAsp_Data.EosinophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBasophilsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.BasophilsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBasophilsNull() {
                this[this.tableProcSelectBMAsp_Data.BasophilsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormoblastsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.NormoblastsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNormoblastsNull() {
                this[this.tableProcSelectBMAsp_Data.NormoblastsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlasmaCellsNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.PlasmaCellsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlasmaCellsNull() {
                this[this.tableProcSelectBMAsp_Data.PlasmaCellsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMAconclusionNull() {
                return this.IsNull(this.tableProcSelectBMAsp_Data.BMAconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMAconclusionNull() {
                this[this.tableProcSelectBMAsp_Data.BMAconclusionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProcSelectBMB_DataRow : global::System.Data.DataRow {
            
            private ProcSelectBMB_DataDataTable tableProcSelectBMB_Data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMB_DataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProcSelectBMB_Data = ((ProcSelectBMB_DataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableProcSelectBMB_Data.PatientIDColumn]));
                }
                set {
                    this[this.tableProcSelectBMB_Data.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMB_Data.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adress {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.AdressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adress\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.AdressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMB_Data.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMB_Data.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Smoker {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMB_Data.SmokerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Smoker\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.SmokerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Pregnant {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMB_Data.PregnantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pregnant\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.PregnantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Fasting {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMB_Data.FastingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fasting\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.FastingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FastingHrs {
                get {
                    try {
                        return ((float)(this[this.tableProcSelectBMB_Data.FastingHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FastingHrs\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.FastingHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GlandsMed {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMB_Data.GlandsMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMed\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.GlandsMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlandsMedName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.GlandsMedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlandsMedName\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.GlandsMedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Diabetic {
                get {
                    try {
                        return ((bool)(this[this.tableProcSelectBMB_Data.DiabeticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diabetic\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.DiabeticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiabetusMed {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.DiabetusMedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiabetusMed\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.DiabetusMedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBsite {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.BMBsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBsite\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.BMBsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMB_HistoExamin {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.BMB_HistoExaminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMB_HistoExamin\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.BMB_HistoExaminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BoneSize {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectBMB_Data.BoneSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneSize\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.BoneSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BoneHardness {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.BoneHardnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoneHardness\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.BoneHardnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BMBconclusion {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMB_Data.BMBconclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMBconclusion\' in table \'ProcSelectBMB_Data\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMB_Data.BMBconclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableProcSelectBMB_Data.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableProcSelectBMB_Data.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableProcSelectBMB_Data.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableProcSelectBMB_Data.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableProcSelectBMB_Data.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsemailNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetemailNull() {
                this[this.tableProcSelectBMB_Data.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdressNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.AdressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdressNull() {
                this[this.tableProcSelectBMB_Data.AdressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableProcSelectBMB_Data.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableProcSelectBMB_Data.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSmokerNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.SmokerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSmokerNull() {
                this[this.tableProcSelectBMB_Data.SmokerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPregnantNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.PregnantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPregnantNull() {
                this[this.tableProcSelectBMB_Data.PregnantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.FastingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingNull() {
                this[this.tableProcSelectBMB_Data.FastingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFastingHrsNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.FastingHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFastingHrsNull() {
                this[this.tableProcSelectBMB_Data.FastingHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.GlandsMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNull() {
                this[this.tableProcSelectBMB_Data.GlandsMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlandsMedNameNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.GlandsMedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlandsMedNameNull() {
                this[this.tableProcSelectBMB_Data.GlandsMedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabeticNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.DiabeticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabeticNull() {
                this[this.tableProcSelectBMB_Data.DiabeticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiabetusMedNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.DiabetusMedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiabetusMedNull() {
                this[this.tableProcSelectBMB_Data.DiabetusMedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBsiteNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.BMBsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBsiteNull() {
                this[this.tableProcSelectBMB_Data.BMBsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMB_HistoExaminNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.BMB_HistoExaminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMB_HistoExaminNull() {
                this[this.tableProcSelectBMB_Data.BMB_HistoExaminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneSizeNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.BoneSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneSizeNull() {
                this[this.tableProcSelectBMB_Data.BoneSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBoneHardnessNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.BoneHardnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBoneHardnessNull() {
                this[this.tableProcSelectBMB_Data.BoneHardnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBMBconclusionNull() {
                return this.IsNull(this.tableProcSelectBMB_Data.BMBconclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBMBconclusionNull() {
                this[this.tableProcSelectBMB_Data.BMBconclusionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProcSelectBMimagesRow : global::System.Data.DataRow {
            
            private ProcSelectBMimagesDataTable tableProcSelectBMimages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectBMimagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProcSelectBMimages = ((ProcSelectBMimagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableProcSelectBMimages.PatientIDColumn]));
                }
                set {
                    this[this.tableProcSelectBMimages.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableProcSelectBMimages.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img1 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img1\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img2 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img2\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img3 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img3\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img4 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img4\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img5 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img5\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img6 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img6\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Img7 {
                get {
                    try {
                        return ((byte[])(this[this.tableProcSelectBMimages.Img7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Img7\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.Img7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName1 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName1\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName2 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName2\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName3 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName3\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName4 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName4\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName5 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName5\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName6 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName6\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgName7 {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectBMimages.ImgName7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgName7\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ImgName7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMimages.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectBMimages.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'ProcSelectBMimages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectBMimages.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableProcSelectBMimages.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableProcSelectBMimages.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableProcSelectBMimages.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableProcSelectBMimages.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableProcSelectBMimages.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableProcSelectBMimages.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg1Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg1Null() {
                this[this.tableProcSelectBMimages.Img1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg2Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg2Null() {
                this[this.tableProcSelectBMimages.Img2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg3Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg3Null() {
                this[this.tableProcSelectBMimages.Img3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg4Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg4Null() {
                this[this.tableProcSelectBMimages.Img4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg5Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg5Null() {
                this[this.tableProcSelectBMimages.Img5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg6Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg6Null() {
                this[this.tableProcSelectBMimages.Img6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImg7Null() {
                return this.IsNull(this.tableProcSelectBMimages.Img7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImg7Null() {
                this[this.tableProcSelectBMimages.Img7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName1Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName1Null() {
                this[this.tableProcSelectBMimages.ImgName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName2Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName2Null() {
                this[this.tableProcSelectBMimages.ImgName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName3Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName3Null() {
                this[this.tableProcSelectBMimages.ImgName3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName4Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName4Null() {
                this[this.tableProcSelectBMimages.ImgName4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName5Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName5Null() {
                this[this.tableProcSelectBMimages.ImgName5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName6Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName6Null() {
                this[this.tableProcSelectBMimages.ImgName6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgName7Null() {
                return this.IsNull(this.tableProcSelectBMimages.ImgName7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgName7Null() {
                this[this.tableProcSelectBMimages.ImgName7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableProcSelectBMimages.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableProcSelectBMimages.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableProcSelectBMimages.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableProcSelectBMimages.ResultDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProcSelectCytogeneticsRow : global::System.Data.DataRow {
            
            private ProcSelectCytogeneticsDataTable tableProcSelectCytogenetics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectCytogeneticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProcSelectCytogenetics = ((ProcSelectCytogeneticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableProcSelectCytogenetics.PatientIDColumn]));
                }
                set {
                    this[this.tableProcSelectCytogenetics.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectCytogenetics.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectCytogenetics.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoTestName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.CytoTestNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoTestName\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoTestNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoSpecimen {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.CytoSpecimenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoSpecimen\' in table \'ProcSelectCytogenetics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoSpecimenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount45 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoChromosomeCount45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount45\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoChromosomeCount45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount46 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoChromosomeCount46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount46\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoChromosomeCount46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCount47 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoChromosomeCount47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCount47\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoChromosomeCount47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoChromosomeCountTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoChromosomeCountTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoChromosomeCountTotal\' in table \'ProcSelectCytogenetics\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoChromosomeCountTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted45 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsCounted45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted45\' in table \'ProcSelectCytogenetics\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsCounted45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted46 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsCounted46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted46\' in table \'ProcSelectCytogenetics\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsCounted46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted47 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsCounted47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted47\' in table \'ProcSelectCytogenetics\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsCounted47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsCounted4Total {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsCounted4TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsCounted4Total\' in table \'ProcSelectCytogenetics\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsCounted4TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed45 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsPhotographed45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed45\' in table \'ProcSelectCytogenetics\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsPhotographed45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed46 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsPhotographed46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed46\' in table \'ProcSelectCytogenetics\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsPhotographed46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographed47 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsPhotographed47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographed47\' in table \'ProcSelectCytogenetics\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsPhotographed47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsPhotographedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsPhotographedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsPhotographedTotal\' in table \'ProcSelectCytogenetic" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsPhotographedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped45 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped45\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped46 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped46\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotyped47 {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotyped47\' in table \'ProcSelectCytogenetics\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CytoCellsKayrotypedTotal {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectCytogenetics.CytoCellsKayrotypedTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoCellsKayrotypedTotal\' in table \'ProcSelectCytogenetics\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoCellsKayrotypedTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoKaryotype {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.CytoKaryotypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoKaryotype\' in table \'ProcSelectCytogenetics\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoKaryotypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoInterpretation {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.CytoInterpretationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoInterpretation\' in table \'ProcSelectCytogenetics\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoInterpretationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CytoRecommendation {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectCytogenetics.CytoRecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CytoRecommendation\' in table \'ProcSelectCytogenetics\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableProcSelectCytogenetics.CytoRecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableProcSelectCytogenetics.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableProcSelectCytogenetics.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableProcSelectCytogenetics.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableProcSelectCytogenetics.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tableProcSelectCytogenetics.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableProcSelectCytogenetics.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableProcSelectCytogenetics.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoTestNameNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoTestNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoTestNameNull() {
                this[this.tableProcSelectCytogenetics.CytoTestNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoSpecimenNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoSpecimenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoSpecimenNull() {
                this[this.tableProcSelectCytogenetics.CytoSpecimenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount45Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoChromosomeCount45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount45Null() {
                this[this.tableProcSelectCytogenetics.CytoChromosomeCount45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount46Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoChromosomeCount46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount46Null() {
                this[this.tableProcSelectCytogenetics.CytoChromosomeCount46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCount47Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoChromosomeCount47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCount47Null() {
                this[this.tableProcSelectCytogenetics.CytoChromosomeCount47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoChromosomeCountTotalNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoChromosomeCountTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoChromosomeCountTotalNull() {
                this[this.tableProcSelectCytogenetics.CytoChromosomeCountTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted45Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsCounted45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted45Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsCounted45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted46Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsCounted46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted46Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsCounted46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted47Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsCounted47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted47Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsCounted47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsCounted4TotalNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsCounted4TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsCounted4TotalNull() {
                this[this.tableProcSelectCytogenetics.CytoCellsCounted4TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed45Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsPhotographed45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed45Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsPhotographed45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed46Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsPhotographed46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed46Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsPhotographed46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographed47Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsPhotographed47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographed47Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsPhotographed47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsPhotographedTotalNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsPhotographedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsPhotographedTotalNull() {
                this[this.tableProcSelectCytogenetics.CytoCellsPhotographedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped45Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsKayrotyped45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped45Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped46Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsKayrotyped46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped46Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotyped47Null() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsKayrotyped47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotyped47Null() {
                this[this.tableProcSelectCytogenetics.CytoCellsKayrotyped47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoCellsKayrotypedTotalNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoCellsKayrotypedTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoCellsKayrotypedTotalNull() {
                this[this.tableProcSelectCytogenetics.CytoCellsKayrotypedTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoKaryotypeNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoKaryotypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoKaryotypeNull() {
                this[this.tableProcSelectCytogenetics.CytoKaryotypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoInterpretationNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoInterpretationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoInterpretationNull() {
                this[this.tableProcSelectCytogenetics.CytoInterpretationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCytoRecommendationNull() {
                return this.IsNull(this.tableProcSelectCytogenetics.CytoRecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCytoRecommendationNull() {
                this[this.tableProcSelectCytogenetics.CytoRecommendationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProcSelectImmunophenotypingRow : global::System.Data.DataRow {
            
            private ProcSelectImmunophenotypingDataTable tableProcSelectImmunophenotyping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProcSelectImmunophenotypingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProcSelectImmunophenotyping = ((ProcSelectImmunophenotypingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    return ((int)(this[this.tableProcSelectImmunophenotyping.PatientIDColumn]));
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.PNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PName\' in table \'ProcSelectImmunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.PNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.DrNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrName\' in table \'ProcSelectImmunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.DrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Age {
                get {
                    try {
                        return ((decimal)(this[this.tableProcSelectImmunophenotyping.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'ProcSelectImmunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgeType {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.AgeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeType\' in table \'ProcSelectImmunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.AgeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime VisitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectImmunophenotyping.VisitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitDate\' in table \'ProcSelectImmunophenotyping\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.VisitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ResultDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProcSelectImmunophenotyping.ResultDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultDate\' in table \'ProcSelectImmunophenotyping\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.ResultDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhenotypeImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.PhenotypeImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhenotypeImmuPhen\' in table \'ProcSelectImmunophenotyping\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.PhenotypeImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CommentImmuPhen {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.CommentImmuPhenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommentImmuPhen\' in table \'ProcSelectImmunophenotyping\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.CommentImmuPhenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConclusionImmuPheno {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.ConclusionImmuPhenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConclusionImmuPheno\' in table \'ProcSelectImmunophenotyping\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.ConclusionImmuPhenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarkerName {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.MarkerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkerName\' in table \'ProcSelectImmunophenotyping\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.MarkerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Percentage {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.PercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Percentage\' in table \'ProcSelectImmunophenotyping\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.PercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Result {
                get {
                    try {
                        return ((string)(this[this.tableProcSelectImmunophenotyping.ResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result\' in table \'ProcSelectImmunophenotyping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProcSelectImmunophenotyping.ResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPNameNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.PNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPNameNull() {
                this[this.tableProcSelectImmunophenotyping.PNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrNameNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.DrNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrNameNull() {
                this[this.tableProcSelectImmunophenotyping.DrNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tableProcSelectImmunophenotyping.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeTypeNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.AgeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeTypeNull() {
                this[this.tableProcSelectImmunophenotyping.AgeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitDateNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.VisitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitDateNull() {
                this[this.tableProcSelectImmunophenotyping.VisitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultDateNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.ResultDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultDateNull() {
                this[this.tableProcSelectImmunophenotyping.ResultDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhenotypeImmuPhenNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.PhenotypeImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhenotypeImmuPhenNull() {
                this[this.tableProcSelectImmunophenotyping.PhenotypeImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentImmuPhenNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.CommentImmuPhenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentImmuPhenNull() {
                this[this.tableProcSelectImmunophenotyping.CommentImmuPhenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConclusionImmuPhenoNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.ConclusionImmuPhenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConclusionImmuPhenoNull() {
                this[this.tableProcSelectImmunophenotyping.ConclusionImmuPhenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkerNameNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.MarkerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkerNameNull() {
                this[this.tableProcSelectImmunophenotyping.MarkerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentageNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.PercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentageNull() {
                this[this.tableProcSelectImmunophenotyping.PercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultNull() {
                return this.IsNull(this.tableProcSelectImmunophenotyping.ResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultNull() {
                this[this.tableProcSelectImmunophenotyping.ResultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AntibioticResultRowChangeEvent : global::System.EventArgs {
            
            private AntibioticResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRowChangeEvent(AntibioticResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AntibioticsSourceRowChangeEvent : global::System.EventArgs {
            
            private AntibioticsSourceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRowChangeEvent(AntibioticsSourceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AntibioticsSourceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BoneMarrowResultsRowChangeEvent : global::System.EventArgs {
            
            private BoneMarrowResultsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRowChangeEvent(BoneMarrowResultsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BoneMarrowResultsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CulturesResultRowChangeEvent : global::System.EventArgs {
            
            private CulturesResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRowChangeEvent(CulturesResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CulturesSourceRowChangeEvent : global::System.EventArgs {
            
            private CulturesSourceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRowChangeEvent(CulturesSourceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CulturesSourceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ImagesRowChangeEvent : global::System.EventArgs {
            
            private ImagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRowChangeEvent(ImagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ImmunophenotypingRowChangeEvent : global::System.EventArgs {
            
            private ImmunophenotypingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRowChangeEvent(ImmunophenotypingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ImmunophenotypingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OrganismSourceRowChangeEvent : global::System.EventArgs {
            
            private OrganismSourceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRowChangeEvent(OrganismSourceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrganismSourceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PatientDetailsRowChangeEvent : global::System.EventArgs {
            
            private PatientDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRowChangeEvent(PatientDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PatientDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Select_ImmunophenotypingRowChangeEvent : global::System.EventArgs {
            
            private Select_ImmunophenotypingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRowChangeEvent(Select_ImmunophenotypingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Select_ImmunophenotypingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectBMAsp_DATARowChangeEvent : global::System.EventArgs {
            
            private SelectBMAsp_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARowChangeEvent(SelectBMAsp_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMAsp_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectBMB_DATARowChangeEvent : global::System.EventArgs {
            
            private SelectBMB_DATARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARowChangeEvent(SelectBMB_DATARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBMB_DATARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectBoneMarrowImagesRowChangeEvent : global::System.EventArgs {
            
            private SelectBoneMarrowImagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRowChangeEvent(SelectBoneMarrowImagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectBoneMarrowImagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectCytogeneticsDataRowChangeEvent : global::System.EventArgs {
            
            private SelectCytogeneticsDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRowChangeEvent(SelectCytogeneticsDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectCytogeneticsDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProcSelectBMAsp_DataRowChangeEvent : global::System.EventArgs {
            
            private ProcSelectBMAsp_DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRowChangeEvent(ProcSelectBMAsp_DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMAsp_DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProcSelectBMB_DataRowChangeEvent : global::System.EventArgs {
            
            private ProcSelectBMB_DataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRowChangeEvent(ProcSelectBMB_DataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMB_DataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProcSelectBMimagesRowChangeEvent : global::System.EventArgs {
            
            private ProcSelectBMimagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRowChangeEvent(ProcSelectBMimagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectBMimagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProcSelectCytogeneticsRowChangeEvent : global::System.EventArgs {
            
            private ProcSelectCytogeneticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRowChangeEvent(ProcSelectCytogeneticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectCytogeneticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProcSelectImmunophenotypingRowChangeEvent : global::System.EventArgs {
            
            private ProcSelectImmunophenotypingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRowChangeEvent(ProcSelectImmunophenotypingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProcSelectImmunophenotypingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BoneMarrow.FullDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AntibioticResultTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AntibioticResultTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AntibioticResult";
            tableMapping.ColumnMappings.Add("CulturesResultsUID", "CulturesResultsUID");
            tableMapping.ColumnMappings.Add("AntibioticResultUID", "AntibioticResultUID");
            tableMapping.ColumnMappings.Add("AntibioticNameForResult", "AntibioticNameForResult");
            tableMapping.ColumnMappings.Add("AntibioticStatus", "AntibioticStatus");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AntibioticResult] WHERE (((@IsNull_CulturesResultsUID = 1 AND " +
                "[CulturesResultsUID] IS NULL) OR ([CulturesResultsUID] = @Original_CulturesResul" +
                "tsUID)) AND ([AntibioticResultUID] = @Original_AntibioticResultUID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntibioticResultUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticResultUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AntibioticResult] ([CulturesResultsUID], [AntibioticNameForResult], [AntibioticStatus]) VALUES (@CulturesResultsUID, @AntibioticNameForResult, @AntibioticStatus);
SELECT CulturesResultsUID, AntibioticResultUID, AntibioticNameForResult, AntibioticStatus FROM AntibioticResult WHERE (AntibioticResultUID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticNameForResult", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticNameForResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[AntibioticResult] SET [CulturesResultsUID] = @CulturesResultsUID, [AntibioticNameForResult] = @AntibioticNameForResult, [AntibioticStatus] = @AntibioticStatus WHERE (((@IsNull_CulturesResultsUID = 1 AND [CulturesResultsUID] IS NULL) OR ([CulturesResultsUID] = @Original_CulturesResultsUID)) AND ([AntibioticResultUID] = @Original_AntibioticResultUID));
SELECT CulturesResultsUID, AntibioticResultUID, AntibioticNameForResult, AntibioticStatus FROM AntibioticResult WHERE (AntibioticResultUID = @AntibioticResultUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticNameForResult", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticNameForResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntibioticResultUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticResultUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticResultUID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticResultUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CulturesResultsUID, AntibioticResultUID, AntibioticNameForResult, Antibiot" +
                "icStatus FROM dbo.AntibioticResult";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.AntibioticResultDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.AntibioticResultDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.AntibioticResultDataTable dataTable = new FullDataSet.AntibioticResultDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.AntibioticResultDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AntibioticResult");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_CulturesResultsUID, int Original_AntibioticResultUID) {
            if ((Original_CulturesResultsUID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CulturesResultsUID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_AntibioticResultUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> CulturesResultsUID, string AntibioticNameForResult, string AntibioticStatus) {
            if ((CulturesResultsUID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(CulturesResultsUID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((AntibioticNameForResult == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AntibioticNameForResult));
            }
            if ((AntibioticStatus == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(AntibioticStatus));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> CulturesResultsUID, string AntibioticNameForResult, string AntibioticStatus, global::System.Nullable<int> Original_CulturesResultsUID, int Original_AntibioticResultUID, int AntibioticResultUID) {
            if ((CulturesResultsUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(CulturesResultsUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((AntibioticNameForResult == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AntibioticNameForResult));
            }
            if ((AntibioticStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(AntibioticStatus));
            }
            if ((Original_CulturesResultsUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_CulturesResultsUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_AntibioticResultUID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(AntibioticResultUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> CulturesResultsUID, string AntibioticNameForResult, string AntibioticStatus, global::System.Nullable<int> Original_CulturesResultsUID, int Original_AntibioticResultUID) {
            return this.Update(CulturesResultsUID, AntibioticNameForResult, AntibioticStatus, Original_CulturesResultsUID, Original_AntibioticResultUID, Original_AntibioticResultUID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AntibioticsSourceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AntibioticsSourceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AntibioticsSource";
            tableMapping.ColumnMappings.Add("AntibioticUID", "AntibioticUID");
            tableMapping.ColumnMappings.Add("AntibioticName", "AntibioticName");
            tableMapping.ColumnMappings.Add("AntibioticAbbreviation", "AntibioticAbbreviation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AntibioticsSource] WHERE (([AntibioticUID] = @Original_Antibio" +
                "ticUID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntibioticUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AntibioticsSource] ([AntibioticName], [AntibioticAbbreviation]) VALUES (@AntibioticName, @AntibioticAbbreviation);
SELECT AntibioticUID, AntibioticName, AntibioticAbbreviation FROM AntibioticsSource WHERE (AntibioticUID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticAbbreviation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticAbbreviation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[AntibioticsSource] SET [AntibioticName] = @AntibioticName, [AntibioticAbbreviation] = @AntibioticAbbreviation WHERE (([AntibioticUID] = @Original_AntibioticUID));
SELECT AntibioticUID, AntibioticName, AntibioticAbbreviation FROM AntibioticsSource WHERE (AntibioticUID = @AntibioticUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticAbbreviation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticAbbreviation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AntibioticUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AntibioticUID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AntibioticUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AntibioticUID, AntibioticName, AntibioticAbbreviation FROM dbo.Antibiotics" +
                "Source";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.AntibioticsSourceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.AntibioticsSourceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.AntibioticsSourceDataTable dataTable = new FullDataSet.AntibioticsSourceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.AntibioticsSourceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AntibioticsSource");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AntibioticUID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AntibioticUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string AntibioticName, string AntibioticAbbreviation) {
            if ((AntibioticName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(AntibioticName));
            }
            if ((AntibioticAbbreviation == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AntibioticAbbreviation));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AntibioticName, string AntibioticAbbreviation, int Original_AntibioticUID, int AntibioticUID) {
            if ((AntibioticName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(AntibioticName));
            }
            if ((AntibioticAbbreviation == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AntibioticAbbreviation));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_AntibioticUID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(AntibioticUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string AntibioticName, string AntibioticAbbreviation, int Original_AntibioticUID) {
            return this.Update(AntibioticName, AntibioticAbbreviation, Original_AntibioticUID, Original_AntibioticUID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BoneMarrowResultsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BoneMarrowResultsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BoneMarrowResults";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BMBsite", "BMBsite");
            tableMapping.ColumnMappings.Add("BMAspSite", "BMAspSite");
            tableMapping.ColumnMappings.Add("BMB_HistoExamin", "BMB_HistoExamin");
            tableMapping.ColumnMappings.Add("BMAspComment", "BMAspComment");
            tableMapping.ColumnMappings.Add("Blasts", "Blasts");
            tableMapping.ColumnMappings.Add("Promyelocytes", "Promyelocytes");
            tableMapping.ColumnMappings.Add("Myelocytes", "Myelocytes");
            tableMapping.ColumnMappings.Add("Juvenile", "Juvenile");
            tableMapping.ColumnMappings.Add("Staff", "Staff");
            tableMapping.ColumnMappings.Add("Segmented", "Segmented");
            tableMapping.ColumnMappings.Add("Lymphocytes", "Lymphocytes");
            tableMapping.ColumnMappings.Add("Monocytes", "Monocytes");
            tableMapping.ColumnMappings.Add("Eosinophils", "Eosinophils");
            tableMapping.ColumnMappings.Add("Basophils", "Basophils");
            tableMapping.ColumnMappings.Add("Normoblasts", "Normoblasts");
            tableMapping.ColumnMappings.Add("PlasmaCells", "PlasmaCells");
            tableMapping.ColumnMappings.Add("BoneHardness", "BoneHardness");
            tableMapping.ColumnMappings.Add("BoneSize", "BoneSize");
            tableMapping.ColumnMappings.Add("BMBconclusion", "BMBconclusion");
            tableMapping.ColumnMappings.Add("BMAconclusion", "BMAconclusion");
            tableMapping.ColumnMappings.Add("Uni2", "Uni2");
            tableMapping.ColumnMappings.Add("PhenotypeImmuPhen", "PhenotypeImmuPhen");
            tableMapping.ColumnMappings.Add("CommentImmuPhen", "CommentImmuPhen");
            tableMapping.ColumnMappings.Add("ConclusionImmuPheno", "ConclusionImmuPheno");
            tableMapping.ColumnMappings.Add("CytoTestName", "CytoTestName");
            tableMapping.ColumnMappings.Add("CytoSpecimen", "CytoSpecimen");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount45", "CytoChromosomeCount45");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount46", "CytoChromosomeCount46");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount47", "CytoChromosomeCount47");
            tableMapping.ColumnMappings.Add("CytoChromosomeCountTotal", "CytoChromosomeCountTotal");
            tableMapping.ColumnMappings.Add("CytoCellsCounted45", "CytoCellsCounted45");
            tableMapping.ColumnMappings.Add("CytoCellsCounted46", "CytoCellsCounted46");
            tableMapping.ColumnMappings.Add("CytoCellsCounted47", "CytoCellsCounted47");
            tableMapping.ColumnMappings.Add("CytoCellsCounted4Total", "CytoCellsCounted4Total");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed45", "CytoCellsPhotographed45");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed46", "CytoCellsPhotographed46");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed47", "CytoCellsPhotographed47");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographedTotal", "CytoCellsPhotographedTotal");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped45", "CytoCellsKayrotyped45");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped46", "CytoCellsKayrotyped46");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped47", "CytoCellsKayrotyped47");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotypedTotal", "CytoCellsKayrotypedTotal");
            tableMapping.ColumnMappings.Add("CytoKaryotype", "CytoKaryotype");
            tableMapping.ColumnMappings.Add("CytoInterpretation", "CytoInterpretation");
            tableMapping.ColumnMappings.Add("CytoRecommendation", "CytoRecommendation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BoneMarrowResults] WHERE (((@IsNull_ID = 1 AND [ID] IS NULL) O" +
                "R ([ID] = @Original_ID)) AND ((@IsNull_Blasts = 1 AND [Blasts] IS NULL) OR ([Bla" +
                "sts] = @Original_Blasts)) AND ((@IsNull_Promyelocytes = 1 AND [Promyelocytes] IS" +
                " NULL) OR ([Promyelocytes] = @Original_Promyelocytes)) AND ((@IsNull_Myelocytes " +
                "= 1 AND [Myelocytes] IS NULL) OR ([Myelocytes] = @Original_Myelocytes)) AND ((@I" +
                "sNull_Juvenile = 1 AND [Juvenile] IS NULL) OR ([Juvenile] = @Original_Juvenile))" +
                " AND ((@IsNull_Staff = 1 AND [Staff] IS NULL) OR ([Staff] = @Original_Staff)) AN" +
                "D ((@IsNull_Segmented = 1 AND [Segmented] IS NULL) OR ([Segmented] = @Original_S" +
                "egmented)) AND ((@IsNull_Lymphocytes = 1 AND [Lymphocytes] IS NULL) OR ([Lymphoc" +
                "ytes] = @Original_Lymphocytes)) AND ((@IsNull_Monocytes = 1 AND [Monocytes] IS N" +
                "ULL) OR ([Monocytes] = @Original_Monocytes)) AND ((@IsNull_Eosinophils = 1 AND [" +
                "Eosinophils] IS NULL) OR ([Eosinophils] = @Original_Eosinophils)) AND ((@IsNull_" +
                "Basophils = 1 AND [Basophils] IS NULL) OR ([Basophils] = @Original_Basophils)) A" +
                "ND ((@IsNull_Normoblasts = 1 AND [Normoblasts] IS NULL) OR ([Normoblasts] = @Ori" +
                "ginal_Normoblasts)) AND ((@IsNull_PlasmaCells = 1 AND [PlasmaCells] IS NULL) OR " +
                "([PlasmaCells] = @Original_PlasmaCells)) AND ((@IsNull_BoneSize = 1 AND [BoneSiz" +
                "e] IS NULL) OR ([BoneSize] = @Original_BoneSize)) AND ([Uni2] = @Original_Uni2) " +
                "AND ((@IsNull_CytoChromosomeCount45 = 1 AND [CytoChromosomeCount45] IS NULL) OR " +
                "([CytoChromosomeCount45] = @Original_CytoChromosomeCount45)) AND ((@IsNull_CytoC" +
                "hromosomeCount46 = 1 AND [CytoChromosomeCount46] IS NULL) OR ([CytoChromosomeCou" +
                "nt46] = @Original_CytoChromosomeCount46)) AND ((@IsNull_CytoChromosomeCount47 = " +
                "1 AND [CytoChromosomeCount47] IS NULL) OR ([CytoChromosomeCount47] = @Original_C" +
                "ytoChromosomeCount47)) AND ((@IsNull_CytoChromosomeCountTotal = 1 AND [CytoChrom" +
                "osomeCountTotal] IS NULL) OR ([CytoChromosomeCountTotal] = @Original_CytoChromos" +
                "omeCountTotal)) AND ((@IsNull_CytoCellsCounted45 = 1 AND [CytoCellsCounted45] IS" +
                " NULL) OR ([CytoCellsCounted45] = @Original_CytoCellsCounted45)) AND ((@IsNull_C" +
                "ytoCellsCounted46 = 1 AND [CytoCellsCounted46] IS NULL) OR ([CytoCellsCounted46]" +
                " = @Original_CytoCellsCounted46)) AND ((@IsNull_CytoCellsCounted47 = 1 AND [Cyto" +
                "CellsCounted47] IS NULL) OR ([CytoCellsCounted47] = @Original_CytoCellsCounted47" +
                ")) AND ((@IsNull_CytoCellsCounted4Total = 1 AND [CytoCellsCounted4Total] IS NULL" +
                ") OR ([CytoCellsCounted4Total] = @Original_CytoCellsCounted4Total)) AND ((@IsNul" +
                "l_CytoCellsPhotographed45 = 1 AND [CytoCellsPhotographed45] IS NULL) OR ([CytoCe" +
                "llsPhotographed45] = @Original_CytoCellsPhotographed45)) AND ((@IsNull_CytoCells" +
                "Photographed46 = 1 AND [CytoCellsPhotographed46] IS NULL) OR ([CytoCellsPhotogra" +
                "phed46] = @Original_CytoCellsPhotographed46)) AND ((@IsNull_CytoCellsPhotographe" +
                "d47 = 1 AND [CytoCellsPhotographed47] IS NULL) OR ([CytoCellsPhotographed47] = @" +
                "Original_CytoCellsPhotographed47)) AND ((@IsNull_CytoCellsPhotographedTotal = 1 " +
                "AND [CytoCellsPhotographedTotal] IS NULL) OR ([CytoCellsPhotographedTotal] = @Or" +
                "iginal_CytoCellsPhotographedTotal)) AND ((@IsNull_CytoCellsKayrotyped45 = 1 AND " +
                "[CytoCellsKayrotyped45] IS NULL) OR ([CytoCellsKayrotyped45] = @Original_CytoCel" +
                "lsKayrotyped45)) AND ((@IsNull_CytoCellsKayrotyped46 = 1 AND [CytoCellsKayrotype" +
                "d46] IS NULL) OR ([CytoCellsKayrotyped46] = @Original_CytoCellsKayrotyped46)) AN" +
                "D ((@IsNull_CytoCellsKayrotyped47 = 1 AND [CytoCellsKayrotyped47] IS NULL) OR ([" +
                "CytoCellsKayrotyped47] = @Original_CytoCellsKayrotyped47)) AND ((@IsNull_CytoCel" +
                "lsKayrotypedTotal = 1 AND [CytoCellsKayrotypedTotal] IS NULL) OR ([CytoCellsKayr" +
                "otypedTotal] = @Original_CytoCellsKayrotypedTotal)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Blasts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blasts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Blasts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Promyelocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promyelocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Promyelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Promyelocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Myelocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myelocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Myelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Myelocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Juvenile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Juvenile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Juvenile", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Juvenile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Staff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Staff", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Staff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Segmented", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Segmented", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Segmented", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Segmented", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Lymphocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lymphocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lymphocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Lymphocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Monocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Monocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eosinophils", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eosinophils", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eosinophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Eosinophils", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Basophils", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Basophils", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Basophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Basophils", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Normoblasts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Normoblasts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Normoblasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Normoblasts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlasmaCells", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlasmaCells", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlasmaCells", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PlasmaCells", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoneSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoneSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoneSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BoneSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uni2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uni2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCountTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCountTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted4Total", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted4Total", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BoneMarrowResults] ([ID], [BMBsite], [BMAspSite], [BMB_HistoEx" +
                "amin], [BMAspComment], [Blasts], [Promyelocytes], [Myelocytes], [Juvenile], [Sta" +
                "ff], [Segmented], [Lymphocytes], [Monocytes], [Eosinophils], [Basophils], [Normo" +
                "blasts], [PlasmaCells], [BoneHardness], [BoneSize], [BMBconclusion], [BMAconclus" +
                "ion], [PhenotypeImmuPhen], [CommentImmuPhen], [ConclusionImmuPheno], [CytoTestNa" +
                "me], [CytoSpecimen], [CytoChromosomeCount45], [CytoChromosomeCount46], [CytoChro" +
                "mosomeCount47], [CytoChromosomeCountTotal], [CytoCellsCounted45], [CytoCellsCoun" +
                "ted46], [CytoCellsCounted47], [CytoCellsCounted4Total], [CytoCellsPhotographed45" +
                "], [CytoCellsPhotographed46], [CytoCellsPhotographed47], [CytoCellsPhotographedT" +
                "otal], [CytoCellsKayrotyped45], [CytoCellsKayrotyped46], [CytoCellsKayrotyped47]" +
                ", [CytoCellsKayrotypedTotal], [CytoKaryotype], [CytoInterpretation], [CytoRecomm" +
                "endation]) VALUES (@ID, @BMBsite, @BMAspSite, @BMB_HistoExamin, @BMAspComment, @" +
                "Blasts, @Promyelocytes, @Myelocytes, @Juvenile, @Staff, @Segmented, @Lymphocytes" +
                ", @Monocytes, @Eosinophils, @Basophils, @Normoblasts, @PlasmaCells, @BoneHardnes" +
                "s, @BoneSize, @BMBconclusion, @BMAconclusion, @PhenotypeImmuPhen, @CommentImmuPh" +
                "en, @ConclusionImmuPheno, @CytoTestName, @CytoSpecimen, @CytoChromosomeCount45, " +
                "@CytoChromosomeCount46, @CytoChromosomeCount47, @CytoChromosomeCountTotal, @Cyto" +
                "CellsCounted45, @CytoCellsCounted46, @CytoCellsCounted47, @CytoCellsCounted4Tota" +
                "l, @CytoCellsPhotographed45, @CytoCellsPhotographed46, @CytoCellsPhotographed47," +
                " @CytoCellsPhotographedTotal, @CytoCellsKayrotyped45, @CytoCellsKayrotyped46, @C" +
                "ytoCellsKayrotyped47, @CytoCellsKayrotypedTotal, @CytoKaryotype, @CytoInterpreta" +
                "tion, @CytoRecommendation);\r\nSELECT ID, BMBsite, BMAspSite, BMB_HistoExamin, BMA" +
                "spComment, Blasts, Promyelocytes, Myelocytes, Juvenile, Staff, Segmented, Lympho" +
                "cytes, Monocytes, Eosinophils, Basophils, Normoblasts, PlasmaCells, BoneHardness" +
                ", BoneSize, BMBconclusion, BMAconclusion, Uni2, PhenotypeImmuPhen, CommentImmuPh" +
                "en, ConclusionImmuPheno, CytoTestName, CytoSpecimen, CytoChromosomeCount45, Cyto" +
                "ChromosomeCount46, CytoChromosomeCount47, CytoChromosomeCountTotal, CytoCellsCou" +
                "nted45, CytoCellsCounted46, CytoCellsCounted47, CytoCellsCounted4Total, CytoCell" +
                "sPhotographed45, CytoCellsPhotographed46, CytoCellsPhotographed47, CytoCellsPhot" +
                "ographedTotal, CytoCellsKayrotyped45, CytoCellsKayrotyped46, CytoCellsKayrotyped" +
                "47, CytoCellsKayrotypedTotal, CytoKaryotype, CytoInterpretation, CytoRecommendat" +
                "ion FROM BoneMarrowResults WHERE (Uni2 = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMBsite", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMBsite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAspSite", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAspSite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMB_HistoExamin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMB_HistoExamin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAspComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAspComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Blasts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Promyelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Promyelocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Myelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Myelocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Juvenile", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Juvenile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Staff", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Staff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Segmented", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Segmented", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lymphocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Lymphocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Monocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eosinophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Eosinophils", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Basophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Basophils", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Normoblasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Normoblasts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlasmaCells", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PlasmaCells", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoneHardness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoneHardness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoneSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BoneSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMBconclusion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMBconclusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAconclusion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAconclusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhenotypeImmuPhen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhenotypeImmuPhen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommentImmuPhen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommentImmuPhen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConclusionImmuPheno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConclusionImmuPheno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoTestName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoTestName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoSpecimen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoSpecimen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCountTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted4Total", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoKaryotype", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoKaryotype", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoInterpretation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoInterpretation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoRecommendation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoRecommendation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BoneMarrowResults] SET [ID] = @ID, [BMBsite] = @BMBsite, [BMAspSite" +
                "] = @BMAspSite, [BMB_HistoExamin] = @BMB_HistoExamin, [BMAspComment] = @BMAspCom" +
                "ment, [Blasts] = @Blasts, [Promyelocytes] = @Promyelocytes, [Myelocytes] = @Myel" +
                "ocytes, [Juvenile] = @Juvenile, [Staff] = @Staff, [Segmented] = @Segmented, [Lym" +
                "phocytes] = @Lymphocytes, [Monocytes] = @Monocytes, [Eosinophils] = @Eosinophils" +
                ", [Basophils] = @Basophils, [Normoblasts] = @Normoblasts, [PlasmaCells] = @Plasm" +
                "aCells, [BoneHardness] = @BoneHardness, [BoneSize] = @BoneSize, [BMBconclusion] " +
                "= @BMBconclusion, [BMAconclusion] = @BMAconclusion, [PhenotypeImmuPhen] = @Pheno" +
                "typeImmuPhen, [CommentImmuPhen] = @CommentImmuPhen, [ConclusionImmuPheno] = @Con" +
                "clusionImmuPheno, [CytoTestName] = @CytoTestName, [CytoSpecimen] = @CytoSpecimen" +
                ", [CytoChromosomeCount45] = @CytoChromosomeCount45, [CytoChromosomeCount46] = @C" +
                "ytoChromosomeCount46, [CytoChromosomeCount47] = @CytoChromosomeCount47, [CytoChr" +
                "omosomeCountTotal] = @CytoChromosomeCountTotal, [CytoCellsCounted45] = @CytoCell" +
                "sCounted45, [CytoCellsCounted46] = @CytoCellsCounted46, [CytoCellsCounted47] = @" +
                "CytoCellsCounted47, [CytoCellsCounted4Total] = @CytoCellsCounted4Total, [CytoCel" +
                "lsPhotographed45] = @CytoCellsPhotographed45, [CytoCellsPhotographed46] = @CytoC" +
                "ellsPhotographed46, [CytoCellsPhotographed47] = @CytoCellsPhotographed47, [CytoC" +
                "ellsPhotographedTotal] = @CytoCellsPhotographedTotal, [CytoCellsKayrotyped45] = " +
                "@CytoCellsKayrotyped45, [CytoCellsKayrotyped46] = @CytoCellsKayrotyped46, [CytoC" +
                "ellsKayrotyped47] = @CytoCellsKayrotyped47, [CytoCellsKayrotypedTotal] = @CytoCe" +
                "llsKayrotypedTotal, [CytoKaryotype] = @CytoKaryotype, [CytoInterpretation] = @Cy" +
                "toInterpretation, [CytoRecommendation] = @CytoRecommendation WHERE (((@IsNull_ID" +
                " = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ((@IsNull_Blasts = 1 AND [B" +
                "lasts] IS NULL) OR ([Blasts] = @Original_Blasts)) AND ((@IsNull_Promyelocytes = " +
                "1 AND [Promyelocytes] IS NULL) OR ([Promyelocytes] = @Original_Promyelocytes)) A" +
                "ND ((@IsNull_Myelocytes = 1 AND [Myelocytes] IS NULL) OR ([Myelocytes] = @Origin" +
                "al_Myelocytes)) AND ((@IsNull_Juvenile = 1 AND [Juvenile] IS NULL) OR ([Juvenile" +
                "] = @Original_Juvenile)) AND ((@IsNull_Staff = 1 AND [Staff] IS NULL) OR ([Staff" +
                "] = @Original_Staff)) AND ((@IsNull_Segmented = 1 AND [Segmented] IS NULL) OR ([" +
                "Segmented] = @Original_Segmented)) AND ((@IsNull_Lymphocytes = 1 AND [Lymphocyte" +
                "s] IS NULL) OR ([Lymphocytes] = @Original_Lymphocytes)) AND ((@IsNull_Monocytes " +
                "= 1 AND [Monocytes] IS NULL) OR ([Monocytes] = @Original_Monocytes)) AND ((@IsNu" +
                "ll_Eosinophils = 1 AND [Eosinophils] IS NULL) OR ([Eosinophils] = @Original_Eosi" +
                "nophils)) AND ((@IsNull_Basophils = 1 AND [Basophils] IS NULL) OR ([Basophils] =" +
                " @Original_Basophils)) AND ((@IsNull_Normoblasts = 1 AND [Normoblasts] IS NULL) " +
                "OR ([Normoblasts] = @Original_Normoblasts)) AND ((@IsNull_PlasmaCells = 1 AND [P" +
                "lasmaCells] IS NULL) OR ([PlasmaCells] = @Original_PlasmaCells)) AND ((@IsNull_B" +
                "oneSize = 1 AND [BoneSize] IS NULL) OR ([BoneSize] = @Original_BoneSize)) AND ([" +
                "Uni2] = @Original_Uni2) AND ((@IsNull_CytoChromosomeCount45 = 1 AND [CytoChromos" +
                "omeCount45] IS NULL) OR ([CytoChromosomeCount45] = @Original_CytoChromosomeCount" +
                "45)) AND ((@IsNull_CytoChromosomeCount46 = 1 AND [CytoChromosomeCount46] IS NULL" +
                ") OR ([CytoChromosomeCount46] = @Original_CytoChromosomeCount46)) AND ((@IsNull_" +
                "CytoChromosomeCount47 = 1 AND [CytoChromosomeCount47] IS NULL) OR ([CytoChromoso" +
                "meCount47] = @Original_CytoChromosomeCount47)) AND ((@IsNull_CytoChromosomeCount" +
                "Total = 1 AND [CytoChromosomeCountTotal] IS NULL) OR ([CytoChromosomeCountTotal]" +
                " = @Original_CytoChromosomeCountTotal)) AND ((@IsNull_CytoCellsCounted45 = 1 AND" +
                " [CytoCellsCounted45] IS NULL) OR ([CytoCellsCounted45] = @Original_CytoCellsCou" +
                "nted45)) AND ((@IsNull_CytoCellsCounted46 = 1 AND [CytoCellsCounted46] IS NULL) " +
                "OR ([CytoCellsCounted46] = @Original_CytoCellsCounted46)) AND ((@IsNull_CytoCell" +
                "sCounted47 = 1 AND [CytoCellsCounted47] IS NULL) OR ([CytoCellsCounted47] = @Ori" +
                "ginal_CytoCellsCounted47)) AND ((@IsNull_CytoCellsCounted4Total = 1 AND [CytoCel" +
                "lsCounted4Total] IS NULL) OR ([CytoCellsCounted4Total] = @Original_CytoCellsCoun" +
                "ted4Total)) AND ((@IsNull_CytoCellsPhotographed45 = 1 AND [CytoCellsPhotographed" +
                "45] IS NULL) OR ([CytoCellsPhotographed45] = @Original_CytoCellsPhotographed45))" +
                " AND ((@IsNull_CytoCellsPhotographed46 = 1 AND [CytoCellsPhotographed46] IS NULL" +
                ") OR ([CytoCellsPhotographed46] = @Original_CytoCellsPhotographed46)) AND ((@IsN" +
                "ull_CytoCellsPhotographed47 = 1 AND [CytoCellsPhotographed47] IS NULL) OR ([Cyto" +
                "CellsPhotographed47] = @Original_CytoCellsPhotographed47)) AND ((@IsNull_CytoCel" +
                "lsPhotographedTotal = 1 AND [CytoCellsPhotographedTotal] IS NULL) OR ([CytoCells" +
                "PhotographedTotal] = @Original_CytoCellsPhotographedTotal)) AND ((@IsNull_CytoCe" +
                "llsKayrotyped45 = 1 AND [CytoCellsKayrotyped45] IS NULL) OR ([CytoCellsKayrotype" +
                "d45] = @Original_CytoCellsKayrotyped45)) AND ((@IsNull_CytoCellsKayrotyped46 = 1" +
                " AND [CytoCellsKayrotyped46] IS NULL) OR ([CytoCellsKayrotyped46] = @Original_Cy" +
                "toCellsKayrotyped46)) AND ((@IsNull_CytoCellsKayrotyped47 = 1 AND [CytoCellsKayr" +
                "otyped47] IS NULL) OR ([CytoCellsKayrotyped47] = @Original_CytoCellsKayrotyped47" +
                ")) AND ((@IsNull_CytoCellsKayrotypedTotal = 1 AND [CytoCellsKayrotypedTotal] IS " +
                "NULL) OR ([CytoCellsKayrotypedTotal] = @Original_CytoCellsKayrotypedTotal)));\r\nS" +
                "ELECT ID, BMBsite, BMAspSite, BMB_HistoExamin, BMAspComment, Blasts, Promyelocyt" +
                "es, Myelocytes, Juvenile, Staff, Segmented, Lymphocytes, Monocytes, Eosinophils," +
                " Basophils, Normoblasts, PlasmaCells, BoneHardness, BoneSize, BMBconclusion, BMA" +
                "conclusion, Uni2, PhenotypeImmuPhen, CommentImmuPhen, ConclusionImmuPheno, CytoT" +
                "estName, CytoSpecimen, CytoChromosomeCount45, CytoChromosomeCount46, CytoChromos" +
                "omeCount47, CytoChromosomeCountTotal, CytoCellsCounted45, CytoCellsCounted46, Cy" +
                "toCellsCounted47, CytoCellsCounted4Total, CytoCellsPhotographed45, CytoCellsPhot" +
                "ographed46, CytoCellsPhotographed47, CytoCellsPhotographedTotal, CytoCellsKayrot" +
                "yped45, CytoCellsKayrotyped46, CytoCellsKayrotyped47, CytoCellsKayrotypedTotal, " +
                "CytoKaryotype, CytoInterpretation, CytoRecommendation FROM BoneMarrowResults WHE" +
                "RE (Uni2 = @Uni2)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMBsite", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMBsite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAspSite", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAspSite", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMB_HistoExamin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMB_HistoExamin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAspComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAspComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Blasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Blasts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Promyelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Promyelocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Myelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Myelocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Juvenile", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Juvenile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Staff", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Staff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Segmented", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Segmented", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lymphocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Lymphocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Monocytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Eosinophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Eosinophils", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Basophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Basophils", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Normoblasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Normoblasts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlasmaCells", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PlasmaCells", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoneHardness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoneHardness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BoneSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BoneSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMBconclusion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMBconclusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BMAconclusion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BMAconclusion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhenotypeImmuPhen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhenotypeImmuPhen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommentImmuPhen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommentImmuPhen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConclusionImmuPheno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConclusionImmuPheno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoTestName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoTestName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoSpecimen", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoSpecimen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCount47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoChromosomeCountTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsCounted4Total", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographed47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotyped47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoKaryotype", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoKaryotype", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoInterpretation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoInterpretation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CytoRecommendation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoRecommendation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Blasts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Blasts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Blasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Blasts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Promyelocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Promyelocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Promyelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Promyelocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Myelocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Myelocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Myelocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Myelocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Juvenile", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Juvenile", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Juvenile", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Juvenile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Staff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Staff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Staff", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Staff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Segmented", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Segmented", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Segmented", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Segmented", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Lymphocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lymphocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lymphocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Lymphocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Monocytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Monocytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monocytes", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Monocytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Eosinophils", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Eosinophils", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Eosinophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Eosinophils", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Basophils", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Basophils", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Basophils", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Basophils", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Normoblasts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Normoblasts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Normoblasts", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Normoblasts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlasmaCells", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlasmaCells", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlasmaCells", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PlasmaCells", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BoneSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BoneSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BoneSize", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BoneSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uni2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uni2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCount47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCount47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCount47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoChromosomeCountTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoChromosomeCountTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoChromosomeCountTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsCounted4Total", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsCounted4Total", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsCounted4Total", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographed47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographed47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographed47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsPhotographedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsPhotographedTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped45", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped45", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped45", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped46", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped46", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped46", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotyped47", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotyped47", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotyped47", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CytoCellsKayrotypedTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CytoCellsKayrotypedTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uni2", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Uni2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, BMBsite, BMAspSite, BMB_HistoExamin, BMAspComment, Blasts, Promyelocytes, Myelocytes, Juvenile, Staff, Segmented, Lymphocytes, Monocytes, Eosinophils, Basophils, Normoblasts, PlasmaCells, BoneHardness, BoneSize, BMBconclusion, BMAconclusion, Uni2, PhenotypeImmuPhen, CommentImmuPhen, ConclusionImmuPheno, CytoTestName, CytoSpecimen, CytoChromosomeCount45, CytoChromosomeCount46, CytoChromosomeCount47, CytoChromosomeCountTotal, CytoCellsCounted45, CytoCellsCounted46, CytoCellsCounted47, CytoCellsCounted4Total, CytoCellsPhotographed45, CytoCellsPhotographed46, CytoCellsPhotographed47, CytoCellsPhotographedTotal, CytoCellsKayrotyped45, CytoCellsKayrotyped46, CytoCellsKayrotyped47, CytoCellsKayrotypedTotal, CytoKaryotype, CytoInterpretation, CytoRecommendation FROM dbo.BoneMarrowResults";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.BoneMarrowResultsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.BoneMarrowResultsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.BoneMarrowResultsDataTable dataTable = new FullDataSet.BoneMarrowResultsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.BoneMarrowResultsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BoneMarrowResults");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<decimal> Original_Blasts, 
                    global::System.Nullable<decimal> Original_Promyelocytes, 
                    global::System.Nullable<decimal> Original_Myelocytes, 
                    global::System.Nullable<decimal> Original_Juvenile, 
                    global::System.Nullable<decimal> Original_Staff, 
                    global::System.Nullable<decimal> Original_Segmented, 
                    global::System.Nullable<decimal> Original_Lymphocytes, 
                    global::System.Nullable<decimal> Original_Monocytes, 
                    global::System.Nullable<decimal> Original_Eosinophils, 
                    global::System.Nullable<decimal> Original_Basophils, 
                    global::System.Nullable<decimal> Original_Normoblasts, 
                    global::System.Nullable<decimal> Original_PlasmaCells, 
                    global::System.Nullable<decimal> Original_BoneSize, 
                    int Original_Uni2, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount45, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount46, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount47, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted45, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted46, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted47, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotypedTotal) {
            if ((Original_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Original_Blasts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Blasts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Promyelocytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Promyelocytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_Myelocytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Myelocytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Juvenile.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Juvenile.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Staff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_Staff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Segmented.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_Segmented.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Lymphocytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_Lymphocytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Monocytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_Monocytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Eosinophils.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_Eosinophils.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Basophils.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_Basophils.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Normoblasts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_Normoblasts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_PlasmaCells.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_PlasmaCells.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_BoneSize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_BoneSize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_Uni2));
            if ((Original_CytoChromosomeCount45.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_CytoChromosomeCount45.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCount46.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_CytoChromosomeCount46.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCount47.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_CytoChromosomeCount47.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCountTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_CytoChromosomeCountTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted45.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_CytoCellsCounted45.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted46.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_CytoCellsCounted46.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted47.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_CytoCellsCounted47.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted4Total.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_CytoCellsCounted4Total.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed45.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_CytoCellsPhotographed45.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed46.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_CytoCellsPhotographed46.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed47.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_CytoCellsPhotographed47.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographedTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_CytoCellsPhotographedTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped45.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_CytoCellsKayrotyped45.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped46.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_CytoCellsKayrotyped46.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped47.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_CytoCellsKayrotyped47.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotypedTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_CytoCellsKayrotypedTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> ID, 
                    string BMBsite, 
                    string BMAspSite, 
                    string BMB_HistoExamin, 
                    string BMAspComment, 
                    global::System.Nullable<decimal> Blasts, 
                    global::System.Nullable<decimal> Promyelocytes, 
                    global::System.Nullable<decimal> Myelocytes, 
                    global::System.Nullable<decimal> Juvenile, 
                    global::System.Nullable<decimal> Staff, 
                    global::System.Nullable<decimal> Segmented, 
                    global::System.Nullable<decimal> Lymphocytes, 
                    global::System.Nullable<decimal> Monocytes, 
                    global::System.Nullable<decimal> Eosinophils, 
                    global::System.Nullable<decimal> Basophils, 
                    global::System.Nullable<decimal> Normoblasts, 
                    global::System.Nullable<decimal> PlasmaCells, 
                    string BoneHardness, 
                    global::System.Nullable<decimal> BoneSize, 
                    string BMBconclusion, 
                    string BMAconclusion, 
                    string PhenotypeImmuPhen, 
                    string CommentImmuPhen, 
                    string ConclusionImmuPheno, 
                    string CytoTestName, 
                    string CytoSpecimen, 
                    global::System.Nullable<decimal> CytoChromosomeCount45, 
                    global::System.Nullable<decimal> CytoChromosomeCount46, 
                    global::System.Nullable<decimal> CytoChromosomeCount47, 
                    global::System.Nullable<decimal> CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> CytoCellsCounted45, 
                    global::System.Nullable<decimal> CytoCellsCounted46, 
                    global::System.Nullable<decimal> CytoCellsCounted47, 
                    global::System.Nullable<decimal> CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> CytoCellsKayrotypedTotal, 
                    string CytoKaryotype, 
                    string CytoInterpretation, 
                    string CytoRecommendation) {
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BMBsite == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BMBsite));
            }
            if ((BMAspSite == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BMAspSite));
            }
            if ((BMB_HistoExamin == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BMB_HistoExamin));
            }
            if ((BMAspComment == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BMAspComment));
            }
            if ((Blasts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Blasts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Promyelocytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Promyelocytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Myelocytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Myelocytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Juvenile.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Juvenile.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Staff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Staff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Segmented.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Segmented.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Lymphocytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(Lymphocytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Monocytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(Monocytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Eosinophils.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Eosinophils.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Basophils.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Basophils.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Normoblasts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Normoblasts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PlasmaCells.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(PlasmaCells.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BoneHardness == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BoneHardness));
            }
            if ((BoneSize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(BoneSize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BMBconclusion == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BMBconclusion));
            }
            if ((BMAconclusion == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BMAconclusion));
            }
            if ((PhenotypeImmuPhen == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PhenotypeImmuPhen));
            }
            if ((CommentImmuPhen == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CommentImmuPhen));
            }
            if ((ConclusionImmuPheno == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ConclusionImmuPheno));
            }
            if ((CytoTestName == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(CytoTestName));
            }
            if ((CytoSpecimen == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(CytoSpecimen));
            }
            if ((CytoChromosomeCount45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(CytoChromosomeCount45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCount46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(CytoChromosomeCount46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCount47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(CytoChromosomeCount47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCountTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(CytoChromosomeCountTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(CytoCellsCounted45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(CytoCellsCounted46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(CytoCellsCounted47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted4Total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(CytoCellsCounted4Total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(CytoCellsPhotographed45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(CytoCellsPhotographed46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(CytoCellsPhotographed47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographedTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(CytoCellsPhotographedTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(CytoCellsKayrotyped45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(CytoCellsKayrotyped46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(CytoCellsKayrotyped47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotypedTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(CytoCellsKayrotypedTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CytoKaryotype == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(CytoKaryotype));
            }
            if ((CytoInterpretation == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(CytoInterpretation));
            }
            if ((CytoRecommendation == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(CytoRecommendation));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    string BMBsite, 
                    string BMAspSite, 
                    string BMB_HistoExamin, 
                    string BMAspComment, 
                    global::System.Nullable<decimal> Blasts, 
                    global::System.Nullable<decimal> Promyelocytes, 
                    global::System.Nullable<decimal> Myelocytes, 
                    global::System.Nullable<decimal> Juvenile, 
                    global::System.Nullable<decimal> Staff, 
                    global::System.Nullable<decimal> Segmented, 
                    global::System.Nullable<decimal> Lymphocytes, 
                    global::System.Nullable<decimal> Monocytes, 
                    global::System.Nullable<decimal> Eosinophils, 
                    global::System.Nullable<decimal> Basophils, 
                    global::System.Nullable<decimal> Normoblasts, 
                    global::System.Nullable<decimal> PlasmaCells, 
                    string BoneHardness, 
                    global::System.Nullable<decimal> BoneSize, 
                    string BMBconclusion, 
                    string BMAconclusion, 
                    string PhenotypeImmuPhen, 
                    string CommentImmuPhen, 
                    string ConclusionImmuPheno, 
                    string CytoTestName, 
                    string CytoSpecimen, 
                    global::System.Nullable<decimal> CytoChromosomeCount45, 
                    global::System.Nullable<decimal> CytoChromosomeCount46, 
                    global::System.Nullable<decimal> CytoChromosomeCount47, 
                    global::System.Nullable<decimal> CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> CytoCellsCounted45, 
                    global::System.Nullable<decimal> CytoCellsCounted46, 
                    global::System.Nullable<decimal> CytoCellsCounted47, 
                    global::System.Nullable<decimal> CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> CytoCellsKayrotypedTotal, 
                    string CytoKaryotype, 
                    string CytoInterpretation, 
                    string CytoRecommendation, 
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<decimal> Original_Blasts, 
                    global::System.Nullable<decimal> Original_Promyelocytes, 
                    global::System.Nullable<decimal> Original_Myelocytes, 
                    global::System.Nullable<decimal> Original_Juvenile, 
                    global::System.Nullable<decimal> Original_Staff, 
                    global::System.Nullable<decimal> Original_Segmented, 
                    global::System.Nullable<decimal> Original_Lymphocytes, 
                    global::System.Nullable<decimal> Original_Monocytes, 
                    global::System.Nullable<decimal> Original_Eosinophils, 
                    global::System.Nullable<decimal> Original_Basophils, 
                    global::System.Nullable<decimal> Original_Normoblasts, 
                    global::System.Nullable<decimal> Original_PlasmaCells, 
                    global::System.Nullable<decimal> Original_BoneSize, 
                    int Original_Uni2, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount45, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount46, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount47, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted45, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted46, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted47, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotypedTotal, 
                    int Uni2) {
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BMBsite == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BMBsite));
            }
            if ((BMAspSite == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BMAspSite));
            }
            if ((BMB_HistoExamin == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BMB_HistoExamin));
            }
            if ((BMAspComment == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BMAspComment));
            }
            if ((Blasts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Blasts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Promyelocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Promyelocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Myelocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Myelocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Juvenile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Juvenile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Staff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Staff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Segmented.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Segmented.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Lymphocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Lymphocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Monocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Monocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Eosinophils.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Eosinophils.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Basophils.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Basophils.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Normoblasts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Normoblasts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PlasmaCells.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(PlasmaCells.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((BoneHardness == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BoneHardness));
            }
            if ((BoneSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(BoneSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BMBconclusion == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(BMBconclusion));
            }
            if ((BMAconclusion == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BMAconclusion));
            }
            if ((PhenotypeImmuPhen == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(PhenotypeImmuPhen));
            }
            if ((CommentImmuPhen == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(CommentImmuPhen));
            }
            if ((ConclusionImmuPheno == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ConclusionImmuPheno));
            }
            if ((CytoTestName == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(CytoTestName));
            }
            if ((CytoSpecimen == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(CytoSpecimen));
            }
            if ((CytoChromosomeCount45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(CytoChromosomeCount45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCount46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(CytoChromosomeCount46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCount47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(CytoChromosomeCount47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CytoChromosomeCountTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(CytoChromosomeCountTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(CytoCellsCounted45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(CytoCellsCounted46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(CytoCellsCounted47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsCounted4Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(CytoCellsCounted4Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(CytoCellsPhotographed45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(CytoCellsPhotographed46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographed47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(CytoCellsPhotographed47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsPhotographedTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(CytoCellsPhotographedTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(CytoCellsKayrotyped45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(CytoCellsKayrotyped46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotyped47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(CytoCellsKayrotyped47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CytoCellsKayrotypedTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(CytoCellsKayrotypedTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CytoKaryotype == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(CytoKaryotype));
            }
            if ((CytoInterpretation == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(CytoInterpretation));
            }
            if ((CytoRecommendation == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(CytoRecommendation));
            }
            if ((Original_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Blasts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_Blasts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Promyelocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_Promyelocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Myelocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_Myelocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Juvenile.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_Juvenile.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Staff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_Staff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Segmented.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_Segmented.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Lymphocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_Lymphocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Monocytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_Monocytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Eosinophils.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_Eosinophils.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Basophils.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_Basophils.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Normoblasts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(Original_Normoblasts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_PlasmaCells.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_PlasmaCells.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_BoneSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_BoneSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_Uni2));
            if ((Original_CytoChromosomeCount45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_CytoChromosomeCount45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCount46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_CytoChromosomeCount46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCount47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_CytoChromosomeCount47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoChromosomeCountTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_CytoChromosomeCountTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_CytoCellsCounted45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_CytoCellsCounted46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_CytoCellsCounted47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsCounted4Total.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_CytoCellsCounted4Total.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_CytoCellsPhotographed45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_CytoCellsPhotographed46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographed47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_CytoCellsPhotographed47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsPhotographedTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_CytoCellsPhotographedTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_CytoCellsKayrotyped45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_CytoCellsKayrotyped46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotyped47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_CytoCellsKayrotyped47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_CytoCellsKayrotypedTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_CytoCellsKayrotypedTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((int)(Uni2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    string BMBsite, 
                    string BMAspSite, 
                    string BMB_HistoExamin, 
                    string BMAspComment, 
                    global::System.Nullable<decimal> Blasts, 
                    global::System.Nullable<decimal> Promyelocytes, 
                    global::System.Nullable<decimal> Myelocytes, 
                    global::System.Nullable<decimal> Juvenile, 
                    global::System.Nullable<decimal> Staff, 
                    global::System.Nullable<decimal> Segmented, 
                    global::System.Nullable<decimal> Lymphocytes, 
                    global::System.Nullable<decimal> Monocytes, 
                    global::System.Nullable<decimal> Eosinophils, 
                    global::System.Nullable<decimal> Basophils, 
                    global::System.Nullable<decimal> Normoblasts, 
                    global::System.Nullable<decimal> PlasmaCells, 
                    string BoneHardness, 
                    global::System.Nullable<decimal> BoneSize, 
                    string BMBconclusion, 
                    string BMAconclusion, 
                    string PhenotypeImmuPhen, 
                    string CommentImmuPhen, 
                    string ConclusionImmuPheno, 
                    string CytoTestName, 
                    string CytoSpecimen, 
                    global::System.Nullable<decimal> CytoChromosomeCount45, 
                    global::System.Nullable<decimal> CytoChromosomeCount46, 
                    global::System.Nullable<decimal> CytoChromosomeCount47, 
                    global::System.Nullable<decimal> CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> CytoCellsCounted45, 
                    global::System.Nullable<decimal> CytoCellsCounted46, 
                    global::System.Nullable<decimal> CytoCellsCounted47, 
                    global::System.Nullable<decimal> CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> CytoCellsKayrotypedTotal, 
                    string CytoKaryotype, 
                    string CytoInterpretation, 
                    string CytoRecommendation, 
                    global::System.Nullable<int> Original_ID, 
                    global::System.Nullable<decimal> Original_Blasts, 
                    global::System.Nullable<decimal> Original_Promyelocytes, 
                    global::System.Nullable<decimal> Original_Myelocytes, 
                    global::System.Nullable<decimal> Original_Juvenile, 
                    global::System.Nullable<decimal> Original_Staff, 
                    global::System.Nullable<decimal> Original_Segmented, 
                    global::System.Nullable<decimal> Original_Lymphocytes, 
                    global::System.Nullable<decimal> Original_Monocytes, 
                    global::System.Nullable<decimal> Original_Eosinophils, 
                    global::System.Nullable<decimal> Original_Basophils, 
                    global::System.Nullable<decimal> Original_Normoblasts, 
                    global::System.Nullable<decimal> Original_PlasmaCells, 
                    global::System.Nullable<decimal> Original_BoneSize, 
                    int Original_Uni2, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount45, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount46, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCount47, 
                    global::System.Nullable<decimal> Original_CytoChromosomeCountTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted45, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted46, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted47, 
                    global::System.Nullable<decimal> Original_CytoCellsCounted4Total, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed45, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed46, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographed47, 
                    global::System.Nullable<decimal> Original_CytoCellsPhotographedTotal, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped45, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped46, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotyped47, 
                    global::System.Nullable<decimal> Original_CytoCellsKayrotypedTotal) {
            return this.Update(ID, BMBsite, BMAspSite, BMB_HistoExamin, BMAspComment, Blasts, Promyelocytes, Myelocytes, Juvenile, Staff, Segmented, Lymphocytes, Monocytes, Eosinophils, Basophils, Normoblasts, PlasmaCells, BoneHardness, BoneSize, BMBconclusion, BMAconclusion, PhenotypeImmuPhen, CommentImmuPhen, ConclusionImmuPheno, CytoTestName, CytoSpecimen, CytoChromosomeCount45, CytoChromosomeCount46, CytoChromosomeCount47, CytoChromosomeCountTotal, CytoCellsCounted45, CytoCellsCounted46, CytoCellsCounted47, CytoCellsCounted4Total, CytoCellsPhotographed45, CytoCellsPhotographed46, CytoCellsPhotographed47, CytoCellsPhotographedTotal, CytoCellsKayrotyped45, CytoCellsKayrotyped46, CytoCellsKayrotyped47, CytoCellsKayrotypedTotal, CytoKaryotype, CytoInterpretation, CytoRecommendation, Original_ID, Original_Blasts, Original_Promyelocytes, Original_Myelocytes, Original_Juvenile, Original_Staff, Original_Segmented, Original_Lymphocytes, Original_Monocytes, Original_Eosinophils, Original_Basophils, Original_Normoblasts, Original_PlasmaCells, Original_BoneSize, Original_Uni2, Original_CytoChromosomeCount45, Original_CytoChromosomeCount46, Original_CytoChromosomeCount47, Original_CytoChromosomeCountTotal, Original_CytoCellsCounted45, Original_CytoCellsCounted46, Original_CytoCellsCounted47, Original_CytoCellsCounted4Total, Original_CytoCellsPhotographed45, Original_CytoCellsPhotographed46, Original_CytoCellsPhotographed47, Original_CytoCellsPhotographedTotal, Original_CytoCellsKayrotyped45, Original_CytoCellsKayrotyped46, Original_CytoCellsKayrotyped47, Original_CytoCellsKayrotypedTotal, Original_Uni2);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CulturesResultTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CulturesResultTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CulturesResult";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("CultureUID", "CultureUID");
            tableMapping.ColumnMappings.Add("CulturesResultsUID", "CulturesResultsUID");
            tableMapping.ColumnMappings.Add("DirectFilm", "DirectFilm");
            tableMapping.ColumnMappings.Add("PUS", "PUS");
            tableMapping.ColumnMappings.Add("RBCs", "RBCs");
            tableMapping.ColumnMappings.Add("OrganismUID", "OrganismUID");
            tableMapping.ColumnMappings.Add("Epithelial", "Epithelial");
            tableMapping.ColumnMappings.Add("NotesOrComment", "NotesOrComment");
            tableMapping.ColumnMappings.Add("OtherInfo", "OtherInfo");
            tableMapping.ColumnMappings.Add("CultureCondition", "CultureCondition");
            tableMapping.ColumnMappings.Add("CultureNameForResult", "CultureNameForResult");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CulturesResult] WHERE (((@IsNull_PatientID = 1 AND [PatientID] IS NULL) OR ([PatientID] = @Original_PatientID)) AND ((@IsNull_CultureUID = 1 AND [CultureUID] IS NULL) OR ([CultureUID] = @Original_CultureUID)) AND ([CulturesResultsUID] = @Original_CulturesResultsUID) AND ((@IsNull_OrganismUID = 1 AND [OrganismUID] IS NULL) OR ([OrganismUID] = @Original_OrganismUID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CulturesResult] ([PatientID], [CultureUID], [DirectFilm], [PUS], [RBCs], [OrganismUID], [Epithelial], [NotesOrComment], [OtherInfo], [CultureCondition], [CultureNameForResult]) VALUES (@PatientID, @CultureUID, @DirectFilm, @PUS, @RBCs, @OrganismUID, @Epithelial, @NotesOrComment, @OtherInfo, @CultureCondition, @CultureNameForResult);
SELECT PatientID, CultureUID, CulturesResultsUID, DirectFilm, PUS, RBCs, OrganismUID, Epithelial, NotesOrComment, OtherInfo, CultureCondition, CultureNameForResult FROM CulturesResult WHERE (CulturesResultsUID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DirectFilm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectFilm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBCs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBCs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Epithelial", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Epithelial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotesOrComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotesOrComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureCondition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureNameForResult", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureNameForResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CulturesResult] SET [PatientID] = @PatientID, [CultureUID] = @CultureUID, [DirectFilm] = @DirectFilm, [PUS] = @PUS, [RBCs] = @RBCs, [OrganismUID] = @OrganismUID, [Epithelial] = @Epithelial, [NotesOrComment] = @NotesOrComment, [OtherInfo] = @OtherInfo, [CultureCondition] = @CultureCondition, [CultureNameForResult] = @CultureNameForResult WHERE (((@IsNull_PatientID = 1 AND [PatientID] IS NULL) OR ([PatientID] = @Original_PatientID)) AND ((@IsNull_CultureUID = 1 AND [CultureUID] IS NULL) OR ([CultureUID] = @Original_CultureUID)) AND ([CulturesResultsUID] = @Original_CulturesResultsUID) AND ((@IsNull_OrganismUID = 1 AND [OrganismUID] IS NULL) OR ([OrganismUID] = @Original_OrganismUID)));
SELECT PatientID, CultureUID, CulturesResultsUID, DirectFilm, PUS, RBCs, OrganismUID, Epithelial, NotesOrComment, OtherInfo, CultureCondition, CultureNameForResult FROM CulturesResult WHERE (CulturesResultsUID = @CulturesResultsUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DirectFilm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DirectFilm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBCs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBCs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Epithelial", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Epithelial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NotesOrComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NotesOrComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureCondition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureCondition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureNameForResult", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureNameForResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CulturesResultsUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CulturesResultsUID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CulturesResultsUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PatientID, CultureUID, CulturesResultsUID, DirectFilm, PUS, RBCs, Organism" +
                "UID, Epithelial, NotesOrComment, OtherInfo, CultureCondition, CultureNameForResu" +
                "lt FROM dbo.CulturesResult";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.CulturesResultDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.CulturesResultDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.CulturesResultDataTable dataTable = new FullDataSet.CulturesResultDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.CulturesResultDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CulturesResult");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_PatientID, global::System.Nullable<int> Original_CultureUID, int Original_CulturesResultsUID, global::System.Nullable<int> Original_OrganismUID) {
            if ((Original_PatientID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PatientID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Original_CultureUID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_CultureUID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_CulturesResultsUID));
            if ((Original_OrganismUID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_OrganismUID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> PatientID, global::System.Nullable<int> CultureUID, string DirectFilm, string PUS, string RBCs, global::System.Nullable<int> OrganismUID, string Epithelial, string NotesOrComment, string OtherInfo, string CultureCondition, string CultureNameForResult) {
            if ((PatientID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PatientID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CultureUID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CultureUID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DirectFilm == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DirectFilm));
            }
            if ((PUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PUS));
            }
            if ((RBCs == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RBCs));
            }
            if ((OrganismUID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(OrganismUID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Epithelial == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Epithelial));
            }
            if ((NotesOrComment == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NotesOrComment));
            }
            if ((OtherInfo == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(OtherInfo));
            }
            if ((CultureCondition == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CultureCondition));
            }
            if ((CultureNameForResult == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CultureNameForResult));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> PatientID, 
                    global::System.Nullable<int> CultureUID, 
                    string DirectFilm, 
                    string PUS, 
                    string RBCs, 
                    global::System.Nullable<int> OrganismUID, 
                    string Epithelial, 
                    string NotesOrComment, 
                    string OtherInfo, 
                    string CultureCondition, 
                    string CultureNameForResult, 
                    global::System.Nullable<int> Original_PatientID, 
                    global::System.Nullable<int> Original_CultureUID, 
                    int Original_CulturesResultsUID, 
                    global::System.Nullable<int> Original_OrganismUID, 
                    int CulturesResultsUID) {
            if ((PatientID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PatientID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CultureUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CultureUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DirectFilm == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DirectFilm));
            }
            if ((PUS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PUS));
            }
            if ((RBCs == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(RBCs));
            }
            if ((OrganismUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(OrganismUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Epithelial == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Epithelial));
            }
            if ((NotesOrComment == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NotesOrComment));
            }
            if ((OtherInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(OtherInfo));
            }
            if ((CultureCondition == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CultureCondition));
            }
            if ((CultureNameForResult == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CultureNameForResult));
            }
            if ((Original_PatientID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_PatientID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CultureUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_CultureUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_CulturesResultsUID));
            if ((Original_OrganismUID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_OrganismUID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(CulturesResultsUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> PatientID, global::System.Nullable<int> CultureUID, string DirectFilm, string PUS, string RBCs, global::System.Nullable<int> OrganismUID, string Epithelial, string NotesOrComment, string OtherInfo, string CultureCondition, string CultureNameForResult, global::System.Nullable<int> Original_PatientID, global::System.Nullable<int> Original_CultureUID, int Original_CulturesResultsUID, global::System.Nullable<int> Original_OrganismUID) {
            return this.Update(PatientID, CultureUID, DirectFilm, PUS, RBCs, OrganismUID, Epithelial, NotesOrComment, OtherInfo, CultureCondition, CultureNameForResult, Original_PatientID, Original_CultureUID, Original_CulturesResultsUID, Original_OrganismUID, Original_CulturesResultsUID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CulturesSourceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CulturesSourceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CulturesSource";
            tableMapping.ColumnMappings.Add("CultureUID", "CultureUID");
            tableMapping.ColumnMappings.Add("CultureName", "CultureName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CulturesSource] WHERE (([CultureUID] = @Original_CultureUID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CulturesSource] ([CultureName]) VALUES (@CultureName);\r\nSELECT" +
                " CultureUID, CultureName FROM CulturesSource WHERE (CultureUID = SCOPE_IDENTITY(" +
                "))";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CulturesSource] SET [CultureName] = @CultureName WHERE (([CultureUI" +
                "D] = @Original_CultureUID));\r\nSELECT CultureUID, CultureName FROM CulturesSource" +
                " WHERE (CultureUID = @CultureUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CultureUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CultureUID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CultureUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CultureUID, CultureName FROM dbo.CulturesSource";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.CulturesSourceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.CulturesSourceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.CulturesSourceDataTable dataTable = new FullDataSet.CulturesSourceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.CulturesSourceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CulturesSource");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CultureUID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CultureUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CultureName) {
            if ((CultureName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CultureName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CultureName, int Original_CultureUID, int CultureUID) {
            if ((CultureName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CultureName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_CultureUID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CultureUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CultureName, int Original_CultureUID) {
            return this.Update(CultureName, Original_CultureUID, Original_CultureUID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ImagesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImagesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Images";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Img1", "Img1");
            tableMapping.ColumnMappings.Add("Img2", "Img2");
            tableMapping.ColumnMappings.Add("Img3", "Img3");
            tableMapping.ColumnMappings.Add("Img4", "Img4");
            tableMapping.ColumnMappings.Add("Img5", "Img5");
            tableMapping.ColumnMappings.Add("Img6", "Img6");
            tableMapping.ColumnMappings.Add("Img7", "Img7");
            tableMapping.ColumnMappings.Add("ImgName1", "ImgName1");
            tableMapping.ColumnMappings.Add("ImgName2", "ImgName2");
            tableMapping.ColumnMappings.Add("ImgName3", "ImgName3");
            tableMapping.ColumnMappings.Add("ImgName4", "ImgName4");
            tableMapping.ColumnMappings.Add("ImgName5", "ImgName5");
            tableMapping.ColumnMappings.Add("ImgName6", "ImgName6");
            tableMapping.ColumnMappings.Add("ImgName7", "ImgName7");
            tableMapping.ColumnMappings.Add("Uni", "Uni");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Images] WHERE (((@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @" +
                "Original_ID)) AND ([Uni] = @Original_Uni))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uni", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Images] ([ID], [Img1], [Img2], [Img3], [Img4], [Img5], [Img6], [Img7], [ImgName1], [ImgName2], [ImgName3], [ImgName4], [ImgName5], [ImgName6], [ImgName7]) VALUES (@ID, @Img1, @Img2, @Img3, @Img4, @Img5, @Img6, @Img7, @ImgName1, @ImgName2, @ImgName3, @ImgName4, @ImgName5, @ImgName6, @ImgName7);
SELECT ID, Img1, Img2, Img3, Img4, Img5, Img6, Img7, ImgName1, ImgName2, ImgName3, ImgName4, ImgName5, ImgName6, ImgName7, Uni FROM Images WHERE (Uni = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img1", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img2", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img3", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img4", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img5", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img6", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img7", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Images] SET [ID] = @ID, [Img1] = @Img1, [Img2] = @Img2, [Img3] = @Img3, [Img4] = @Img4, [Img5] = @Img5, [Img6] = @Img6, [Img7] = @Img7, [ImgName1] = @ImgName1, [ImgName2] = @ImgName2, [ImgName3] = @ImgName3, [ImgName4] = @ImgName4, [ImgName5] = @ImgName5, [ImgName6] = @ImgName6, [ImgName7] = @ImgName7 WHERE (((@IsNull_ID = 1 AND [ID] IS NULL) OR ([ID] = @Original_ID)) AND ([Uni] = @Original_Uni));
SELECT ID, Img1, Img2, Img3, Img4, Img5, Img6, Img7, ImgName1, ImgName2, ImgName3, ImgName4, ImgName5, ImgName6, ImgName7, Uni FROM Images WHERE (Uni = @Uni)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img1", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img2", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img3", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img4", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img5", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img6", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Img7", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Img7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImgName7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImgName7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Uni", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Uni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Uni", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Uni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Img1, Img2, Img3, Img4, Img5, Img6, Img7, ImgName1, ImgName2, ImgName3" +
                ", ImgName4, ImgName5, ImgName6, ImgName7, Uni FROM dbo.Images";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ImagesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ImagesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.ImagesDataTable dataTable = new FullDataSet.ImagesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.ImagesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Images");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_ID, int Original_Uni) {
            if ((Original_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Uni));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID, byte[] Img1, byte[] Img2, byte[] Img3, byte[] Img4, byte[] Img5, byte[] Img6, byte[] Img7, string ImgName1, string ImgName2, string ImgName3, string ImgName4, string ImgName5, string ImgName6, string ImgName7) {
            if ((ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Img1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((byte[])(Img1));
            }
            if ((Img2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte[])(Img2));
            }
            if ((Img3 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((byte[])(Img3));
            }
            if ((Img4 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(Img4));
            }
            if ((Img5 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte[])(Img5));
            }
            if ((Img6 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte[])(Img6));
            }
            if ((Img7 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte[])(Img7));
            }
            if ((ImgName1 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ImgName1));
            }
            if ((ImgName2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ImgName2));
            }
            if ((ImgName3 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ImgName3));
            }
            if ((ImgName4 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ImgName4));
            }
            if ((ImgName5 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ImgName5));
            }
            if ((ImgName6 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ImgName6));
            }
            if ((ImgName7 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ImgName7));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    byte[] Img1, 
                    byte[] Img2, 
                    byte[] Img3, 
                    byte[] Img4, 
                    byte[] Img5, 
                    byte[] Img6, 
                    byte[] Img7, 
                    string ImgName1, 
                    string ImgName2, 
                    string ImgName3, 
                    string ImgName4, 
                    string ImgName5, 
                    string ImgName6, 
                    string ImgName7, 
                    global::System.Nullable<int> Original_ID, 
                    int Original_Uni, 
                    int Uni) {
            if ((ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Img1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((byte[])(Img1));
            }
            if ((Img2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte[])(Img2));
            }
            if ((Img3 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((byte[])(Img3));
            }
            if ((Img4 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(Img4));
            }
            if ((Img5 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte[])(Img5));
            }
            if ((Img6 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte[])(Img6));
            }
            if ((Img7 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte[])(Img7));
            }
            if ((ImgName1 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ImgName1));
            }
            if ((ImgName2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ImgName2));
            }
            if ((ImgName3 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ImgName3));
            }
            if ((ImgName4 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ImgName4));
            }
            if ((ImgName5 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ImgName5));
            }
            if ((ImgName6 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ImgName6));
            }
            if ((ImgName7 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ImgName7));
            }
            if ((Original_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Uni));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Uni));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID, 
                    byte[] Img1, 
                    byte[] Img2, 
                    byte[] Img3, 
                    byte[] Img4, 
                    byte[] Img5, 
                    byte[] Img6, 
                    byte[] Img7, 
                    string ImgName1, 
                    string ImgName2, 
                    string ImgName3, 
                    string ImgName4, 
                    string ImgName5, 
                    string ImgName6, 
                    string ImgName7, 
                    global::System.Nullable<int> Original_ID, 
                    int Original_Uni) {
            return this.Update(ID, Img1, Img2, Img3, Img4, Img5, Img6, Img7, ImgName1, ImgName2, ImgName3, ImgName4, ImgName5, ImgName6, ImgName7, Original_ID, Original_Uni, Original_Uni);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ImmunophenotypingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ImmunophenotypingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Immunophenotyping";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("MarkerName", "MarkerName");
            tableMapping.ColumnMappings.Add("Percentage", "Percentage");
            tableMapping.ColumnMappings.Add("TabIDImmun", "TabIDImmun");
            tableMapping.ColumnMappings.Add("Result", "Result");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Immunophenotyping] WHERE (((@IsNull_PatientID = 1 AND [Patient" +
                "ID] IS NULL) OR ([PatientID] = @Original_PatientID)) AND ([TabIDImmun] = @Origin" +
                "al_TabIDImmun))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabIDImmun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabIDImmun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Immunophenotyping] ([PatientID], [MarkerName], [Percentage], [Result]) VALUES (@PatientID, @MarkerName, @Percentage, @Result);
SELECT PatientID, MarkerName, Percentage, TabIDImmun, Result FROM Immunophenotyping WHERE (TabIDImmun = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Percentage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Percentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Immunophenotyping] SET [PatientID] = @PatientID, [MarkerName] = @MarkerName, [Percentage] = @Percentage, [Result] = @Result WHERE (((@IsNull_PatientID = 1 AND [PatientID] IS NULL) OR ([PatientID] = @Original_PatientID)) AND ([TabIDImmun] = @Original_TabIDImmun));
SELECT PatientID, MarkerName, Percentage, TabIDImmun, Result FROM Immunophenotyping WHERE (TabIDImmun = @TabIDImmun)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Percentage", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Percentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Result", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Result", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TabIDImmun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TabIDImmun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TabIDImmun", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TabIDImmun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PatientID, MarkerName, Percentage, TabIDImmun, Result FROM dbo.Immunopheno" +
                "typing";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ImmunophenotypingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ImmunophenotypingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.ImmunophenotypingDataTable dataTable = new FullDataSet.ImmunophenotypingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.ImmunophenotypingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Immunophenotyping");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<int> Original_PatientID, int Original_TabIDImmun) {
            if ((Original_PatientID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_PatientID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_TabIDImmun));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> PatientID, string MarkerName, string Percentage, string Result) {
            if ((PatientID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PatientID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MarkerName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MarkerName));
            }
            if ((Percentage == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Percentage));
            }
            if ((Result == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Result));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> PatientID, string MarkerName, string Percentage, string Result, global::System.Nullable<int> Original_PatientID, int Original_TabIDImmun, int TabIDImmun) {
            if ((PatientID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PatientID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MarkerName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MarkerName));
            }
            if ((Percentage == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Percentage));
            }
            if ((Result == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Result));
            }
            if ((Original_PatientID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_PatientID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_TabIDImmun));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(TabIDImmun));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> PatientID, string MarkerName, string Percentage, string Result, global::System.Nullable<int> Original_PatientID, int Original_TabIDImmun) {
            return this.Update(PatientID, MarkerName, Percentage, Result, Original_PatientID, Original_TabIDImmun, Original_TabIDImmun);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrganismSourceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OrganismSourceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrganismSource";
            tableMapping.ColumnMappings.Add("OrganismUID", "OrganismUID");
            tableMapping.ColumnMappings.Add("OrganismName", "OrganismName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OrganismSource] WHERE (([OrganismUID] = @Original_OrganismUID)" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OrganismSource] ([OrganismName]) VALUES (@OrganismName);\r\nSELE" +
                "CT OrganismUID, OrganismName FROM OrganismSource WHERE (OrganismUID = SCOPE_IDEN" +
                "TITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganismName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OrganismSource] SET [OrganismName] = @OrganismName WHERE (([Organis" +
                "mUID] = @Original_OrganismUID));\r\nSELECT OrganismUID, OrganismName FROM Organism" +
                "Source WHERE (OrganismUID = @OrganismUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganismName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrganismUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganismUID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "OrganismUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT OrganismUID, OrganismName FROM dbo.OrganismSource";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.OrganismSourceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.OrganismSourceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.OrganismSourceDataTable dataTable = new FullDataSet.OrganismSourceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.OrganismSourceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "OrganismSource");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_OrganismUID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_OrganismUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string OrganismName) {
            if ((OrganismName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(OrganismName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OrganismName, int Original_OrganismUID, int OrganismUID) {
            if ((OrganismName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(OrganismName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_OrganismUID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(OrganismUID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string OrganismName, int Original_OrganismUID) {
            return this.Update(OrganismName, Original_OrganismUID, Original_OrganismUID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PatientDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PatientDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PatientDetails";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("Adress", "Adress");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("Smoker", "Smoker");
            tableMapping.ColumnMappings.Add("Pregnant", "Pregnant");
            tableMapping.ColumnMappings.Add("Fasting", "Fasting");
            tableMapping.ColumnMappings.Add("FastingHrs", "FastingHrs");
            tableMapping.ColumnMappings.Add("GlandsMed", "GlandsMed");
            tableMapping.ColumnMappings.Add("GlandsMedName", "GlandsMedName");
            tableMapping.ColumnMappings.Add("Diabetic", "Diabetic");
            tableMapping.ColumnMappings.Add("DiabetusMed", "DiabetusMed");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PatientDetails] WHERE (([PatientID] = @Original_PatientID) AND ((@IsNull_Age = 1 AND [Age] IS NULL) OR ([Age] = @Original_Age)) AND ((@IsNull_VisitDate = 1 AND [VisitDate] IS NULL) OR ([VisitDate] = @Original_VisitDate)) AND ((@IsNull_ResultDate = 1 AND [ResultDate] IS NULL) OR ([ResultDate] = @Original_ResultDate)) AND ((@IsNull_Smoker = 1 AND [Smoker] IS NULL) OR ([Smoker] = @Original_Smoker)) AND ((@IsNull_Pregnant = 1 AND [Pregnant] IS NULL) OR ([Pregnant] = @Original_Pregnant)) AND ((@IsNull_Fasting = 1 AND [Fasting] IS NULL) OR ([Fasting] = @Original_Fasting)) AND ((@IsNull_FastingHrs = 1 AND [FastingHrs] IS NULL) OR ([FastingHrs] = @Original_FastingHrs)) AND ((@IsNull_GlandsMed = 1 AND [GlandsMed] IS NULL) OR ([GlandsMed] = @Original_GlandsMed)) AND ((@IsNull_Diabetic = 1 AND [Diabetic] IS NULL) OR ([Diabetic] = @Original_Diabetic)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisitDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisitDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResultDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResultDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Smoker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Smoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pregnant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregnant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fasting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fasting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FastingHrs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FastingHrs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GlandsMed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GlandsMed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diabetic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diabetic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PatientDetails] ([PatientID], [PName], [DrName], [Age], [AgeType], [Gender], [email], [Adress], [VisitDate], [ResultDate], [Smoker], [Pregnant], [Fasting], [FastingHrs], [GlandsMed], [GlandsMedName], [Diabetic], [DiabetusMed]) VALUES (@PatientID, @PName, @DrName, @Age, @AgeType, @Gender, @email, @Adress, @VisitDate, @ResultDate, @Smoker, @Pregnant, @Fasting, @FastingHrs, @GlandsMed, @GlandsMedName, @Diabetic, @DiabetusMed);
SELECT PatientID, PName, DrName, Age, AgeType, Gender, email, Adress, VisitDate, ResultDate, Smoker, Pregnant, Fasting, FastingHrs, GlandsMed, GlandsMedName, Diabetic, DiabetusMed FROM PatientDetails WHERE (PatientID = @PatientID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Adress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Adress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Smoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregnant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fasting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FastingHrs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlandsMed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlandsMedName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMedName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diabetic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiabetusMed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiabetusMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PatientDetails] SET [PatientID] = @PatientID, [PName] = @PName, [Dr" +
                "Name] = @DrName, [Age] = @Age, [AgeType] = @AgeType, [Gender] = @Gender, [email]" +
                " = @email, [Adress] = @Adress, [VisitDate] = @VisitDate, [ResultDate] = @ResultD" +
                "ate, [Smoker] = @Smoker, [Pregnant] = @Pregnant, [Fasting] = @Fasting, [FastingH" +
                "rs] = @FastingHrs, [GlandsMed] = @GlandsMed, [GlandsMedName] = @GlandsMedName, [" +
                "Diabetic] = @Diabetic, [DiabetusMed] = @DiabetusMed WHERE (([PatientID] = @Origi" +
                "nal_PatientID) AND ((@IsNull_Age = 1 AND [Age] IS NULL) OR ([Age] = @Original_Ag" +
                "e)) AND ((@IsNull_VisitDate = 1 AND [VisitDate] IS NULL) OR ([VisitDate] = @Orig" +
                "inal_VisitDate)) AND ((@IsNull_ResultDate = 1 AND [ResultDate] IS NULL) OR ([Res" +
                "ultDate] = @Original_ResultDate)) AND ((@IsNull_Smoker = 1 AND [Smoker] IS NULL)" +
                " OR ([Smoker] = @Original_Smoker)) AND ((@IsNull_Pregnant = 1 AND [Pregnant] IS " +
                "NULL) OR ([Pregnant] = @Original_Pregnant)) AND ((@IsNull_Fasting = 1 AND [Fasti" +
                "ng] IS NULL) OR ([Fasting] = @Original_Fasting)) AND ((@IsNull_FastingHrs = 1 AN" +
                "D [FastingHrs] IS NULL) OR ([FastingHrs] = @Original_FastingHrs)) AND ((@IsNull_" +
                "GlandsMed = 1 AND [GlandsMed] IS NULL) OR ([GlandsMed] = @Original_GlandsMed)) A" +
                "ND ((@IsNull_Diabetic = 1 AND [Diabetic] IS NULL) OR ([Diabetic] = @Original_Dia" +
                "betic)));\r\nSELECT PatientID, PName, DrName, Age, AgeType, Gender, email, Adress," +
                " VisitDate, ResultDate, Smoker, Pregnant, Fasting, FastingHrs, GlandsMed, Glands" +
                "MedName, Diabetic, DiabetusMed FROM PatientDetails WHERE (PatientID = @PatientID" +
                ")";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DrName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DrName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Adress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Adress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisitDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResultDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Smoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregnant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fasting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FastingHrs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlandsMed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlandsMedName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMedName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Diabetic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DiabetusMed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DiabetusMed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Age", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisitDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisitDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisitDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResultDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResultDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResultDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Smoker", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Smoker", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Smoker", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pregnant", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregnant", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregnant", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fasting", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fasting", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fasting", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FastingHrs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FastingHrs", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FastingHrs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GlandsMed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GlandsMed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlandsMed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Diabetic", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Diabetic", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Diabetic", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PatientID, PName, DrName, Age, AgeType, Gender, email, Adress, VisitDate, " +
                "ResultDate, Smoker, Pregnant, Fasting, FastingHrs, GlandsMed, GlandsMedName, Dia" +
                "betic, DiabetusMed FROM dbo.PatientDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.PatientDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.PatientDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.PatientDetailsDataTable dataTable = new FullDataSet.PatientDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet.PatientDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FullDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PatientDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PatientID, global::System.Nullable<decimal> Original_Age, global::System.Nullable<global::System.DateTime> Original_VisitDate, global::System.Nullable<global::System.DateTime> Original_ResultDate, global::System.Nullable<bool> Original_Smoker, global::System.Nullable<bool> Original_Pregnant, global::System.Nullable<bool> Original_Fasting, global::System.Nullable<float> Original_FastingHrs, global::System.Nullable<bool> Original_GlandsMed, global::System.Nullable<bool> Original_Diabetic) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PatientID));
            if ((Original_Age.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Age.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_VisitDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_VisitDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ResultDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ResultDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Smoker.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_Smoker.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Pregnant.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_Pregnant.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Fasting.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_Fasting.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_FastingHrs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_FastingHrs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_GlandsMed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_GlandsMed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Diabetic.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Diabetic.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int PatientID, 
                    string PName, 
                    string DrName, 
                    global::System.Nullable<decimal> Age, 
                    string AgeType, 
                    string Gender, 
                    string email, 
                    string Adress, 
                    global::System.Nullable<global::System.DateTime> VisitDate, 
                    global::System.Nullable<global::System.DateTime> ResultDate, 
                    global::System.Nullable<bool> Smoker, 
                    global::System.Nullable<bool> Pregnant, 
                    global::System.Nullable<bool> Fasting, 
                    global::System.Nullable<float> FastingHrs, 
                    global::System.Nullable<bool> GlandsMed, 
                    string GlandsMedName, 
                    global::System.Nullable<bool> Diabetic, 
                    string DiabetusMed) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(PatientID));
            if ((PName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PName));
            }
            if ((DrName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DrName));
            }
            if ((Age.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Age.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AgeType == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(AgeType));
            }
            if ((Gender == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Gender));
            }
            if ((email == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(email));
            }
            if ((Adress == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Adress));
            }
            if ((VisitDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(VisitDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ResultDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ResultDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Smoker.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(Smoker.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Pregnant.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Pregnant.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Fasting.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Fasting.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FastingHrs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((float)(FastingHrs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((GlandsMed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(GlandsMed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GlandsMedName == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(GlandsMedName));
            }
            if ((Diabetic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(Diabetic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DiabetusMed == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DiabetusMed));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int PatientID, 
                    string PName, 
                    string DrName, 
                    global::System.Nullable<decimal> Age, 
                    string AgeType, 
                    string Gender, 
                    string email, 
                    string Adress, 
                    global::System.Nullable<global::System.DateTime> VisitDate, 
                    global::System.Nullable<global::System.DateTime> ResultDate, 
                    global::System.Nullable<bool> Smoker, 
                    global::System.Nullable<bool> Pregnant, 
                    global::System.Nullable<bool> Fasting, 
                    global::System.Nullable<float> FastingHrs, 
                    global::System.Nullable<bool> GlandsMed, 
                    string GlandsMedName, 
                    global::System.Nullable<bool> Diabetic, 
                    string DiabetusMed, 
                    int Original_PatientID, 
                    global::System.Nullable<decimal> Original_Age, 
                    global::System.Nullable<global::System.DateTime> Original_VisitDate, 
                    global::System.Nullable<global::System.DateTime> Original_ResultDate, 
                    global::System.Nullable<bool> Original_Smoker, 
                    global::System.Nullable<bool> Original_Pregnant, 
                    global::System.Nullable<bool> Original_Fasting, 
                    global::System.Nullable<float> Original_FastingHrs, 
                    global::System.Nullable<bool> Original_GlandsMed, 
                    global::System.Nullable<bool> Original_Diabetic) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(PatientID));
            if ((PName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PName));
            }
            if ((DrName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DrName));
            }
            if ((Age.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Age.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AgeType == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(AgeType));
            }
            if ((Gender == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Gender));
            }
            if ((email == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(email));
            }
            if ((Adress == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Adress));
            }
            if ((VisitDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(VisitDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ResultDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ResultDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Smoker.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Smoker.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Pregnant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Pregnant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Fasting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Fasting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FastingHrs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(FastingHrs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((GlandsMed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(GlandsMed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GlandsMedName == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(GlandsMedName));
            }
            if ((Diabetic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Diabetic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DiabetusMed == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DiabetusMed));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_PatientID));
            if ((Original_Age.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Age.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_VisitDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_VisitDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ResultDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_ResultDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Smoker.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_Smoker.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Pregnant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Original_Pregnant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Fasting.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_Fasting.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_FastingHrs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(Original_FastingHrs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_GlandsMed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_GlandsMed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Diabetic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_Diabetic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PName, 
                    string DrName, 
                    global::System.Nullable<decimal> Age, 
                    string AgeType, 
                    string Gender, 
                    string email, 
                    string Adress, 
                    global::System.Nullable<global::System.DateTime> VisitDate, 
                    global::System.Nullable<global::System.DateTime> ResultDate, 
                    global::System.Nullable<bool> Smoker, 
                    global::System.Nullable<bool> Pregnant, 
                    global::System.Nullable<bool> Fasting, 
                    global::System.Nullable<float> FastingHrs, 
                    global::System.Nullable<bool> GlandsMed, 
                    string GlandsMedName, 
                    global::System.Nullable<bool> Diabetic, 
                    string DiabetusMed, 
                    int Original_PatientID, 
                    global::System.Nullable<decimal> Original_Age, 
                    global::System.Nullable<global::System.DateTime> Original_VisitDate, 
                    global::System.Nullable<global::System.DateTime> Original_ResultDate, 
                    global::System.Nullable<bool> Original_Smoker, 
                    global::System.Nullable<bool> Original_Pregnant, 
                    global::System.Nullable<bool> Original_Fasting, 
                    global::System.Nullable<float> Original_FastingHrs, 
                    global::System.Nullable<bool> Original_GlandsMed, 
                    global::System.Nullable<bool> Original_Diabetic) {
            return this.Update(Original_PatientID, PName, DrName, Age, AgeType, Gender, email, Adress, VisitDate, ResultDate, Smoker, Pregnant, Fasting, FastingHrs, GlandsMed, GlandsMedName, Diabetic, DiabetusMed, Original_PatientID, Original_Age, Original_VisitDate, Original_ResultDate, Original_Smoker, Original_Pregnant, Original_Fasting, Original_FastingHrs, Original_GlandsMed, Original_Diabetic);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Select_ImmunophenotypingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Select_ImmunophenotypingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Select_Immunophenotyping";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("PhenotypeImmuPhen", "PhenotypeImmuPhen");
            tableMapping.ColumnMappings.Add("CommentImmuPhen", "CommentImmuPhen");
            tableMapping.ColumnMappings.Add("ConclusionImmuPheno", "ConclusionImmuPheno");
            tableMapping.ColumnMappings.Add("MarkerName", "MarkerName");
            tableMapping.ColumnMappings.Add("Percentage", "Percentage");
            tableMapping.ColumnMappings.Add("Result", "Result");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PatientID, PName, DrName, Age, AgeType, VisitDate, ResultDate, PhenotypeIm" +
                "muPhen, CommentImmuPhen, ConclusionImmuPheno, MarkerName, Percentage, Result FRO" +
                "M dbo.Select_Immunophenotyping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.Select_ImmunophenotypingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.Select_ImmunophenotypingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.Select_ImmunophenotypingDataTable dataTable = new FullDataSet.Select_ImmunophenotypingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectBMAsp_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectBMAsp_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectBMAsp_DATA";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BMBsite", "BMBsite");
            tableMapping.ColumnMappings.Add("BMAspSite", "BMAspSite");
            tableMapping.ColumnMappings.Add("BMB_HistoExamin", "BMB_HistoExamin");
            tableMapping.ColumnMappings.Add("BMAspComment", "BMAspComment");
            tableMapping.ColumnMappings.Add("Blasts", "Blasts");
            tableMapping.ColumnMappings.Add("Promyelocytes", "Promyelocytes");
            tableMapping.ColumnMappings.Add("Myelocytes", "Myelocytes");
            tableMapping.ColumnMappings.Add("Juvenile", "Juvenile");
            tableMapping.ColumnMappings.Add("Staff", "Staff");
            tableMapping.ColumnMappings.Add("Segmented", "Segmented");
            tableMapping.ColumnMappings.Add("Lymphocytes", "Lymphocytes");
            tableMapping.ColumnMappings.Add("Monocytes", "Monocytes");
            tableMapping.ColumnMappings.Add("Eosinophils", "Eosinophils");
            tableMapping.ColumnMappings.Add("Basophils", "Basophils");
            tableMapping.ColumnMappings.Add("Normoblasts", "Normoblasts");
            tableMapping.ColumnMappings.Add("PlasmaCells", "PlasmaCells");
            tableMapping.ColumnMappings.Add("BoneHardness", "BoneHardness");
            tableMapping.ColumnMappings.Add("BoneSize", "BoneSize");
            tableMapping.ColumnMappings.Add("BMBconclusion", "BMBconclusion");
            tableMapping.ColumnMappings.Add("BMAconclusion", "BMAconclusion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PatientID, PName, DrName, Age, AgeType, Gender, VisitDate, ResultDate, ID, BMBsite, BMAspSite, BMB_HistoExamin, BMAspComment, Blasts, Promyelocytes, Myelocytes, Juvenile, Staff, Segmented, Lymphocytes, Monocytes, Eosinophils, Basophils, Normoblasts, PlasmaCells, BoneHardness, BoneSize, BMBconclusion, BMAconclusion FROM dbo.SelectBMAsp_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.SelectBMAsp_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.SelectBMAsp_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.SelectBMAsp_DATADataTable dataTable = new FullDataSet.SelectBMAsp_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectBMB_DATATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectBMB_DATATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectBMB_DATA";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("Adress", "Adress");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("Smoker", "Smoker");
            tableMapping.ColumnMappings.Add("Pregnant", "Pregnant");
            tableMapping.ColumnMappings.Add("Fasting", "Fasting");
            tableMapping.ColumnMappings.Add("FastingHrs", "FastingHrs");
            tableMapping.ColumnMappings.Add("GlandsMed", "GlandsMed");
            tableMapping.ColumnMappings.Add("GlandsMedName", "GlandsMedName");
            tableMapping.ColumnMappings.Add("Diabetic", "Diabetic");
            tableMapping.ColumnMappings.Add("DiabetusMed", "DiabetusMed");
            tableMapping.ColumnMappings.Add("BMBsite", "BMBsite");
            tableMapping.ColumnMappings.Add("BMB_HistoExamin", "BMB_HistoExamin");
            tableMapping.ColumnMappings.Add("BoneSize", "BoneSize");
            tableMapping.ColumnMappings.Add("BoneHardness", "BoneHardness");
            tableMapping.ColumnMappings.Add("BMBconclusion", "BMBconclusion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PatientID, PName, DrName, Age, AgeType, Gender, email, Adress, VisitDate, ResultDate, Smoker, Pregnant, Fasting, FastingHrs, GlandsMed, GlandsMedName, Diabetic, DiabetusMed, BMBsite, BMB_HistoExamin, BoneSize, BoneHardness, BMBconclusion FROM dbo.SelectBMB_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.SelectBMB_DATADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.SelectBMB_DATADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.SelectBMB_DATADataTable dataTable = new FullDataSet.SelectBMB_DATADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectBoneMarrowImagesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectBoneMarrowImagesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectBoneMarrowImages";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Img1", "Img1");
            tableMapping.ColumnMappings.Add("Img2", "Img2");
            tableMapping.ColumnMappings.Add("Img3", "Img3");
            tableMapping.ColumnMappings.Add("Img4", "Img4");
            tableMapping.ColumnMappings.Add("Img5", "Img5");
            tableMapping.ColumnMappings.Add("Img6", "Img6");
            tableMapping.ColumnMappings.Add("Img7", "Img7");
            tableMapping.ColumnMappings.Add("ImgName1", "ImgName1");
            tableMapping.ColumnMappings.Add("ImgName2", "ImgName2");
            tableMapping.ColumnMappings.Add("ImgName3", "ImgName3");
            tableMapping.ColumnMappings.Add("ImgName4", "ImgName4");
            tableMapping.ColumnMappings.Add("ImgName5", "ImgName5");
            tableMapping.ColumnMappings.Add("ImgName6", "ImgName6");
            tableMapping.ColumnMappings.Add("ImgName7", "ImgName7");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PatientID, PName, DrName, ID, Img1, Img2, Img3, Img4, Img5, Img6, Img7, Im" +
                "gName1, ImgName2, ImgName3, ImgName4, ImgName5, ImgName6, ImgName7, VisitDate, R" +
                "esultDate FROM dbo.SelectBoneMarrowImages";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.SelectBoneMarrowImagesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.SelectBoneMarrowImagesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.SelectBoneMarrowImagesDataTable dataTable = new FullDataSet.SelectBoneMarrowImagesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectCytogeneticsDataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectCytogeneticsDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectCytogeneticsData";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("CytoTestName", "CytoTestName");
            tableMapping.ColumnMappings.Add("CytoSpecimen", "CytoSpecimen");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount45", "CytoChromosomeCount45");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount46", "CytoChromosomeCount46");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount47", "CytoChromosomeCount47");
            tableMapping.ColumnMappings.Add("CytoChromosomeCountTotal", "CytoChromosomeCountTotal");
            tableMapping.ColumnMappings.Add("CytoCellsCounted45", "CytoCellsCounted45");
            tableMapping.ColumnMappings.Add("CytoCellsCounted46", "CytoCellsCounted46");
            tableMapping.ColumnMappings.Add("CytoCellsCounted47", "CytoCellsCounted47");
            tableMapping.ColumnMappings.Add("CytoCellsCounted4Total", "CytoCellsCounted4Total");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed45", "CytoCellsPhotographed45");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed46", "CytoCellsPhotographed46");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed47", "CytoCellsPhotographed47");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographedTotal", "CytoCellsPhotographedTotal");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped45", "CytoCellsKayrotyped45");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped46", "CytoCellsKayrotyped46");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped47", "CytoCellsKayrotyped47");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotypedTotal", "CytoCellsKayrotypedTotal");
            tableMapping.ColumnMappings.Add("CytoKaryotype", "CytoKaryotype");
            tableMapping.ColumnMappings.Add("CytoInterpretation", "CytoInterpretation");
            tableMapping.ColumnMappings.Add("CytoRecommendation", "CytoRecommendation");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PatientID, PName, DrName, Age, AgeType, Gender, VisitDate, ResultDate, CytoTestName, CytoSpecimen, CytoChromosomeCount45, CytoChromosomeCount46, CytoChromosomeCount47, CytoChromosomeCountTotal, CytoCellsCounted45, CytoCellsCounted46, CytoCellsCounted47, CytoCellsCounted4Total, CytoCellsPhotographed45, CytoCellsPhotographed46, CytoCellsPhotographed47, CytoCellsPhotographedTotal, CytoCellsKayrotyped45, CytoCellsKayrotyped46, CytoCellsKayrotyped47, CytoCellsKayrotypedTotal, CytoKaryotype, CytoInterpretation, CytoRecommendation FROM dbo.SelectCytogeneticsData";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.SelectCytogeneticsDataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.SelectCytogeneticsDataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FullDataSet.SelectCytogeneticsDataDataTable dataTable = new FullDataSet.SelectCytogeneticsDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProcSelectBMAsp_DataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProcSelectBMAsp_DataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProcSelectBMAsp_Data";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("Adress", "Adress");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("Smoker", "Smoker");
            tableMapping.ColumnMappings.Add("Pregnant", "Pregnant");
            tableMapping.ColumnMappings.Add("Fasting", "Fasting");
            tableMapping.ColumnMappings.Add("FastingHrs", "FastingHrs");
            tableMapping.ColumnMappings.Add("GlandsMed", "GlandsMed");
            tableMapping.ColumnMappings.Add("GlandsMedName", "GlandsMedName");
            tableMapping.ColumnMappings.Add("Diabetic", "Diabetic");
            tableMapping.ColumnMappings.Add("DiabetusMed", "DiabetusMed");
            tableMapping.ColumnMappings.Add("BMAspSite", "BMAspSite");
            tableMapping.ColumnMappings.Add("BMAspComment", "BMAspComment");
            tableMapping.ColumnMappings.Add("Blasts", "Blasts");
            tableMapping.ColumnMappings.Add("Promyelocytes", "Promyelocytes");
            tableMapping.ColumnMappings.Add("Myelocytes", "Myelocytes");
            tableMapping.ColumnMappings.Add("Juvenile", "Juvenile");
            tableMapping.ColumnMappings.Add("Staff", "Staff");
            tableMapping.ColumnMappings.Add("Segmented", "Segmented");
            tableMapping.ColumnMappings.Add("Lymphocytes", "Lymphocytes");
            tableMapping.ColumnMappings.Add("Monocytes", "Monocytes");
            tableMapping.ColumnMappings.Add("Eosinophils", "Eosinophils");
            tableMapping.ColumnMappings.Add("Basophils", "Basophils");
            tableMapping.ColumnMappings.Add("Normoblasts", "Normoblasts");
            tableMapping.ColumnMappings.Add("PlasmaCells", "PlasmaCells");
            tableMapping.ColumnMappings.Add("BMAconclusion", "BMAconclusion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProcSelectBMAsp_Data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ProcSelectBMAsp_DataDataTable dataTable, global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ProcSelectBMAsp_DataDataTable GetData(global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FullDataSet.ProcSelectBMAsp_DataDataTable dataTable = new FullDataSet.ProcSelectBMAsp_DataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProcSelectBMB_DataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProcSelectBMB_DataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProcSelectBMB_Data";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("Adress", "Adress");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("Smoker", "Smoker");
            tableMapping.ColumnMappings.Add("Pregnant", "Pregnant");
            tableMapping.ColumnMappings.Add("Fasting", "Fasting");
            tableMapping.ColumnMappings.Add("FastingHrs", "FastingHrs");
            tableMapping.ColumnMappings.Add("GlandsMed", "GlandsMed");
            tableMapping.ColumnMappings.Add("GlandsMedName", "GlandsMedName");
            tableMapping.ColumnMappings.Add("Diabetic", "Diabetic");
            tableMapping.ColumnMappings.Add("DiabetusMed", "DiabetusMed");
            tableMapping.ColumnMappings.Add("BMBsite", "BMBsite");
            tableMapping.ColumnMappings.Add("BMB_HistoExamin", "BMB_HistoExamin");
            tableMapping.ColumnMappings.Add("BoneSize", "BoneSize");
            tableMapping.ColumnMappings.Add("BoneHardness", "BoneHardness");
            tableMapping.ColumnMappings.Add("BMBconclusion", "BMBconclusion");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProcSelectBMB_Data";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ProcSelectBMB_DataDataTable dataTable, global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ProcSelectBMB_DataDataTable GetData(global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FullDataSet.ProcSelectBMB_DataDataTable dataTable = new FullDataSet.ProcSelectBMB_DataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProcSelectBMimagesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProcSelectBMimagesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProcSelectBMimages";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Img1", "Img1");
            tableMapping.ColumnMappings.Add("Img2", "Img2");
            tableMapping.ColumnMappings.Add("Img3", "Img3");
            tableMapping.ColumnMappings.Add("Img4", "Img4");
            tableMapping.ColumnMappings.Add("Img5", "Img5");
            tableMapping.ColumnMappings.Add("Img6", "Img6");
            tableMapping.ColumnMappings.Add("Img7", "Img7");
            tableMapping.ColumnMappings.Add("ImgName1", "ImgName1");
            tableMapping.ColumnMappings.Add("ImgName2", "ImgName2");
            tableMapping.ColumnMappings.Add("ImgName3", "ImgName3");
            tableMapping.ColumnMappings.Add("ImgName4", "ImgName4");
            tableMapping.ColumnMappings.Add("ImgName5", "ImgName5");
            tableMapping.ColumnMappings.Add("ImgName6", "ImgName6");
            tableMapping.ColumnMappings.Add("ImgName7", "ImgName7");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProcSelectBMimages";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ProcSelectBMimagesDataTable dataTable, global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ProcSelectBMimagesDataTable GetData(global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FullDataSet.ProcSelectBMimagesDataTable dataTable = new FullDataSet.ProcSelectBMimagesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProcSelectCytogeneticsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProcSelectCytogeneticsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProcSelectCytogenetics";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("CytoTestName", "CytoTestName");
            tableMapping.ColumnMappings.Add("CytoSpecimen", "CytoSpecimen");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount45", "CytoChromosomeCount45");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount46", "CytoChromosomeCount46");
            tableMapping.ColumnMappings.Add("CytoChromosomeCount47", "CytoChromosomeCount47");
            tableMapping.ColumnMappings.Add("CytoChromosomeCountTotal", "CytoChromosomeCountTotal");
            tableMapping.ColumnMappings.Add("CytoCellsCounted45", "CytoCellsCounted45");
            tableMapping.ColumnMappings.Add("CytoCellsCounted46", "CytoCellsCounted46");
            tableMapping.ColumnMappings.Add("CytoCellsCounted47", "CytoCellsCounted47");
            tableMapping.ColumnMappings.Add("CytoCellsCounted4Total", "CytoCellsCounted4Total");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed45", "CytoCellsPhotographed45");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed46", "CytoCellsPhotographed46");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographed47", "CytoCellsPhotographed47");
            tableMapping.ColumnMappings.Add("CytoCellsPhotographedTotal", "CytoCellsPhotographedTotal");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped45", "CytoCellsKayrotyped45");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped46", "CytoCellsKayrotyped46");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotyped47", "CytoCellsKayrotyped47");
            tableMapping.ColumnMappings.Add("CytoCellsKayrotypedTotal", "CytoCellsKayrotypedTotal");
            tableMapping.ColumnMappings.Add("CytoKaryotype", "CytoKaryotype");
            tableMapping.ColumnMappings.Add("CytoInterpretation", "CytoInterpretation");
            tableMapping.ColumnMappings.Add("CytoRecommendation", "CytoRecommendation");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProcSelectCytogenetics";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ProcSelectCytogeneticsDataTable dataTable, global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ProcSelectCytogeneticsDataTable GetData(global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FullDataSet.ProcSelectCytogeneticsDataTable dataTable = new FullDataSet.ProcSelectCytogeneticsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProcSelectImmunophenotypingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProcSelectImmunophenotypingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProcSelectImmunophenotyping";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("PName", "PName");
            tableMapping.ColumnMappings.Add("DrName", "DrName");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("AgeType", "AgeType");
            tableMapping.ColumnMappings.Add("VisitDate", "VisitDate");
            tableMapping.ColumnMappings.Add("ResultDate", "ResultDate");
            tableMapping.ColumnMappings.Add("PhenotypeImmuPhen", "PhenotypeImmuPhen");
            tableMapping.ColumnMappings.Add("CommentImmuPhen", "CommentImmuPhen");
            tableMapping.ColumnMappings.Add("ConclusionImmuPheno", "ConclusionImmuPheno");
            tableMapping.ColumnMappings.Add("MarkerName", "MarkerName");
            tableMapping.ColumnMappings.Add("Percentage", "Percentage");
            tableMapping.ColumnMappings.Add("Result", "Result");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProcSelectImmunophenotyping";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FullDataSet.ProcSelectImmunophenotypingDataTable dataTable, global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FullDataSet.ProcSelectImmunophenotypingDataTable GetData(global::System.Nullable<int> PID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FullDataSet.ProcSelectImmunophenotypingDataTable dataTable = new FullDataSet.ProcSelectImmunophenotypingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "dbo.ProcDeletePateint_Data";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int ProcDeletePateint_Data(global::System.Nullable<int> PID) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((PID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(PID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AntibioticResultTableAdapter _antibioticResultTableAdapter;
        
        private AntibioticsSourceTableAdapter _antibioticsSourceTableAdapter;
        
        private BoneMarrowResultsTableAdapter _boneMarrowResultsTableAdapter;
        
        private CulturesResultTableAdapter _culturesResultTableAdapter;
        
        private CulturesSourceTableAdapter _culturesSourceTableAdapter;
        
        private ImagesTableAdapter _imagesTableAdapter;
        
        private ImmunophenotypingTableAdapter _immunophenotypingTableAdapter;
        
        private OrganismSourceTableAdapter _organismSourceTableAdapter;
        
        private PatientDetailsTableAdapter _patientDetailsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AntibioticResultTableAdapter AntibioticResultTableAdapter {
            get {
                return this._antibioticResultTableAdapter;
            }
            set {
                this._antibioticResultTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AntibioticsSourceTableAdapter AntibioticsSourceTableAdapter {
            get {
                return this._antibioticsSourceTableAdapter;
            }
            set {
                this._antibioticsSourceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BoneMarrowResultsTableAdapter BoneMarrowResultsTableAdapter {
            get {
                return this._boneMarrowResultsTableAdapter;
            }
            set {
                this._boneMarrowResultsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CulturesResultTableAdapter CulturesResultTableAdapter {
            get {
                return this._culturesResultTableAdapter;
            }
            set {
                this._culturesResultTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CulturesSourceTableAdapter CulturesSourceTableAdapter {
            get {
                return this._culturesSourceTableAdapter;
            }
            set {
                this._culturesSourceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ImagesTableAdapter ImagesTableAdapter {
            get {
                return this._imagesTableAdapter;
            }
            set {
                this._imagesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ImmunophenotypingTableAdapter ImmunophenotypingTableAdapter {
            get {
                return this._immunophenotypingTableAdapter;
            }
            set {
                this._immunophenotypingTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OrganismSourceTableAdapter OrganismSourceTableAdapter {
            get {
                return this._organismSourceTableAdapter;
            }
            set {
                this._organismSourceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PatientDetailsTableAdapter PatientDetailsTableAdapter {
            get {
                return this._patientDetailsTableAdapter;
            }
            set {
                this._patientDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._antibioticResultTableAdapter != null) 
                            && (this._antibioticResultTableAdapter.Connection != null))) {
                    return this._antibioticResultTableAdapter.Connection;
                }
                if (((this._antibioticsSourceTableAdapter != null) 
                            && (this._antibioticsSourceTableAdapter.Connection != null))) {
                    return this._antibioticsSourceTableAdapter.Connection;
                }
                if (((this._boneMarrowResultsTableAdapter != null) 
                            && (this._boneMarrowResultsTableAdapter.Connection != null))) {
                    return this._boneMarrowResultsTableAdapter.Connection;
                }
                if (((this._culturesResultTableAdapter != null) 
                            && (this._culturesResultTableAdapter.Connection != null))) {
                    return this._culturesResultTableAdapter.Connection;
                }
                if (((this._culturesSourceTableAdapter != null) 
                            && (this._culturesSourceTableAdapter.Connection != null))) {
                    return this._culturesSourceTableAdapter.Connection;
                }
                if (((this._imagesTableAdapter != null) 
                            && (this._imagesTableAdapter.Connection != null))) {
                    return this._imagesTableAdapter.Connection;
                }
                if (((this._immunophenotypingTableAdapter != null) 
                            && (this._immunophenotypingTableAdapter.Connection != null))) {
                    return this._immunophenotypingTableAdapter.Connection;
                }
                if (((this._organismSourceTableAdapter != null) 
                            && (this._organismSourceTableAdapter.Connection != null))) {
                    return this._organismSourceTableAdapter.Connection;
                }
                if (((this._patientDetailsTableAdapter != null) 
                            && (this._patientDetailsTableAdapter.Connection != null))) {
                    return this._patientDetailsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._antibioticResultTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._antibioticsSourceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._boneMarrowResultsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._culturesResultTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._culturesSourceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._imagesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._immunophenotypingTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._organismSourceTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._patientDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(FullDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._culturesSourceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CulturesSource.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._culturesSourceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._organismSourceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OrganismSource.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._organismSourceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._patientDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PatientDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._patientDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._immunophenotypingTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Immunophenotyping.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._immunophenotypingTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._imagesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Images.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._imagesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._antibioticResultTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AntibioticResult.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._antibioticResultTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._boneMarrowResultsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BoneMarrowResults.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._boneMarrowResultsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._culturesResultTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CulturesResult.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._culturesResultTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._antibioticsSourceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AntibioticsSource.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._antibioticsSourceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(FullDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._culturesSourceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CulturesSource.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._culturesSourceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._organismSourceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OrganismSource.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._organismSourceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._patientDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PatientDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._patientDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._immunophenotypingTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Immunophenotyping.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._immunophenotypingTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._imagesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Images.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._imagesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._antibioticResultTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AntibioticResult.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._antibioticResultTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._boneMarrowResultsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BoneMarrowResults.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._boneMarrowResultsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._culturesResultTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CulturesResult.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._culturesResultTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._antibioticsSourceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AntibioticsSource.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._antibioticsSourceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(FullDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._antibioticsSourceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AntibioticsSource.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._antibioticsSourceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._culturesResultTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CulturesResult.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._culturesResultTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._boneMarrowResultsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BoneMarrowResults.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._boneMarrowResultsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._antibioticResultTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AntibioticResult.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._antibioticResultTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._imagesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Images.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._imagesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._immunophenotypingTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Immunophenotyping.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._immunophenotypingTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._patientDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PatientDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._patientDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._organismSourceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OrganismSource.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._organismSourceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._culturesSourceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CulturesSource.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._culturesSourceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(FullDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._antibioticResultTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._antibioticResultTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._antibioticsSourceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._antibioticsSourceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._boneMarrowResultsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._boneMarrowResultsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._culturesResultTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._culturesResultTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._culturesSourceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._culturesSourceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._imagesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._imagesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._immunophenotypingTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._immunophenotypingTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._organismSourceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._organismSourceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._patientDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._patientDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._antibioticResultTableAdapter != null)) {
                    revertConnections.Add(this._antibioticResultTableAdapter, this._antibioticResultTableAdapter.Connection);
                    this._antibioticResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._antibioticResultTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._antibioticResultTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._antibioticResultTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._antibioticResultTableAdapter.Adapter);
                    }
                }
                if ((this._antibioticsSourceTableAdapter != null)) {
                    revertConnections.Add(this._antibioticsSourceTableAdapter, this._antibioticsSourceTableAdapter.Connection);
                    this._antibioticsSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._antibioticsSourceTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._antibioticsSourceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._antibioticsSourceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._antibioticsSourceTableAdapter.Adapter);
                    }
                }
                if ((this._boneMarrowResultsTableAdapter != null)) {
                    revertConnections.Add(this._boneMarrowResultsTableAdapter, this._boneMarrowResultsTableAdapter.Connection);
                    this._boneMarrowResultsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._boneMarrowResultsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._boneMarrowResultsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._boneMarrowResultsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._boneMarrowResultsTableAdapter.Adapter);
                    }
                }
                if ((this._culturesResultTableAdapter != null)) {
                    revertConnections.Add(this._culturesResultTableAdapter, this._culturesResultTableAdapter.Connection);
                    this._culturesResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._culturesResultTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._culturesResultTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._culturesResultTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._culturesResultTableAdapter.Adapter);
                    }
                }
                if ((this._culturesSourceTableAdapter != null)) {
                    revertConnections.Add(this._culturesSourceTableAdapter, this._culturesSourceTableAdapter.Connection);
                    this._culturesSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._culturesSourceTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._culturesSourceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._culturesSourceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._culturesSourceTableAdapter.Adapter);
                    }
                }
                if ((this._imagesTableAdapter != null)) {
                    revertConnections.Add(this._imagesTableAdapter, this._imagesTableAdapter.Connection);
                    this._imagesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._imagesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._imagesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._imagesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._imagesTableAdapter.Adapter);
                    }
                }
                if ((this._immunophenotypingTableAdapter != null)) {
                    revertConnections.Add(this._immunophenotypingTableAdapter, this._immunophenotypingTableAdapter.Connection);
                    this._immunophenotypingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._immunophenotypingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._immunophenotypingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._immunophenotypingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._immunophenotypingTableAdapter.Adapter);
                    }
                }
                if ((this._organismSourceTableAdapter != null)) {
                    revertConnections.Add(this._organismSourceTableAdapter, this._organismSourceTableAdapter.Connection);
                    this._organismSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._organismSourceTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._organismSourceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._organismSourceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._organismSourceTableAdapter.Adapter);
                    }
                }
                if ((this._patientDetailsTableAdapter != null)) {
                    revertConnections.Add(this._patientDetailsTableAdapter, this._patientDetailsTableAdapter.Connection);
                    this._patientDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._patientDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._patientDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._patientDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._patientDetailsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._antibioticResultTableAdapter != null)) {
                    this._antibioticResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._antibioticResultTableAdapter]));
                    this._antibioticResultTableAdapter.Transaction = null;
                }
                if ((this._antibioticsSourceTableAdapter != null)) {
                    this._antibioticsSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._antibioticsSourceTableAdapter]));
                    this._antibioticsSourceTableAdapter.Transaction = null;
                }
                if ((this._boneMarrowResultsTableAdapter != null)) {
                    this._boneMarrowResultsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._boneMarrowResultsTableAdapter]));
                    this._boneMarrowResultsTableAdapter.Transaction = null;
                }
                if ((this._culturesResultTableAdapter != null)) {
                    this._culturesResultTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._culturesResultTableAdapter]));
                    this._culturesResultTableAdapter.Transaction = null;
                }
                if ((this._culturesSourceTableAdapter != null)) {
                    this._culturesSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._culturesSourceTableAdapter]));
                    this._culturesSourceTableAdapter.Transaction = null;
                }
                if ((this._imagesTableAdapter != null)) {
                    this._imagesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._imagesTableAdapter]));
                    this._imagesTableAdapter.Transaction = null;
                }
                if ((this._immunophenotypingTableAdapter != null)) {
                    this._immunophenotypingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._immunophenotypingTableAdapter]));
                    this._immunophenotypingTableAdapter.Transaction = null;
                }
                if ((this._organismSourceTableAdapter != null)) {
                    this._organismSourceTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._organismSourceTableAdapter]));
                    this._organismSourceTableAdapter.Transaction = null;
                }
                if ((this._patientDetailsTableAdapter != null)) {
                    this._patientDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._patientDetailsTableAdapter]));
                    this._patientDetailsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591