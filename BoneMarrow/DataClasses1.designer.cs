#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BoneMarrow
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BMDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAntibioticsSource(AntibioticsSource instance);
    partial void UpdateAntibioticsSource(AntibioticsSource instance);
    partial void DeleteAntibioticsSource(AntibioticsSource instance);
    partial void InsertBoneMarrowResult(BoneMarrowResult instance);
    partial void UpdateBoneMarrowResult(BoneMarrowResult instance);
    partial void DeleteBoneMarrowResult(BoneMarrowResult instance);
    partial void InsertCulturesSource(CulturesSource instance);
    partial void UpdateCulturesSource(CulturesSource instance);
    partial void DeleteCulturesSource(CulturesSource instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertImmunophenotyping(Immunophenotyping instance);
    partial void UpdateImmunophenotyping(Immunophenotyping instance);
    partial void DeleteImmunophenotyping(Immunophenotyping instance);
    partial void InsertOrganismSource(OrganismSource instance);
    partial void UpdateOrganismSource(OrganismSource instance);
    partial void DeleteOrganismSource(OrganismSource instance);
    partial void InsertPatientDetail(PatientDetail instance);
    partial void UpdatePatientDetail(PatientDetail instance);
    partial void DeletePatientDetail(PatientDetail instance);
    partial void InsertAntibioticResult(AntibioticResult instance);
    partial void UpdateAntibioticResult(AntibioticResult instance);
    partial void DeleteAntibioticResult(AntibioticResult instance);
    partial void InsertCulturesResult(CulturesResult instance);
    partial void UpdateCulturesResult(CulturesResult instance);
    partial void DeleteCulturesResult(CulturesResult instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BoneMarrow.Properties.Settings.Default.BMDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AntibioticsSource> AntibioticsSources
		{
			get
			{
				return this.GetTable<AntibioticsSource>();
			}
		}
		
		public System.Data.Linq.Table<BoneMarrowResult> BoneMarrowResults
		{
			get
			{
				return this.GetTable<BoneMarrowResult>();
			}
		}
		
		public System.Data.Linq.Table<CulturesSource> CulturesSources
		{
			get
			{
				return this.GetTable<CulturesSource>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Immunophenotyping> Immunophenotypings
		{
			get
			{
				return this.GetTable<Immunophenotyping>();
			}
		}
		
		public System.Data.Linq.Table<OrganismSource> OrganismSources
		{
			get
			{
				return this.GetTable<OrganismSource>();
			}
		}
		
		public System.Data.Linq.Table<PatientDetail> PatientDetails
		{
			get
			{
				return this.GetTable<PatientDetail>();
			}
		}
		
		public System.Data.Linq.Table<AntibioticResult> AntibioticResults
		{
			get
			{
				return this.GetTable<AntibioticResult>();
			}
		}
		
		public System.Data.Linq.Table<CulturesResult> CulturesResults
		{
			get
			{
				return this.GetTable<CulturesResult>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AntibioticsSource")]
	public partial class AntibioticsSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AntibioticUID;
		
		private string _AntibioticName;
		
		private string _AntibioticAbbreviation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAntibioticUIDChanging(int value);
    partial void OnAntibioticUIDChanged();
    partial void OnAntibioticNameChanging(string value);
    partial void OnAntibioticNameChanged();
    partial void OnAntibioticAbbreviationChanging(string value);
    partial void OnAntibioticAbbreviationChanged();
    #endregion
		
		public AntibioticsSource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AntibioticUID
		{
			get
			{
				return this._AntibioticUID;
			}
			set
			{
				if ((this._AntibioticUID != value))
				{
					this.OnAntibioticUIDChanging(value);
					this.SendPropertyChanging();
					this._AntibioticUID = value;
					this.SendPropertyChanged("AntibioticUID");
					this.OnAntibioticUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticName", DbType="NVarChar(MAX)")]
		public string AntibioticName
		{
			get
			{
				return this._AntibioticName;
			}
			set
			{
				if ((this._AntibioticName != value))
				{
					this.OnAntibioticNameChanging(value);
					this.SendPropertyChanging();
					this._AntibioticName = value;
					this.SendPropertyChanged("AntibioticName");
					this.OnAntibioticNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticAbbreviation", DbType="NVarChar(MAX)")]
		public string AntibioticAbbreviation
		{
			get
			{
				return this._AntibioticAbbreviation;
			}
			set
			{
				if ((this._AntibioticAbbreviation != value))
				{
					this.OnAntibioticAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._AntibioticAbbreviation = value;
					this.SendPropertyChanged("AntibioticAbbreviation");
					this.OnAntibioticAbbreviationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoneMarrowResults")]
	public partial class BoneMarrowResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ID;
		
		private string _BMBsite;
		
		private string _BMAspSite;
		
		private string _BMB_HistoExamin;
		
		private string _BMAspComment;
		
		private System.Nullable<decimal> _Blasts;
		
		private System.Nullable<decimal> _Promyelocytes;
		
		private System.Nullable<decimal> _Myelocytes;
		
		private System.Nullable<decimal> _Juvenile;
		
		private System.Nullable<decimal> _Staff;
		
		private System.Nullable<decimal> _Segmented;
		
		private System.Nullable<decimal> _Lymphocytes;
		
		private System.Nullable<decimal> _Monocytes;
		
		private System.Nullable<decimal> _Eosinophils;
		
		private System.Nullable<decimal> _Basophils;
		
		private System.Nullable<decimal> _Normoblasts;
		
		private System.Nullable<decimal> _PlasmaCells;
		
		private string _BoneHardness;
		
		private System.Nullable<decimal> _BoneSize;
		
		private string _BMBconclusion;
		
		private string _BMAconclusion;
		
		private int _Uni2;
		
		private string _PhenotypeImmuPhen;
		
		private string _CommentImmuPhen;
		
		private string _ConclusionImmuPheno;
		
		private string _CytoTestName;
		
		private string _CytoSpecimen;
		
		private System.Nullable<decimal> _CytoChromosomeCount45;
		
		private System.Nullable<decimal> _CytoChromosomeCount46;
		
		private System.Nullable<decimal> _CytoChromosomeCount47;
		
		private System.Nullable<decimal> _CytoChromosomeCountTotal;
		
		private System.Nullable<decimal> _CytoCellsCounted45;
		
		private System.Nullable<decimal> _CytoCellsCounted46;
		
		private System.Nullable<decimal> _CytoCellsCounted47;
		
		private System.Nullable<decimal> _CytoCellsCounted4Total;
		
		private System.Nullable<decimal> _CytoCellsPhotographed45;
		
		private System.Nullable<decimal> _CytoCellsPhotographed46;
		
		private System.Nullable<decimal> _CytoCellsPhotographed47;
		
		private System.Nullable<decimal> _CytoCellsPhotographedTotal;
		
		private System.Nullable<decimal> _CytoCellsKayrotyped45;
		
		private System.Nullable<decimal> _CytoCellsKayrotyped46;
		
		private System.Nullable<decimal> _CytoCellsKayrotyped47;
		
		private System.Nullable<decimal> _CytoCellsKayrotypedTotal;
		
		private string _CytoKaryotype;
		
		private string _CytoInterpretation;
		
		private string _CytoRecommendation;
		
		private EntityRef<PatientDetail> _PatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnBMBsiteChanging(string value);
    partial void OnBMBsiteChanged();
    partial void OnBMAspSiteChanging(string value);
    partial void OnBMAspSiteChanged();
    partial void OnBMB_HistoExaminChanging(string value);
    partial void OnBMB_HistoExaminChanged();
    partial void OnBMAspCommentChanging(string value);
    partial void OnBMAspCommentChanged();
    partial void OnBlastsChanging(System.Nullable<decimal> value);
    partial void OnBlastsChanged();
    partial void OnPromyelocytesChanging(System.Nullable<decimal> value);
    partial void OnPromyelocytesChanged();
    partial void OnMyelocytesChanging(System.Nullable<decimal> value);
    partial void OnMyelocytesChanged();
    partial void OnJuvenileChanging(System.Nullable<decimal> value);
    partial void OnJuvenileChanged();
    partial void OnStaffChanging(System.Nullable<decimal> value);
    partial void OnStaffChanged();
    partial void OnSegmentedChanging(System.Nullable<decimal> value);
    partial void OnSegmentedChanged();
    partial void OnLymphocytesChanging(System.Nullable<decimal> value);
    partial void OnLymphocytesChanged();
    partial void OnMonocytesChanging(System.Nullable<decimal> value);
    partial void OnMonocytesChanged();
    partial void OnEosinophilsChanging(System.Nullable<decimal> value);
    partial void OnEosinophilsChanged();
    partial void OnBasophilsChanging(System.Nullable<decimal> value);
    partial void OnBasophilsChanged();
    partial void OnNormoblastsChanging(System.Nullable<decimal> value);
    partial void OnNormoblastsChanged();
    partial void OnPlasmaCellsChanging(System.Nullable<decimal> value);
    partial void OnPlasmaCellsChanged();
    partial void OnBoneHardnessChanging(string value);
    partial void OnBoneHardnessChanged();
    partial void OnBoneSizeChanging(System.Nullable<decimal> value);
    partial void OnBoneSizeChanged();
    partial void OnBMBconclusionChanging(string value);
    partial void OnBMBconclusionChanged();
    partial void OnBMAconclusionChanging(string value);
    partial void OnBMAconclusionChanged();
    partial void OnUni2Changing(int value);
    partial void OnUni2Changed();
    partial void OnPhenotypeImmuPhenChanging(string value);
    partial void OnPhenotypeImmuPhenChanged();
    partial void OnCommentImmuPhenChanging(string value);
    partial void OnCommentImmuPhenChanged();
    partial void OnConclusionImmuPhenoChanging(string value);
    partial void OnConclusionImmuPhenoChanged();
    partial void OnCytoTestNameChanging(string value);
    partial void OnCytoTestNameChanged();
    partial void OnCytoSpecimenChanging(string value);
    partial void OnCytoSpecimenChanged();
    partial void OnCytoChromosomeCount45Changing(System.Nullable<decimal> value);
    partial void OnCytoChromosomeCount45Changed();
    partial void OnCytoChromosomeCount46Changing(System.Nullable<decimal> value);
    partial void OnCytoChromosomeCount46Changed();
    partial void OnCytoChromosomeCount47Changing(System.Nullable<decimal> value);
    partial void OnCytoChromosomeCount47Changed();
    partial void OnCytoChromosomeCountTotalChanging(System.Nullable<decimal> value);
    partial void OnCytoChromosomeCountTotalChanged();
    partial void OnCytoCellsCounted45Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsCounted45Changed();
    partial void OnCytoCellsCounted46Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsCounted46Changed();
    partial void OnCytoCellsCounted47Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsCounted47Changed();
    partial void OnCytoCellsCounted4TotalChanging(System.Nullable<decimal> value);
    partial void OnCytoCellsCounted4TotalChanged();
    partial void OnCytoCellsPhotographed45Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsPhotographed45Changed();
    partial void OnCytoCellsPhotographed46Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsPhotographed46Changed();
    partial void OnCytoCellsPhotographed47Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsPhotographed47Changed();
    partial void OnCytoCellsPhotographedTotalChanging(System.Nullable<decimal> value);
    partial void OnCytoCellsPhotographedTotalChanged();
    partial void OnCytoCellsKayrotyped45Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsKayrotyped45Changed();
    partial void OnCytoCellsKayrotyped46Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsKayrotyped46Changed();
    partial void OnCytoCellsKayrotyped47Changing(System.Nullable<decimal> value);
    partial void OnCytoCellsKayrotyped47Changed();
    partial void OnCytoCellsKayrotypedTotalChanging(System.Nullable<decimal> value);
    partial void OnCytoCellsKayrotypedTotalChanged();
    partial void OnCytoKaryotypeChanging(string value);
    partial void OnCytoKaryotypeChanged();
    partial void OnCytoInterpretationChanging(string value);
    partial void OnCytoInterpretationChanged();
    partial void OnCytoRecommendationChanging(string value);
    partial void OnCytoRecommendationChanged();
    #endregion
		
		public BoneMarrowResult()
		{
			this._PatientDetail = default(EntityRef<PatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._PatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMBsite", DbType="NVarChar(MAX)")]
		public string BMBsite
		{
			get
			{
				return this._BMBsite;
			}
			set
			{
				if ((this._BMBsite != value))
				{
					this.OnBMBsiteChanging(value);
					this.SendPropertyChanging();
					this._BMBsite = value;
					this.SendPropertyChanged("BMBsite");
					this.OnBMBsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMAspSite", DbType="NVarChar(MAX)")]
		public string BMAspSite
		{
			get
			{
				return this._BMAspSite;
			}
			set
			{
				if ((this._BMAspSite != value))
				{
					this.OnBMAspSiteChanging(value);
					this.SendPropertyChanging();
					this._BMAspSite = value;
					this.SendPropertyChanged("BMAspSite");
					this.OnBMAspSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMB_HistoExamin", DbType="NVarChar(MAX)")]
		public string BMB_HistoExamin
		{
			get
			{
				return this._BMB_HistoExamin;
			}
			set
			{
				if ((this._BMB_HistoExamin != value))
				{
					this.OnBMB_HistoExaminChanging(value);
					this.SendPropertyChanging();
					this._BMB_HistoExamin = value;
					this.SendPropertyChanged("BMB_HistoExamin");
					this.OnBMB_HistoExaminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMAspComment", DbType="NVarChar(MAX)")]
		public string BMAspComment
		{
			get
			{
				return this._BMAspComment;
			}
			set
			{
				if ((this._BMAspComment != value))
				{
					this.OnBMAspCommentChanging(value);
					this.SendPropertyChanging();
					this._BMAspComment = value;
					this.SendPropertyChanged("BMAspComment");
					this.OnBMAspCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blasts", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Blasts
		{
			get
			{
				return this._Blasts;
			}
			set
			{
				if ((this._Blasts != value))
				{
					this.OnBlastsChanging(value);
					this.SendPropertyChanging();
					this._Blasts = value;
					this.SendPropertyChanged("Blasts");
					this.OnBlastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promyelocytes", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Promyelocytes
		{
			get
			{
				return this._Promyelocytes;
			}
			set
			{
				if ((this._Promyelocytes != value))
				{
					this.OnPromyelocytesChanging(value);
					this.SendPropertyChanging();
					this._Promyelocytes = value;
					this.SendPropertyChanged("Promyelocytes");
					this.OnPromyelocytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Myelocytes", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Myelocytes
		{
			get
			{
				return this._Myelocytes;
			}
			set
			{
				if ((this._Myelocytes != value))
				{
					this.OnMyelocytesChanging(value);
					this.SendPropertyChanging();
					this._Myelocytes = value;
					this.SendPropertyChanged("Myelocytes");
					this.OnMyelocytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Juvenile", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Juvenile
		{
			get
			{
				return this._Juvenile;
			}
			set
			{
				if ((this._Juvenile != value))
				{
					this.OnJuvenileChanging(value);
					this.SendPropertyChanging();
					this._Juvenile = value;
					this.SendPropertyChanged("Juvenile");
					this.OnJuvenileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				if ((this._Staff != value))
				{
					this.OnStaffChanging(value);
					this.SendPropertyChanging();
					this._Staff = value;
					this.SendPropertyChanged("Staff");
					this.OnStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segmented", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Segmented
		{
			get
			{
				return this._Segmented;
			}
			set
			{
				if ((this._Segmented != value))
				{
					this.OnSegmentedChanging(value);
					this.SendPropertyChanging();
					this._Segmented = value;
					this.SendPropertyChanged("Segmented");
					this.OnSegmentedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lymphocytes", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Lymphocytes
		{
			get
			{
				return this._Lymphocytes;
			}
			set
			{
				if ((this._Lymphocytes != value))
				{
					this.OnLymphocytesChanging(value);
					this.SendPropertyChanging();
					this._Lymphocytes = value;
					this.SendPropertyChanged("Lymphocytes");
					this.OnLymphocytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monocytes", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Monocytes
		{
			get
			{
				return this._Monocytes;
			}
			set
			{
				if ((this._Monocytes != value))
				{
					this.OnMonocytesChanging(value);
					this.SendPropertyChanging();
					this._Monocytes = value;
					this.SendPropertyChanged("Monocytes");
					this.OnMonocytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eosinophils", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Eosinophils
		{
			get
			{
				return this._Eosinophils;
			}
			set
			{
				if ((this._Eosinophils != value))
				{
					this.OnEosinophilsChanging(value);
					this.SendPropertyChanging();
					this._Eosinophils = value;
					this.SendPropertyChanged("Eosinophils");
					this.OnEosinophilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Basophils", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Basophils
		{
			get
			{
				return this._Basophils;
			}
			set
			{
				if ((this._Basophils != value))
				{
					this.OnBasophilsChanging(value);
					this.SendPropertyChanging();
					this._Basophils = value;
					this.SendPropertyChanged("Basophils");
					this.OnBasophilsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normoblasts", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Normoblasts
		{
			get
			{
				return this._Normoblasts;
			}
			set
			{
				if ((this._Normoblasts != value))
				{
					this.OnNormoblastsChanging(value);
					this.SendPropertyChanging();
					this._Normoblasts = value;
					this.SendPropertyChanged("Normoblasts");
					this.OnNormoblastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlasmaCells", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PlasmaCells
		{
			get
			{
				return this._PlasmaCells;
			}
			set
			{
				if ((this._PlasmaCells != value))
				{
					this.OnPlasmaCellsChanging(value);
					this.SendPropertyChanging();
					this._PlasmaCells = value;
					this.SendPropertyChanged("PlasmaCells");
					this.OnPlasmaCellsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneHardness", DbType="NVarChar(MAX)")]
		public string BoneHardness
		{
			get
			{
				return this._BoneHardness;
			}
			set
			{
				if ((this._BoneHardness != value))
				{
					this.OnBoneHardnessChanging(value);
					this.SendPropertyChanging();
					this._BoneHardness = value;
					this.SendPropertyChanged("BoneHardness");
					this.OnBoneHardnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneSize", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BoneSize
		{
			get
			{
				return this._BoneSize;
			}
			set
			{
				if ((this._BoneSize != value))
				{
					this.OnBoneSizeChanging(value);
					this.SendPropertyChanging();
					this._BoneSize = value;
					this.SendPropertyChanged("BoneSize");
					this.OnBoneSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMBconclusion", DbType="NVarChar(MAX)")]
		public string BMBconclusion
		{
			get
			{
				return this._BMBconclusion;
			}
			set
			{
				if ((this._BMBconclusion != value))
				{
					this.OnBMBconclusionChanging(value);
					this.SendPropertyChanging();
					this._BMBconclusion = value;
					this.SendPropertyChanged("BMBconclusion");
					this.OnBMBconclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMAconclusion", DbType="NVarChar(MAX)")]
		public string BMAconclusion
		{
			get
			{
				return this._BMAconclusion;
			}
			set
			{
				if ((this._BMAconclusion != value))
				{
					this.OnBMAconclusionChanging(value);
					this.SendPropertyChanging();
					this._BMAconclusion = value;
					this.SendPropertyChanged("BMAconclusion");
					this.OnBMAconclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uni2", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Uni2
		{
			get
			{
				return this._Uni2;
			}
			set
			{
				if ((this._Uni2 != value))
				{
					this.OnUni2Changing(value);
					this.SendPropertyChanging();
					this._Uni2 = value;
					this.SendPropertyChanged("Uni2");
					this.OnUni2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhenotypeImmuPhen", DbType="NVarChar(MAX)")]
		public string PhenotypeImmuPhen
		{
			get
			{
				return this._PhenotypeImmuPhen;
			}
			set
			{
				if ((this._PhenotypeImmuPhen != value))
				{
					this.OnPhenotypeImmuPhenChanging(value);
					this.SendPropertyChanging();
					this._PhenotypeImmuPhen = value;
					this.SendPropertyChanged("PhenotypeImmuPhen");
					this.OnPhenotypeImmuPhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentImmuPhen", DbType="NVarChar(MAX)")]
		public string CommentImmuPhen
		{
			get
			{
				return this._CommentImmuPhen;
			}
			set
			{
				if ((this._CommentImmuPhen != value))
				{
					this.OnCommentImmuPhenChanging(value);
					this.SendPropertyChanging();
					this._CommentImmuPhen = value;
					this.SendPropertyChanged("CommentImmuPhen");
					this.OnCommentImmuPhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConclusionImmuPheno", DbType="NVarChar(MAX)")]
		public string ConclusionImmuPheno
		{
			get
			{
				return this._ConclusionImmuPheno;
			}
			set
			{
				if ((this._ConclusionImmuPheno != value))
				{
					this.OnConclusionImmuPhenoChanging(value);
					this.SendPropertyChanging();
					this._ConclusionImmuPheno = value;
					this.SendPropertyChanged("ConclusionImmuPheno");
					this.OnConclusionImmuPhenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoTestName", DbType="NVarChar(MAX)")]
		public string CytoTestName
		{
			get
			{
				return this._CytoTestName;
			}
			set
			{
				if ((this._CytoTestName != value))
				{
					this.OnCytoTestNameChanging(value);
					this.SendPropertyChanging();
					this._CytoTestName = value;
					this.SendPropertyChanged("CytoTestName");
					this.OnCytoTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoSpecimen", DbType="NVarChar(MAX)")]
		public string CytoSpecimen
		{
			get
			{
				return this._CytoSpecimen;
			}
			set
			{
				if ((this._CytoSpecimen != value))
				{
					this.OnCytoSpecimenChanging(value);
					this.SendPropertyChanging();
					this._CytoSpecimen = value;
					this.SendPropertyChanged("CytoSpecimen");
					this.OnCytoSpecimenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoChromosomeCount45", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoChromosomeCount45
		{
			get
			{
				return this._CytoChromosomeCount45;
			}
			set
			{
				if ((this._CytoChromosomeCount45 != value))
				{
					this.OnCytoChromosomeCount45Changing(value);
					this.SendPropertyChanging();
					this._CytoChromosomeCount45 = value;
					this.SendPropertyChanged("CytoChromosomeCount45");
					this.OnCytoChromosomeCount45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoChromosomeCount46", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoChromosomeCount46
		{
			get
			{
				return this._CytoChromosomeCount46;
			}
			set
			{
				if ((this._CytoChromosomeCount46 != value))
				{
					this.OnCytoChromosomeCount46Changing(value);
					this.SendPropertyChanging();
					this._CytoChromosomeCount46 = value;
					this.SendPropertyChanged("CytoChromosomeCount46");
					this.OnCytoChromosomeCount46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoChromosomeCount47", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoChromosomeCount47
		{
			get
			{
				return this._CytoChromosomeCount47;
			}
			set
			{
				if ((this._CytoChromosomeCount47 != value))
				{
					this.OnCytoChromosomeCount47Changing(value);
					this.SendPropertyChanging();
					this._CytoChromosomeCount47 = value;
					this.SendPropertyChanged("CytoChromosomeCount47");
					this.OnCytoChromosomeCount47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoChromosomeCountTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoChromosomeCountTotal
		{
			get
			{
				return this._CytoChromosomeCountTotal;
			}
			set
			{
				if ((this._CytoChromosomeCountTotal != value))
				{
					this.OnCytoChromosomeCountTotalChanging(value);
					this.SendPropertyChanging();
					this._CytoChromosomeCountTotal = value;
					this.SendPropertyChanged("CytoChromosomeCountTotal");
					this.OnCytoChromosomeCountTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsCounted45", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsCounted45
		{
			get
			{
				return this._CytoCellsCounted45;
			}
			set
			{
				if ((this._CytoCellsCounted45 != value))
				{
					this.OnCytoCellsCounted45Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsCounted45 = value;
					this.SendPropertyChanged("CytoCellsCounted45");
					this.OnCytoCellsCounted45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsCounted46", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsCounted46
		{
			get
			{
				return this._CytoCellsCounted46;
			}
			set
			{
				if ((this._CytoCellsCounted46 != value))
				{
					this.OnCytoCellsCounted46Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsCounted46 = value;
					this.SendPropertyChanged("CytoCellsCounted46");
					this.OnCytoCellsCounted46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsCounted47", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsCounted47
		{
			get
			{
				return this._CytoCellsCounted47;
			}
			set
			{
				if ((this._CytoCellsCounted47 != value))
				{
					this.OnCytoCellsCounted47Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsCounted47 = value;
					this.SendPropertyChanged("CytoCellsCounted47");
					this.OnCytoCellsCounted47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsCounted4Total", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsCounted4Total
		{
			get
			{
				return this._CytoCellsCounted4Total;
			}
			set
			{
				if ((this._CytoCellsCounted4Total != value))
				{
					this.OnCytoCellsCounted4TotalChanging(value);
					this.SendPropertyChanging();
					this._CytoCellsCounted4Total = value;
					this.SendPropertyChanged("CytoCellsCounted4Total");
					this.OnCytoCellsCounted4TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsPhotographed45", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsPhotographed45
		{
			get
			{
				return this._CytoCellsPhotographed45;
			}
			set
			{
				if ((this._CytoCellsPhotographed45 != value))
				{
					this.OnCytoCellsPhotographed45Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsPhotographed45 = value;
					this.SendPropertyChanged("CytoCellsPhotographed45");
					this.OnCytoCellsPhotographed45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsPhotographed46", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsPhotographed46
		{
			get
			{
				return this._CytoCellsPhotographed46;
			}
			set
			{
				if ((this._CytoCellsPhotographed46 != value))
				{
					this.OnCytoCellsPhotographed46Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsPhotographed46 = value;
					this.SendPropertyChanged("CytoCellsPhotographed46");
					this.OnCytoCellsPhotographed46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsPhotographed47", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsPhotographed47
		{
			get
			{
				return this._CytoCellsPhotographed47;
			}
			set
			{
				if ((this._CytoCellsPhotographed47 != value))
				{
					this.OnCytoCellsPhotographed47Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsPhotographed47 = value;
					this.SendPropertyChanged("CytoCellsPhotographed47");
					this.OnCytoCellsPhotographed47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsPhotographedTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsPhotographedTotal
		{
			get
			{
				return this._CytoCellsPhotographedTotal;
			}
			set
			{
				if ((this._CytoCellsPhotographedTotal != value))
				{
					this.OnCytoCellsPhotographedTotalChanging(value);
					this.SendPropertyChanging();
					this._CytoCellsPhotographedTotal = value;
					this.SendPropertyChanged("CytoCellsPhotographedTotal");
					this.OnCytoCellsPhotographedTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsKayrotyped45", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsKayrotyped45
		{
			get
			{
				return this._CytoCellsKayrotyped45;
			}
			set
			{
				if ((this._CytoCellsKayrotyped45 != value))
				{
					this.OnCytoCellsKayrotyped45Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsKayrotyped45 = value;
					this.SendPropertyChanged("CytoCellsKayrotyped45");
					this.OnCytoCellsKayrotyped45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsKayrotyped46", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsKayrotyped46
		{
			get
			{
				return this._CytoCellsKayrotyped46;
			}
			set
			{
				if ((this._CytoCellsKayrotyped46 != value))
				{
					this.OnCytoCellsKayrotyped46Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsKayrotyped46 = value;
					this.SendPropertyChanged("CytoCellsKayrotyped46");
					this.OnCytoCellsKayrotyped46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsKayrotyped47", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsKayrotyped47
		{
			get
			{
				return this._CytoCellsKayrotyped47;
			}
			set
			{
				if ((this._CytoCellsKayrotyped47 != value))
				{
					this.OnCytoCellsKayrotyped47Changing(value);
					this.SendPropertyChanging();
					this._CytoCellsKayrotyped47 = value;
					this.SendPropertyChanged("CytoCellsKayrotyped47");
					this.OnCytoCellsKayrotyped47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoCellsKayrotypedTotal", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CytoCellsKayrotypedTotal
		{
			get
			{
				return this._CytoCellsKayrotypedTotal;
			}
			set
			{
				if ((this._CytoCellsKayrotypedTotal != value))
				{
					this.OnCytoCellsKayrotypedTotalChanging(value);
					this.SendPropertyChanging();
					this._CytoCellsKayrotypedTotal = value;
					this.SendPropertyChanged("CytoCellsKayrotypedTotal");
					this.OnCytoCellsKayrotypedTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoKaryotype", DbType="NVarChar(MAX)")]
		public string CytoKaryotype
		{
			get
			{
				return this._CytoKaryotype;
			}
			set
			{
				if ((this._CytoKaryotype != value))
				{
					this.OnCytoKaryotypeChanging(value);
					this.SendPropertyChanging();
					this._CytoKaryotype = value;
					this.SendPropertyChanged("CytoKaryotype");
					this.OnCytoKaryotypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoInterpretation", DbType="NVarChar(MAX)")]
		public string CytoInterpretation
		{
			get
			{
				return this._CytoInterpretation;
			}
			set
			{
				if ((this._CytoInterpretation != value))
				{
					this.OnCytoInterpretationChanging(value);
					this.SendPropertyChanging();
					this._CytoInterpretation = value;
					this.SendPropertyChanged("CytoInterpretation");
					this.OnCytoInterpretationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CytoRecommendation", DbType="NVarChar(MAX)")]
		public string CytoRecommendation
		{
			get
			{
				return this._CytoRecommendation;
			}
			set
			{
				if ((this._CytoRecommendation != value))
				{
					this.OnCytoRecommendationChanging(value);
					this.SendPropertyChanging();
					this._CytoRecommendation = value;
					this.SendPropertyChanged("CytoRecommendation");
					this.OnCytoRecommendationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_BoneMarrowResult", Storage="_PatientDetail", ThisKey="ID", OtherKey="PatientID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PatientDetail PatientDetail
		{
			get
			{
				return this._PatientDetail.Entity;
			}
			set
			{
				PatientDetail previousValue = this._PatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._PatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientDetail.Entity = null;
						previousValue.BoneMarrowResults.Remove(this);
					}
					this._PatientDetail.Entity = value;
					if ((value != null))
					{
						value.BoneMarrowResults.Add(this);
						this._ID = value.PatientID;
					}
					else
					{
						this._ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CulturesSource")]
	public partial class CulturesSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CultureUID;
		
		private string _CultureName;
		
		private EntitySet<CulturesResult> _CulturesResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCultureUIDChanging(int value);
    partial void OnCultureUIDChanged();
    partial void OnCultureNameChanging(string value);
    partial void OnCultureNameChanged();
    #endregion
		
		public CulturesSource()
		{
			this._CulturesResults = new EntitySet<CulturesResult>(new Action<CulturesResult>(this.attach_CulturesResults), new Action<CulturesResult>(this.detach_CulturesResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CultureUID
		{
			get
			{
				return this._CultureUID;
			}
			set
			{
				if ((this._CultureUID != value))
				{
					this.OnCultureUIDChanging(value);
					this.SendPropertyChanging();
					this._CultureUID = value;
					this.SendPropertyChanged("CultureUID");
					this.OnCultureUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureName", DbType="NVarChar(MAX)")]
		public string CultureName
		{
			get
			{
				return this._CultureName;
			}
			set
			{
				if ((this._CultureName != value))
				{
					this.OnCultureNameChanging(value);
					this.SendPropertyChanging();
					this._CultureName = value;
					this.SendPropertyChanged("CultureName");
					this.OnCultureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CulturesSource_CulturesResult", Storage="_CulturesResults", ThisKey="CultureUID", OtherKey="CultureUID")]
		public EntitySet<CulturesResult> CulturesResults
		{
			get
			{
				return this._CulturesResults;
			}
			set
			{
				this._CulturesResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.CulturesSource = this;
		}
		
		private void detach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.CulturesSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _ID;
		
		private System.Data.Linq.Binary _Img1;
		
		private System.Data.Linq.Binary _Img2;
		
		private System.Data.Linq.Binary _Img3;
		
		private System.Data.Linq.Binary _Img4;
		
		private System.Data.Linq.Binary _Img5;
		
		private System.Data.Linq.Binary _Img6;
		
		private System.Data.Linq.Binary _Img7;
		
		private string _ImgName1;
		
		private string _ImgName2;
		
		private string _ImgName3;
		
		private string _ImgName4;
		
		private string _ImgName5;
		
		private string _ImgName6;
		
		private string _ImgName7;
		
		private int _Uni;
		
		private EntityRef<PatientDetail> _PatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnImg1Changing(System.Data.Linq.Binary value);
    partial void OnImg1Changed();
    partial void OnImg2Changing(System.Data.Linq.Binary value);
    partial void OnImg2Changed();
    partial void OnImg3Changing(System.Data.Linq.Binary value);
    partial void OnImg3Changed();
    partial void OnImg4Changing(System.Data.Linq.Binary value);
    partial void OnImg4Changed();
    partial void OnImg5Changing(System.Data.Linq.Binary value);
    partial void OnImg5Changed();
    partial void OnImg6Changing(System.Data.Linq.Binary value);
    partial void OnImg6Changed();
    partial void OnImg7Changing(System.Data.Linq.Binary value);
    partial void OnImg7Changed();
    partial void OnImgName1Changing(string value);
    partial void OnImgName1Changed();
    partial void OnImgName2Changing(string value);
    partial void OnImgName2Changed();
    partial void OnImgName3Changing(string value);
    partial void OnImgName3Changed();
    partial void OnImgName4Changing(string value);
    partial void OnImgName4Changed();
    partial void OnImgName5Changing(string value);
    partial void OnImgName5Changed();
    partial void OnImgName6Changing(string value);
    partial void OnImgName6Changed();
    partial void OnImgName7Changing(string value);
    partial void OnImgName7Changed();
    partial void OnUniChanging(int value);
    partial void OnUniChanged();
    #endregion
		
		public Image()
		{
			this._PatientDetail = default(EntityRef<PatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._PatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img1", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img1
		{
			get
			{
				return this._Img1;
			}
			set
			{
				if ((this._Img1 != value))
				{
					this.OnImg1Changing(value);
					this.SendPropertyChanging();
					this._Img1 = value;
					this.SendPropertyChanged("Img1");
					this.OnImg1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img2", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img2
		{
			get
			{
				return this._Img2;
			}
			set
			{
				if ((this._Img2 != value))
				{
					this.OnImg2Changing(value);
					this.SendPropertyChanging();
					this._Img2 = value;
					this.SendPropertyChanged("Img2");
					this.OnImg2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img3", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img3
		{
			get
			{
				return this._Img3;
			}
			set
			{
				if ((this._Img3 != value))
				{
					this.OnImg3Changing(value);
					this.SendPropertyChanging();
					this._Img3 = value;
					this.SendPropertyChanged("Img3");
					this.OnImg3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img4", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img4
		{
			get
			{
				return this._Img4;
			}
			set
			{
				if ((this._Img4 != value))
				{
					this.OnImg4Changing(value);
					this.SendPropertyChanging();
					this._Img4 = value;
					this.SendPropertyChanged("Img4");
					this.OnImg4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img5", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img5
		{
			get
			{
				return this._Img5;
			}
			set
			{
				if ((this._Img5 != value))
				{
					this.OnImg5Changing(value);
					this.SendPropertyChanging();
					this._Img5 = value;
					this.SendPropertyChanged("Img5");
					this.OnImg5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img6", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img6
		{
			get
			{
				return this._Img6;
			}
			set
			{
				if ((this._Img6 != value))
				{
					this.OnImg6Changing(value);
					this.SendPropertyChanging();
					this._Img6 = value;
					this.SendPropertyChanged("Img6");
					this.OnImg6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img7", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Img7
		{
			get
			{
				return this._Img7;
			}
			set
			{
				if ((this._Img7 != value))
				{
					this.OnImg7Changing(value);
					this.SendPropertyChanging();
					this._Img7 = value;
					this.SendPropertyChanged("Img7");
					this.OnImg7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName1", DbType="NVarChar(MAX)")]
		public string ImgName1
		{
			get
			{
				return this._ImgName1;
			}
			set
			{
				if ((this._ImgName1 != value))
				{
					this.OnImgName1Changing(value);
					this.SendPropertyChanging();
					this._ImgName1 = value;
					this.SendPropertyChanged("ImgName1");
					this.OnImgName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName2", DbType="NVarChar(MAX)")]
		public string ImgName2
		{
			get
			{
				return this._ImgName2;
			}
			set
			{
				if ((this._ImgName2 != value))
				{
					this.OnImgName2Changing(value);
					this.SendPropertyChanging();
					this._ImgName2 = value;
					this.SendPropertyChanged("ImgName2");
					this.OnImgName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName3", DbType="NVarChar(MAX)")]
		public string ImgName3
		{
			get
			{
				return this._ImgName3;
			}
			set
			{
				if ((this._ImgName3 != value))
				{
					this.OnImgName3Changing(value);
					this.SendPropertyChanging();
					this._ImgName3 = value;
					this.SendPropertyChanged("ImgName3");
					this.OnImgName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName4", DbType="NVarChar(MAX)")]
		public string ImgName4
		{
			get
			{
				return this._ImgName4;
			}
			set
			{
				if ((this._ImgName4 != value))
				{
					this.OnImgName4Changing(value);
					this.SendPropertyChanging();
					this._ImgName4 = value;
					this.SendPropertyChanged("ImgName4");
					this.OnImgName4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName5", DbType="NVarChar(MAX)")]
		public string ImgName5
		{
			get
			{
				return this._ImgName5;
			}
			set
			{
				if ((this._ImgName5 != value))
				{
					this.OnImgName5Changing(value);
					this.SendPropertyChanging();
					this._ImgName5 = value;
					this.SendPropertyChanged("ImgName5");
					this.OnImgName5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName6", DbType="NVarChar(MAX)")]
		public string ImgName6
		{
			get
			{
				return this._ImgName6;
			}
			set
			{
				if ((this._ImgName6 != value))
				{
					this.OnImgName6Changing(value);
					this.SendPropertyChanging();
					this._ImgName6 = value;
					this.SendPropertyChanged("ImgName6");
					this.OnImgName6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName7", DbType="NVarChar(MAX)")]
		public string ImgName7
		{
			get
			{
				return this._ImgName7;
			}
			set
			{
				if ((this._ImgName7 != value))
				{
					this.OnImgName7Changing(value);
					this.SendPropertyChanging();
					this._ImgName7 = value;
					this.SendPropertyChanged("ImgName7");
					this.OnImgName7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uni", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Uni
		{
			get
			{
				return this._Uni;
			}
			set
			{
				if ((this._Uni != value))
				{
					this.OnUniChanging(value);
					this.SendPropertyChanging();
					this._Uni = value;
					this.SendPropertyChanged("Uni");
					this.OnUniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Image", Storage="_PatientDetail", ThisKey="ID", OtherKey="PatientID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PatientDetail PatientDetail
		{
			get
			{
				return this._PatientDetail.Entity;
			}
			set
			{
				PatientDetail previousValue = this._PatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._PatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientDetail.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._PatientDetail.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._ID = value.PatientID;
					}
					else
					{
						this._ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Immunophenotyping")]
	public partial class Immunophenotyping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _PatientID;
		
		private string _MarkerName;
		
		private string _Percentage;
		
		private int _TabIDImmun;
		
		private string _Result;
		
		private EntityRef<PatientDetail> _PatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnMarkerNameChanging(string value);
    partial void OnMarkerNameChanged();
    partial void OnPercentageChanging(string value);
    partial void OnPercentageChanged();
    partial void OnTabIDImmunChanging(int value);
    partial void OnTabIDImmunChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    #endregion
		
		public Immunophenotyping()
		{
			this._PatientDetail = default(EntityRef<PatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._PatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkerName", DbType="NVarChar(MAX)")]
		public string MarkerName
		{
			get
			{
				return this._MarkerName;
			}
			set
			{
				if ((this._MarkerName != value))
				{
					this.OnMarkerNameChanging(value);
					this.SendPropertyChanging();
					this._MarkerName = value;
					this.SendPropertyChanged("MarkerName");
					this.OnMarkerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="NVarChar(MAX)")]
		public string Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabIDImmun", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TabIDImmun
		{
			get
			{
				return this._TabIDImmun;
			}
			set
			{
				if ((this._TabIDImmun != value))
				{
					this.OnTabIDImmunChanging(value);
					this.SendPropertyChanging();
					this._TabIDImmun = value;
					this.SendPropertyChanged("TabIDImmun");
					this.OnTabIDImmunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Immunophenotyping", Storage="_PatientDetail", ThisKey="PatientID", OtherKey="PatientID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PatientDetail PatientDetail
		{
			get
			{
				return this._PatientDetail.Entity;
			}
			set
			{
				PatientDetail previousValue = this._PatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._PatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientDetail.Entity = null;
						previousValue.Immunophenotypings.Remove(this);
					}
					this._PatientDetail.Entity = value;
					if ((value != null))
					{
						value.Immunophenotypings.Add(this);
						this._PatientID = value.PatientID;
					}
					else
					{
						this._PatientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganismSource")]
	public partial class OrganismSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganismUID;
		
		private string _OrganismName;
		
		private EntitySet<CulturesResult> _CulturesResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganismUIDChanging(int value);
    partial void OnOrganismUIDChanged();
    partial void OnOrganismNameChanging(string value);
    partial void OnOrganismNameChanged();
    #endregion
		
		public OrganismSource()
		{
			this._CulturesResults = new EntitySet<CulturesResult>(new Action<CulturesResult>(this.attach_CulturesResults), new Action<CulturesResult>(this.detach_CulturesResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganismUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrganismUID
		{
			get
			{
				return this._OrganismUID;
			}
			set
			{
				if ((this._OrganismUID != value))
				{
					this.OnOrganismUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganismUID = value;
					this.SendPropertyChanged("OrganismUID");
					this.OnOrganismUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganismName", DbType="NVarChar(MAX)")]
		public string OrganismName
		{
			get
			{
				return this._OrganismName;
			}
			set
			{
				if ((this._OrganismName != value))
				{
					this.OnOrganismNameChanging(value);
					this.SendPropertyChanging();
					this._OrganismName = value;
					this.SendPropertyChanged("OrganismName");
					this.OnOrganismNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganismSource_CulturesResult", Storage="_CulturesResults", ThisKey="OrganismUID", OtherKey="OrganismUID")]
		public EntitySet<CulturesResult> CulturesResults
		{
			get
			{
				return this._CulturesResults;
			}
			set
			{
				this._CulturesResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.OrganismSource = this;
		}
		
		private void detach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.OrganismSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientDetails")]
	public partial class PatientDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientID;
		
		private string _PName;
		
		private string _DrName;
		
		private System.Nullable<decimal> _Age;
		
		private string _AgeType;
		
		private string _Gender;
		
		private string _email;
		
		private string _Adress;
		
		private System.Nullable<System.DateTime> _VisitDate;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
		private System.Nullable<bool> _Smoker;
		
		private System.Nullable<bool> _Pregnant;
		
		private System.Nullable<bool> _Fasting;
		
		private System.Nullable<float> _FastingHrs;
		
		private System.Nullable<bool> _GlandsMed;
		
		private string _GlandsMedName;
		
		private System.Nullable<bool> _Diabetic;
		
		private string _DiabetusMed;
		
		private EntitySet<BoneMarrowResult> _BoneMarrowResults;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<Immunophenotyping> _Immunophenotypings;
		
		private EntitySet<CulturesResult> _CulturesResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(int value);
    partial void OnPatientIDChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnDrNameChanging(string value);
    partial void OnDrNameChanged();
    partial void OnAgeChanging(System.Nullable<decimal> value);
    partial void OnAgeChanged();
    partial void OnAgeTypeChanging(string value);
    partial void OnAgeTypeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnVisitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitDateChanged();
    partial void OnResultDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResultDateChanged();
    partial void OnSmokerChanging(System.Nullable<bool> value);
    partial void OnSmokerChanged();
    partial void OnPregnantChanging(System.Nullable<bool> value);
    partial void OnPregnantChanged();
    partial void OnFastingChanging(System.Nullable<bool> value);
    partial void OnFastingChanged();
    partial void OnFastingHrsChanging(System.Nullable<float> value);
    partial void OnFastingHrsChanged();
    partial void OnGlandsMedChanging(System.Nullable<bool> value);
    partial void OnGlandsMedChanged();
    partial void OnGlandsMedNameChanging(string value);
    partial void OnGlandsMedNameChanged();
    partial void OnDiabeticChanging(System.Nullable<bool> value);
    partial void OnDiabeticChanged();
    partial void OnDiabetusMedChanging(string value);
    partial void OnDiabetusMedChanged();
    #endregion
		
		public PatientDetail()
		{
			this._BoneMarrowResults = new EntitySet<BoneMarrowResult>(new Action<BoneMarrowResult>(this.attach_BoneMarrowResults), new Action<BoneMarrowResult>(this.detach_BoneMarrowResults));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._Immunophenotypings = new EntitySet<Immunophenotyping>(new Action<Immunophenotyping>(this.attach_Immunophenotypings), new Action<Immunophenotyping>(this.detach_Immunophenotypings));
			this._CulturesResults = new EntitySet<CulturesResult>(new Action<CulturesResult>(this.attach_CulturesResults), new Action<CulturesResult>(this.detach_CulturesResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="NVarChar(MAX)")]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrName", DbType="NVarChar(MAX)")]
		public string DrName
		{
			get
			{
				return this._DrName;
			}
			set
			{
				if ((this._DrName != value))
				{
					this.OnDrNameChanging(value);
					this.SendPropertyChanging();
					this._DrName = value;
					this.SendPropertyChanged("DrName");
					this.OnDrNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeType", DbType="NVarChar(MAX)")]
		public string AgeType
		{
			get
			{
				return this._AgeType;
			}
			set
			{
				if ((this._AgeType != value))
				{
					this.OnAgeTypeChanging(value);
					this.SendPropertyChanging();
					this._AgeType = value;
					this.SendPropertyChanged("AgeType");
					this.OnAgeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(MAX)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smoker", DbType="Bit")]
		public System.Nullable<bool> Smoker
		{
			get
			{
				return this._Smoker;
			}
			set
			{
				if ((this._Smoker != value))
				{
					this.OnSmokerChanging(value);
					this.SendPropertyChanging();
					this._Smoker = value;
					this.SendPropertyChanged("Smoker");
					this.OnSmokerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pregnant", DbType="Bit")]
		public System.Nullable<bool> Pregnant
		{
			get
			{
				return this._Pregnant;
			}
			set
			{
				if ((this._Pregnant != value))
				{
					this.OnPregnantChanging(value);
					this.SendPropertyChanging();
					this._Pregnant = value;
					this.SendPropertyChanged("Pregnant");
					this.OnPregnantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fasting", DbType="Bit")]
		public System.Nullable<bool> Fasting
		{
			get
			{
				return this._Fasting;
			}
			set
			{
				if ((this._Fasting != value))
				{
					this.OnFastingChanging(value);
					this.SendPropertyChanging();
					this._Fasting = value;
					this.SendPropertyChanged("Fasting");
					this.OnFastingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FastingHrs", DbType="Real")]
		public System.Nullable<float> FastingHrs
		{
			get
			{
				return this._FastingHrs;
			}
			set
			{
				if ((this._FastingHrs != value))
				{
					this.OnFastingHrsChanging(value);
					this.SendPropertyChanging();
					this._FastingHrs = value;
					this.SendPropertyChanged("FastingHrs");
					this.OnFastingHrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlandsMed", DbType="Bit")]
		public System.Nullable<bool> GlandsMed
		{
			get
			{
				return this._GlandsMed;
			}
			set
			{
				if ((this._GlandsMed != value))
				{
					this.OnGlandsMedChanging(value);
					this.SendPropertyChanging();
					this._GlandsMed = value;
					this.SendPropertyChanged("GlandsMed");
					this.OnGlandsMedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlandsMedName", DbType="NVarChar(MAX)")]
		public string GlandsMedName
		{
			get
			{
				return this._GlandsMedName;
			}
			set
			{
				if ((this._GlandsMedName != value))
				{
					this.OnGlandsMedNameChanging(value);
					this.SendPropertyChanging();
					this._GlandsMedName = value;
					this.SendPropertyChanged("GlandsMedName");
					this.OnGlandsMedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diabetic", DbType="Bit")]
		public System.Nullable<bool> Diabetic
		{
			get
			{
				return this._Diabetic;
			}
			set
			{
				if ((this._Diabetic != value))
				{
					this.OnDiabeticChanging(value);
					this.SendPropertyChanging();
					this._Diabetic = value;
					this.SendPropertyChanged("Diabetic");
					this.OnDiabeticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabetusMed", DbType="NVarChar(MAX)")]
		public string DiabetusMed
		{
			get
			{
				return this._DiabetusMed;
			}
			set
			{
				if ((this._DiabetusMed != value))
				{
					this.OnDiabetusMedChanging(value);
					this.SendPropertyChanging();
					this._DiabetusMed = value;
					this.SendPropertyChanged("DiabetusMed");
					this.OnDiabetusMedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_BoneMarrowResult", Storage="_BoneMarrowResults", ThisKey="PatientID", OtherKey="ID")]
		public EntitySet<BoneMarrowResult> BoneMarrowResults
		{
			get
			{
				return this._BoneMarrowResults;
			}
			set
			{
				this._BoneMarrowResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Image", Storage="_Images", ThisKey="PatientID", OtherKey="ID")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Immunophenotyping", Storage="_Immunophenotypings", ThisKey="PatientID", OtherKey="PatientID")]
		public EntitySet<Immunophenotyping> Immunophenotypings
		{
			get
			{
				return this._Immunophenotypings;
			}
			set
			{
				this._Immunophenotypings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_CulturesResult", Storage="_CulturesResults", ThisKey="PatientID", OtherKey="PatientID")]
		public EntitySet<CulturesResult> CulturesResults
		{
			get
			{
				return this._CulturesResults;
			}
			set
			{
				this._CulturesResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BoneMarrowResults(BoneMarrowResult entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = this;
		}
		
		private void detach_BoneMarrowResults(BoneMarrowResult entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = null;
		}
		
		private void attach_Immunophenotypings(Immunophenotyping entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = this;
		}
		
		private void detach_Immunophenotypings(Immunophenotyping entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = null;
		}
		
		private void attach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = this;
		}
		
		private void detach_CulturesResults(CulturesResult entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AntibioticResult")]
	public partial class AntibioticResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CulturesResultsUID;
		
		private int _AntibioticResultUID;
		
		private string _AntibioticNameForResult;
		
		private string _AntibioticStatus;
		
		private EntityRef<CulturesResult> _CulturesResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCulturesResultsUIDChanging(System.Nullable<int> value);
    partial void OnCulturesResultsUIDChanged();
    partial void OnAntibioticResultUIDChanging(int value);
    partial void OnAntibioticResultUIDChanged();
    partial void OnAntibioticNameForResultChanging(string value);
    partial void OnAntibioticNameForResultChanged();
    partial void OnAntibioticStatusChanging(string value);
    partial void OnAntibioticStatusChanged();
    #endregion
		
		public AntibioticResult()
		{
			this._CulturesResult = default(EntityRef<CulturesResult>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CulturesResultsUID", DbType="Int")]
		public System.Nullable<int> CulturesResultsUID
		{
			get
			{
				return this._CulturesResultsUID;
			}
			set
			{
				if ((this._CulturesResultsUID != value))
				{
					if (this._CulturesResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCulturesResultsUIDChanging(value);
					this.SendPropertyChanging();
					this._CulturesResultsUID = value;
					this.SendPropertyChanged("CulturesResultsUID");
					this.OnCulturesResultsUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticResultUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AntibioticResultUID
		{
			get
			{
				return this._AntibioticResultUID;
			}
			set
			{
				if ((this._AntibioticResultUID != value))
				{
					this.OnAntibioticResultUIDChanging(value);
					this.SendPropertyChanging();
					this._AntibioticResultUID = value;
					this.SendPropertyChanged("AntibioticResultUID");
					this.OnAntibioticResultUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticNameForResult", DbType="NVarChar(MAX)")]
		public string AntibioticNameForResult
		{
			get
			{
				return this._AntibioticNameForResult;
			}
			set
			{
				if ((this._AntibioticNameForResult != value))
				{
					this.OnAntibioticNameForResultChanging(value);
					this.SendPropertyChanging();
					this._AntibioticNameForResult = value;
					this.SendPropertyChanged("AntibioticNameForResult");
					this.OnAntibioticNameForResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntibioticStatus", DbType="NVarChar(MAX)")]
		public string AntibioticStatus
		{
			get
			{
				return this._AntibioticStatus;
			}
			set
			{
				if ((this._AntibioticStatus != value))
				{
					this.OnAntibioticStatusChanging(value);
					this.SendPropertyChanging();
					this._AntibioticStatus = value;
					this.SendPropertyChanged("AntibioticStatus");
					this.OnAntibioticStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CulturesResult_AntibioticResult", Storage="_CulturesResult", ThisKey="CulturesResultsUID", OtherKey="CulturesResultsUID", IsForeignKey=true)]
		public CulturesResult CulturesResult
		{
			get
			{
				return this._CulturesResult.Entity;
			}
			set
			{
				CulturesResult previousValue = this._CulturesResult.Entity;
				if (((previousValue != value) 
							|| (this._CulturesResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CulturesResult.Entity = null;
						previousValue.AntibioticResults.Remove(this);
					}
					this._CulturesResult.Entity = value;
					if ((value != null))
					{
						value.AntibioticResults.Add(this);
						this._CulturesResultsUID = value.CulturesResultsUID;
					}
					else
					{
						this._CulturesResultsUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CulturesResult");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CulturesResult")]
	public partial class CulturesResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _PatientID;
		
		private System.Nullable<int> _CultureUID;
		
		private int _CulturesResultsUID;
		
		private string _DirectFilm;
		
		private string _PUS;
		
		private string _RBCs;
		
		private System.Nullable<int> _OrganismUID;
		
		private string _Epithelial;
		
		private string _NotesOrComment;
		
		private string _OtherInfo;
		
		private string _CultureCondition;
		
		private string _CultureNameForResult;
		
		private EntitySet<AntibioticResult> _AntibioticResults;
		
		private EntityRef<CulturesSource> _CulturesSource;
		
		private EntityRef<OrganismSource> _OrganismSource;
		
		private EntityRef<PatientDetail> _PatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnCultureUIDChanging(System.Nullable<int> value);
    partial void OnCultureUIDChanged();
    partial void OnCulturesResultsUIDChanging(int value);
    partial void OnCulturesResultsUIDChanged();
    partial void OnDirectFilmChanging(string value);
    partial void OnDirectFilmChanged();
    partial void OnPUSChanging(string value);
    partial void OnPUSChanged();
    partial void OnRBCsChanging(string value);
    partial void OnRBCsChanged();
    partial void OnOrganismUIDChanging(System.Nullable<int> value);
    partial void OnOrganismUIDChanged();
    partial void OnEpithelialChanging(string value);
    partial void OnEpithelialChanged();
    partial void OnNotesOrCommentChanging(string value);
    partial void OnNotesOrCommentChanged();
    partial void OnOtherInfoChanging(string value);
    partial void OnOtherInfoChanged();
    partial void OnCultureConditionChanging(string value);
    partial void OnCultureConditionChanged();
    partial void OnCultureNameForResultChanging(string value);
    partial void OnCultureNameForResultChanged();
    #endregion
		
		public CulturesResult()
		{
			this._AntibioticResults = new EntitySet<AntibioticResult>(new Action<AntibioticResult>(this.attach_AntibioticResults), new Action<AntibioticResult>(this.detach_AntibioticResults));
			this._CulturesSource = default(EntityRef<CulturesSource>);
			this._OrganismSource = default(EntityRef<OrganismSource>);
			this._PatientDetail = default(EntityRef<PatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					if (this._PatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureUID", DbType="Int")]
		public System.Nullable<int> CultureUID
		{
			get
			{
				return this._CultureUID;
			}
			set
			{
				if ((this._CultureUID != value))
				{
					if (this._CulturesSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCultureUIDChanging(value);
					this.SendPropertyChanging();
					this._CultureUID = value;
					this.SendPropertyChanged("CultureUID");
					this.OnCultureUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CulturesResultsUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CulturesResultsUID
		{
			get
			{
				return this._CulturesResultsUID;
			}
			set
			{
				if ((this._CulturesResultsUID != value))
				{
					this.OnCulturesResultsUIDChanging(value);
					this.SendPropertyChanging();
					this._CulturesResultsUID = value;
					this.SendPropertyChanged("CulturesResultsUID");
					this.OnCulturesResultsUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectFilm", DbType="NVarChar(MAX)")]
		public string DirectFilm
		{
			get
			{
				return this._DirectFilm;
			}
			set
			{
				if ((this._DirectFilm != value))
				{
					this.OnDirectFilmChanging(value);
					this.SendPropertyChanging();
					this._DirectFilm = value;
					this.SendPropertyChanged("DirectFilm");
					this.OnDirectFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUS", DbType="NVarChar(MAX)")]
		public string PUS
		{
			get
			{
				return this._PUS;
			}
			set
			{
				if ((this._PUS != value))
				{
					this.OnPUSChanging(value);
					this.SendPropertyChanging();
					this._PUS = value;
					this.SendPropertyChanged("PUS");
					this.OnPUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBCs", DbType="NVarChar(MAX)")]
		public string RBCs
		{
			get
			{
				return this._RBCs;
			}
			set
			{
				if ((this._RBCs != value))
				{
					this.OnRBCsChanging(value);
					this.SendPropertyChanging();
					this._RBCs = value;
					this.SendPropertyChanged("RBCs");
					this.OnRBCsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganismUID", DbType="Int")]
		public System.Nullable<int> OrganismUID
		{
			get
			{
				return this._OrganismUID;
			}
			set
			{
				if ((this._OrganismUID != value))
				{
					if (this._OrganismSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganismUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganismUID = value;
					this.SendPropertyChanged("OrganismUID");
					this.OnOrganismUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Epithelial", DbType="NVarChar(MAX)")]
		public string Epithelial
		{
			get
			{
				return this._Epithelial;
			}
			set
			{
				if ((this._Epithelial != value))
				{
					this.OnEpithelialChanging(value);
					this.SendPropertyChanging();
					this._Epithelial = value;
					this.SendPropertyChanged("Epithelial");
					this.OnEpithelialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotesOrComment", DbType="NVarChar(MAX)")]
		public string NotesOrComment
		{
			get
			{
				return this._NotesOrComment;
			}
			set
			{
				if ((this._NotesOrComment != value))
				{
					this.OnNotesOrCommentChanging(value);
					this.SendPropertyChanging();
					this._NotesOrComment = value;
					this.SendPropertyChanged("NotesOrComment");
					this.OnNotesOrCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInfo", DbType="NVarChar(MAX)")]
		public string OtherInfo
		{
			get
			{
				return this._OtherInfo;
			}
			set
			{
				if ((this._OtherInfo != value))
				{
					this.OnOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._OtherInfo = value;
					this.SendPropertyChanged("OtherInfo");
					this.OnOtherInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCondition", DbType="NVarChar(MAX)")]
		public string CultureCondition
		{
			get
			{
				return this._CultureCondition;
			}
			set
			{
				if ((this._CultureCondition != value))
				{
					this.OnCultureConditionChanging(value);
					this.SendPropertyChanging();
					this._CultureCondition = value;
					this.SendPropertyChanged("CultureCondition");
					this.OnCultureConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureNameForResult", DbType="NVarChar(MAX)")]
		public string CultureNameForResult
		{
			get
			{
				return this._CultureNameForResult;
			}
			set
			{
				if ((this._CultureNameForResult != value))
				{
					this.OnCultureNameForResultChanging(value);
					this.SendPropertyChanging();
					this._CultureNameForResult = value;
					this.SendPropertyChanged("CultureNameForResult");
					this.OnCultureNameForResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CulturesResult_AntibioticResult", Storage="_AntibioticResults", ThisKey="CulturesResultsUID", OtherKey="CulturesResultsUID")]
		public EntitySet<AntibioticResult> AntibioticResults
		{
			get
			{
				return this._AntibioticResults;
			}
			set
			{
				this._AntibioticResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CulturesSource_CulturesResult", Storage="_CulturesSource", ThisKey="CultureUID", OtherKey="CultureUID", IsForeignKey=true)]
		public CulturesSource CulturesSource
		{
			get
			{
				return this._CulturesSource.Entity;
			}
			set
			{
				CulturesSource previousValue = this._CulturesSource.Entity;
				if (((previousValue != value) 
							|| (this._CulturesSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CulturesSource.Entity = null;
						previousValue.CulturesResults.Remove(this);
					}
					this._CulturesSource.Entity = value;
					if ((value != null))
					{
						value.CulturesResults.Add(this);
						this._CultureUID = value.CultureUID;
					}
					else
					{
						this._CultureUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CulturesSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganismSource_CulturesResult", Storage="_OrganismSource", ThisKey="OrganismUID", OtherKey="OrganismUID", IsForeignKey=true)]
		public OrganismSource OrganismSource
		{
			get
			{
				return this._OrganismSource.Entity;
			}
			set
			{
				OrganismSource previousValue = this._OrganismSource.Entity;
				if (((previousValue != value) 
							|| (this._OrganismSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganismSource.Entity = null;
						previousValue.CulturesResults.Remove(this);
					}
					this._OrganismSource.Entity = value;
					if ((value != null))
					{
						value.CulturesResults.Add(this);
						this._OrganismUID = value.OrganismUID;
					}
					else
					{
						this._OrganismUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganismSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_CulturesResult", Storage="_PatientDetail", ThisKey="PatientID", OtherKey="PatientID", IsForeignKey=true)]
		public PatientDetail PatientDetail
		{
			get
			{
				return this._PatientDetail.Entity;
			}
			set
			{
				PatientDetail previousValue = this._PatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._PatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientDetail.Entity = null;
						previousValue.CulturesResults.Remove(this);
					}
					this._PatientDetail.Entity = value;
					if ((value != null))
					{
						value.CulturesResults.Add(this);
						this._PatientID = value.PatientID;
					}
					else
					{
						this._PatientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AntibioticResults(AntibioticResult entity)
		{
			this.SendPropertyChanging();
			entity.CulturesResult = this;
		}
		
		private void detach_AntibioticResults(AntibioticResult entity)
		{
			this.SendPropertyChanging();
			entity.CulturesResult = null;
		}
	}
}
#pragma warning restore 1591
